#!/usr/bin/env python3
"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –∏ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json
import sys

BASE_URL = "http://209.38.85.196:3000"
DELETED_SUPPLIER_ID = "cmc031m0c00ees2klbjgjnert"  # Island Organics Bali

def test_supplier_deletion():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω"""
    try:
        response = requests.get(f"{BASE_URL}/api/suppliers/{DELETED_SUPPLIER_ID}")
        if response.status_code == 404:
            print("‚úì –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω (404) - —É–¥–∞–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print(f"‚úó –ü–æ—Å—Ç–∞–≤—â–∏–∫ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except requests.RequestException as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {e}")
        return False

def test_prices_deletion():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Ü–µ–Ω—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —É–¥–∞–ª–µ–Ω—ã"""
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—ã —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        response = requests.get(f"{BASE_URL}/api/prices")
        if response.status_code == 200:
            prices = response.json()
            supplier_prices = [p for p in prices if p.get('supplierId') == DELETED_SUPPLIER_ID]
            if len(supplier_prices) == 0:
                print("‚úì –í—Å–µ —Ü–µ–Ω—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —É–¥–∞–ª–µ–Ω—ã")
                return True
            else:
                print(f"‚úó –ù–∞–π–¥–µ–Ω–æ {len(supplier_prices)} —Ü–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã")
                return False
        else:
            print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ü–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except requests.RequestException as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–Ω: {e}")
        return False

def test_uploads_deletion():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —É–¥–∞–ª–µ–Ω—ã"""
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        response = requests.get(f"{BASE_URL}/api/uploads")
        if response.status_code == 200:
            uploads = response.json()
            supplier_uploads = [u for u in uploads if u.get('supplierId') == DELETED_SUPPLIER_ID]
            if len(supplier_uploads) == 0:
                print("‚úì –í—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —É–¥–∞–ª–µ–Ω—ã")
                return True
            else:
                print(f"‚úó –ù–∞–π–¥–µ–Ω–æ {len(supplier_uploads)} –∑–∞–≥—Ä—É–∑–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã")
                return False
        else:
            print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∑–æ–∫ (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except requests.RequestException as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫: {e}")
        return False

def test_data_integrity():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
        response = requests.get(f"{BASE_URL}/api/suppliers")
        if response.status_code != 200:
            print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤")
            return False
        
        suppliers = response.json()
        print(f"‚úì –û—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: {len(suppliers)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
        total_prices = sum(s['_count']['prices'] for s in suppliers)
        total_uploads = sum(s['_count']['uploads'] for s in suppliers)
        
        print(f"‚úì –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–Ω: {total_prices}")
        print(f"‚úì –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∑–æ–∫: {total_uploads}")
        
        # –ù–∞–π–¥–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–∞–Ω–Ω—ã—Ö
        top_supplier = max(suppliers, key=lambda x: x['_count']['prices'])
        print(f"‚úì –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ü–µ–Ω: {top_supplier['name']} ({top_supplier['_count']['prices']} —Ü–µ–Ω)")
        
        return True
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def test_api_endpoints():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö API endpoints"""
    endpoints = [
        "/api/suppliers",
        "/api/prices",
        "/api/uploads"
    ]
    
    results = {}
    for endpoint in endpoints:
        try:
            response = requests.get(f"{BASE_URL}{endpoint}")
            results[endpoint] = {
                'status': response.status_code,
                'success': response.status_code == 200
            }
            if response.status_code == 200:
                data = response.json()
                results[endpoint]['count'] = len(data)
                print(f"‚úì {endpoint}: {len(data)} –∑–∞–ø–∏—Å–µ–π")
            else:
                print(f"‚úó {endpoint}: —Å—Ç–∞—Ç—É—Å {response.status_code}")
        except Exception as e:
            results[endpoint] = {'success': False, 'error': str(e)}
            print(f"‚úó {endpoint}: –æ—à–∏–±–∫–∞ - {e}")
    
    return all(r['success'] for r in results.values())

def main():
    print("=== –†–ê–°–®–ò–†–ï–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–î–ê–õ–ï–ù–ò–Ø –ü–û–°–¢–ê–í–©–ò–ö–ê ===\\n")
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ ID: {DELETED_SUPPLIER_ID}")
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ: Island Organics Bali")
    print(f"–î–æ–ª–∂–Ω–æ –±—ã–ª–æ –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–æ: 412 —Ü–µ–Ω, 2 –∑–∞–≥—Ä—É–∑–∫–∏\\n")
    
    tests = [
        ("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", test_supplier_deletion),
        ("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ü–µ–Ω", test_prices_deletion),
        ("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–æ–∫", test_uploads_deletion),
        ("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö", test_data_integrity),
        ("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints", test_api_endpoints),
    ]
    
    results = []
    
    for test_name, test_func in tests:
        print(f"\\n{test_name}:")
        try:
            result = test_func()
            results.append(result)
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úì –£–°–ü–ï–®–ù–û' if result else '‚úó –ù–ï–£–î–ê–ß–ù–û'}")
        except Exception as e:
            print(f"‚úó –û–®–ò–ë–ö–ê: {e}")
            results.append(False)
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print(f"\\n=== –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ ===")
    passed = sum(results)
    total = len(results)
    
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed}/{total}")
    print(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {passed/total*100:.1f}%")
    
    if passed == total:
        print(f"\\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print(f"–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ:")
        print(f"  ‚Ä¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω")
        print(f"  ‚Ä¢ –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã —É–¥–∞–ª–µ–Ω—ã")
        print(f"  ‚Ä¢ –í—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏ —É–¥–∞–ª–µ–Ω—ã")
        print(f"  ‚Ä¢ –¶–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
        print(f"  ‚Ä¢ API endpoints —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print(f"  ‚Ä¢ Force=true —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è")
    else:
        print(f"\\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
        print(f"–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.")
        sys.exit(1)

if __name__ == "__main__":
    main()