[tool:pytest]
# Pytest configuration for extraction pipeline tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80
    --benchmark-only
    --benchmark-sort=mean
    --benchmark-warmup=on
    --benchmark-warmup-iterations=2
    --benchmark-min-rounds=3

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    benchmark: Performance benchmark tests
    slow: Slow running tests
    ai: Tests requiring AI API calls
    redis: Tests requiring Redis
    pdf: PDF processing tests
    excel: Excel processing tests
    image: Image processing tests
    ocr: OCR tests
    classification: Document classification tests

# Test timeout
timeout = 300

# Minimum coverage percentage
minversion = 6.0

# Pytest plugins
required_plugins = 
    pytest-benchmark
    pytest-cov
    pytest-mock
    pytest-asyncio

# Benchmark configuration
benchmark_group_by = func
benchmark_min_time = 0.1
benchmark_max_time = 30.0
benchmark_min_rounds = 3
benchmark_timer = time.perf_counter
benchmark_disable_gc = false

# Coverage configuration
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */migrations/*
    */node_modules/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError