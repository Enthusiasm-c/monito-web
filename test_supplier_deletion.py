#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ Monito Web
"""

import requests
import json
import time
import sys
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options

BASE_URL = "http://209.38.85.196:3000"

def get_suppliers_via_api():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —á–µ—Ä–µ–∑ API"""
    try:
        response = requests.get(f"{BASE_URL}/api/suppliers")
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —á–µ—Ä–µ–∑ API: {e}")
        return None

def find_supplier_with_most_prices(suppliers):
    """–ù–∞–π—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ü–µ–Ω"""
    if not suppliers:
        return None
    
    max_prices = 0
    target_supplier = None
    
    for supplier in suppliers:
        price_count = supplier.get('_count', {}).get('prices', 0)
        if price_count > max_prices:
            max_prices = price_count
            target_supplier = supplier
    
    return target_supplier

def setup_driver():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ WebDriver –¥–ª—è Selenium"""
    chrome_options = Options()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    # –£–±–µ—Ä–µ–º headless —Ä–µ–∂–∏–º –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º
    # chrome_options.add_argument("--headless")
    
    try:
        driver = webdriver.Chrome(options=chrome_options)
        return driver
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ WebDriver: {e}")
        return None

def test_supplier_deletion(supplier_id, supplier_name, price_count):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    driver = setup_driver()
    if not driver:
        return False
    
    try:
        print(f"–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤...")
        driver.get(f"{BASE_URL}/admin/suppliers")
        
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        wait = WebDriverWait(driver, 10)
        
        print(f"–ò—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ '{supplier_name}' –≤ —Ç–∞–±–ª–∏—Ü–µ...")
        
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω–∞—à–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º
        supplier_row = None
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ —Ç–µ–∫—Å—Ç—É –∏–º–µ–Ω–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
            supplier_element = wait.until(
                EC.presence_of_element_located((By.XPATH, f"//td[contains(text(), '{supplier_name}')]"))
            )
            supplier_row = supplier_element.find_element(By.XPATH, "./..")
            print(f"‚úì –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫ '{supplier_name}'")
        except Exception as e:
            print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ '{supplier_name}': {e}")
            return False
        
        # –ò—â–µ–º –∫–Ω–æ–ø–∫—É Delete –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ
        try:
            delete_button = supplier_row.find_element(By.XPATH, ".//button[contains(text(), 'Delete') or contains(@class, 'delete')]")
            print(f"‚úì –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ Delete –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞")
        except Exception as e:
            print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É Delete: {e}")
            return False
        
        # –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Delete
        print(f"–ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É Delete...")
        delete_button.click()
        
        # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        try:
            modal = wait.until(
                EC.presence_of_element_located((By.XPATH, "//div[contains(@class, 'modal') or contains(@role, 'dialog')]"))
            )
            print(f"‚úì –ü–æ—è–≤–∏–ª–æ—Å—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
            
            # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É–¥–∞–ª—è–µ–º—ã—Ö –∑–∞–ø–∏—Å–µ–π
            modal_text = modal.text
            print(f"–¢–µ–∫—Å—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: {modal_text}")
            
            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            confirm_button = modal.find_element(By.XPATH, ".//button[contains(text(), 'Delete') or contains(text(), 'Confirm') or contains(text(), 'Yes')]")
            print(f"‚úì –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
            
        except Exception as e:
            print(f"‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {e}")
            return False
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
        print(f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ...")
        confirm_button.click()
        
        # –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        time.sleep(3)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞
        try:
            driver.refresh()
            time.sleep(2)
            
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å–Ω–æ–≤–∞
            try:
                driver.find_element(By.XPATH, f"//td[contains(text(), '{supplier_name}')]")
                print(f"‚úó –ü–æ—Å—Ç–∞–≤—â–∏–∫ '{supplier_name}' –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ")
                return False
            except:
                print(f"‚úì –ü–æ—Å—Ç–∞–≤—â–∏–∫ '{supplier_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞")
        
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–¥–∞–ª–µ–Ω–∏—è: {e}")
            return False
        
        return True
        
    except Exception as e:
        print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    
    finally:
        driver.quit()

def verify_deletion_via_api(supplier_id):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ API"""
    try:
        response = requests.get(f"{BASE_URL}/api/suppliers/{supplier_id}")
        if response.status_code == 404:
            print(f"‚úì API –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω (404)")
            return True
        else:
            print(f"‚úó API –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
            return False
    except requests.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–µ—Ä–µ–∑ API: {e}")
        return False

def main():
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –≤ Monito Web ===\n")
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
    print("1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —á–µ—Ä–µ–∑ API...")
    suppliers = get_suppliers_via_api()
    if not suppliers:
        print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤")
        sys.exit(1)
    
    print(f"‚úì –ü–æ–ª—É—á–µ–Ω–æ {len(suppliers)} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤")
    
    # 2. –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ü–µ–Ω
    print("\n2. –ò—â–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º price records...")
    target_supplier = find_supplier_with_most_prices(suppliers)
    
    if not target_supplier:
        print("‚úó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞")
        sys.exit(1)
    
    supplier_id = target_supplier['id']
    supplier_name = target_supplier['name']
    price_count = target_supplier['_count']['prices']
    upload_count = target_supplier['_count']['uploads']
    
    print(f"‚úì –í—ã–±—Ä–∞–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: '{supplier_name}'")
    print(f"  - ID: {supplier_id}")
    print(f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–Ω: {price_count}")
    print(f"  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∑–æ–∫: {upload_count}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    print(f"\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å...")
    success = test_supplier_deletion(supplier_id, supplier_name, price_count)
    
    if not success:
        print("‚úó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–æ—Å—å")
        sys.exit(1)
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API
    print(f"\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API...")
    api_success = verify_deletion_via_api(supplier_id)
    
    # 5. –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print(f"\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø ===")
    print(f"–ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier_name}")
    print(f"ID: {supplier_id}")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö price records: {price_count}")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö uploads: {upload_count}")
    print(f"–£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: {'‚úì –£–°–ü–ï–®–ù–û' if success else '‚úó –ù–ï–£–î–ê–ß–ù–û'}")
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ API: {'‚úì –£–°–ü–ï–®–ù–û' if api_success else '‚úó –ù–ï–£–î–ê–ß–ù–û'}")
    
    if success and api_success:
        print(f"\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print(f"–ü–æ—Å—Ç–∞–≤—â–∏–∫ '{supplier_name}' –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.")
    else:
        print(f"\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
        sys.exit(1)

if __name__ == "__main__":
    main()