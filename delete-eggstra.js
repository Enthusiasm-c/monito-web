const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function deleteLastEggstraData() {
  try {
    // –ù–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∞–π–ª Eggstra
    const lastEggstraFile = await prisma.file.findFirst({
      where: {
        fileName: {
          contains: 'EGGSTRA',
          mode: 'insensitive'
        }
      },
      orderBy: { createdAt: 'desc' },
      include: {
        products: true,
        supplier: true
      }
    });
    
    if (!lastEggstraFile) {
      console.log('‚ùå –§–∞–π–ª Eggstra –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log('üîç –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:');
    console.log(`   ID: ${lastEggstraFile.id}`);
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${lastEggstraFile.fileName}`);
    console.log(`   –¢–æ–≤–∞—Ä–æ–≤: ${lastEggstraFile.products.length}`);
    console.log(`   –ü–æ—Å—Ç–∞–≤—â–∏–∫: ${lastEggstraFile.supplier?.name || 'N/A'}`);
    console.log(`   –î–∞—Ç–∞: ${lastEggstraFile.createdAt}`);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –Ω–µ–≤–µ—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    console.log('\nüö® –ü—Ä–∏–º–µ—Ä—ã –Ω–µ–≤–µ—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:');
    lastEggstraFile.products.slice(0, 10).forEach((product, i) => {
      console.log(`   ${i+1}. "${product.name}" - ${product.price} (${product.unit})`);
    });
    
    // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
    const deletedProducts = await prisma.product.deleteMany({
      where: { fileId: lastEggstraFile.id }
    });
    console.log(`\n‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${deletedProducts.count}`);
    
    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
    await prisma.file.delete({
      where: { id: lastEggstraFile.id }
    });
    console.log(`‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${lastEggstraFile.fileName}`);
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω—É–∂–Ω–æ –ª–∏ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    if (lastEggstraFile.supplierId) {
      const supplierFiles = await prisma.file.findMany({
        where: { supplierId: lastEggstraFile.supplierId }
      });
      
      if (supplierFiles.length === 0 && lastEggstraFile.supplier) {
        await prisma.supplier.delete({
          where: { id: lastEggstraFile.supplierId }
        });
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: ${lastEggstraFile.supplier.name}`);
      }
    }
    
    console.log('\nüéâ –í—Å–µ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

deleteLastEggstraData();