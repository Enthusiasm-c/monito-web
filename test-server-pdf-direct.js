#!/usr/bin/env node

/**
 * –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ enhancedPdfExtractor –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è TypeScript
 */

const { spawn } = require('child_process');
const fs = require('fs');

async function testServerPdfDirect() {
  console.log('üß™ –ü–†–Ø–ú–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PDF‚ÜíImages‚ÜíGemini Flash 2.0 –ù–ê –°–ï–†–í–ï–†–ï');
  console.log('===========================================================');
  console.log('');

  try {
    const fileUrl = 'https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Island%20Organics%20Bali-wfQOZrvhymEkhEcTw2UjMLYurMsyUC.pdf';
    const fileName = 'Island Organics Bali.pdf';

    console.log(`üìÅ –§–∞–π–ª: ${fileName}`);
    console.log(`üîó URL: ${fileUrl}`);
    console.log('');

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
    const testScript = `
// –¢–µ—Å—Ç enhancedPdfExtractor —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π API –≤—ã–∑–æ–≤
import('../../app/services/enhancedPdfExtractor.js').then(async ({ enhancedPdfExtractor }) => {
  console.log('üîç PDF extraction starting: ${fileName}');
  console.log('üìÑ URL: ${fileUrl}');
  console.log('');

  const startTime = Date.now();
  
  try {
    const result = await enhancedPdfExtractor.extractFromPdf(
      '${fileUrl}',
      '${fileName}'
    );
    
    const endTime = Date.now();
    const totalTimeMs = endTime - startTime;
    
    console.log('');
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –ü–†–Ø–ú–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
    console.log('=====================================');
    console.log('  üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã:', result.products.length);
    console.log('  ‚è±Ô∏è  –í—Ä–µ–º—è:', totalTimeMs + 'ms (' + (totalTimeMs/1000).toFixed(1) + 's)');
    console.log('  ü§ñ –ú–µ—Ç–æ–¥:', result.extractionMethods.bestMethod);
    console.log('  ‚ùå –û—à–∏–±–∫–∏:', result.errors.length);
    console.log('  üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: $' + result.costUsd);
    console.log('');
    
    if (result.extractionMethods.step1_pdf_to_images) {
      console.log('  üìÑ Step 1 (PDF‚ÜíImages):', result.extractionMethods.step1_pdf_to_images);
    }
    if (result.extractionMethods.step2_gemini_flash_2_0) {
      console.log('  ü§ñ Step 2 (Gemini Flash 2.0):', result.extractionMethods.step2_gemini_flash_2_0);
    }
    console.log('');
    
    if (result.errors.length > 0) {
      console.log('‚ùå –û–®–ò–ë–ö–ò:');
      result.errors.slice(0, 5).forEach((error, i) => {
        console.log('  ' + (i+1) + '. ' + error);
      });
      console.log('');
    }
    
    if (result.products.length > 0) {
      console.log('‚úÖ –ü–ï–†–í–´–ï –ü–†–û–î–£–ö–¢–´:');
      result.products.slice(0, 3).forEach((product, i) => {
        console.log('  ' + (i+1) + '. ' + (product.name || '–ë–µ–∑—ã–º—è–Ω–Ω—ã–π') + ' - ' + (product.price || 'No price'));
      });
    }
    
    console.log('');
    console.log('üéâ –ü–†–Ø–ú–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!');
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:', error.message);
    console.error('‚ùå Stack:', error.stack);
    process.exit(1);
  }
}).catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', error.message);
  process.exit(1);
});
`;

    console.log('üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
    
    // –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    const sshProcess = spawn('ssh', [
      '-o', 'StrictHostKeyChecking=no',
      'root@209.38.85.196',
      `cd /opt/monito-web && cat > test-direct-pdf-extract.mjs << 'EOF'${testScript}EOF`
    ]);

    sshProcess.on('close', async (code) => {
      if (code !== 0) {
        throw new Error(`Failed to create test script: ${code}`);
      }
      
      console.log('‚úÖ –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω');
      console.log('üèÉ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç...');
      console.log('');

      const startTime = Date.now();

      // –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
      const runProcess = spawn('ssh', [
        '-o', 'StrictHostKeyChecking=no',
        'root@209.38.85.196',
        'cd /opt/monito-web && timeout 300 node --experimental-specifier-resolution=node test-direct-pdf-extract.mjs'
      ], {
        stdio: 'inherit'
      });

      runProcess.on('close', (runCode) => {
        const totalTime = Date.now() - startTime;
        console.log('');
        console.log(`‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: ${(totalTime/1000).toFixed(1)}s`);
        
        if (runCode === 0) {
          console.log('üéâ –ü–†–Ø–ú–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–°–ü–ï–®–ù–û!');
        } else {
          console.log(`‚ùå –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º: ${runCode}`);
        }
      });
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
    throw error;
  }
}

// –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç
if (require.main === module) {
  testServerPdfDirect().catch(error => {
    console.error('\nüí• –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è!');
    process.exit(1);
  });
}

module.exports = { testServerPdfDirect };