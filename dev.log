
> vercel-marketplace-neon@0.1.0 dev
> next dev

   ‚ñ≤ Next.js 15.1.6
   - Local:        http://localhost:3000
   - Network:      http://192.168.0.195:3000
   - Environments: .env

 ‚úì Starting...
 ‚úì Ready in 1954ms
 ‚úì Compiled /middleware in 90ms (98 modules)
[c2ea6f99-35f7-4887-8a64-fb42b7408c37] GET http://localhost:3000/api/stats
 ‚úì Compiled /api/stats in 228ms (331 modules)
 GET /api/stats 200 in 1047ms
[4c1bd3a3-b8e9-479f-8d38-631b384b1c66] POST http://localhost:3000/api/async-upload
 ‚úì Compiled /api/async-upload in 269ms (566 modules)
üöÄ Starting background job processor...
‚úÖ Background job processor started
üöÄ Async upload endpoint called
üìÅ Processing file: test-global-pricelist.pdf (0.28MB)
üìù Job queued: job_1749897690204_71z108wau for upload cmbw3witi0002oud7cra8shtg
üöÄ Starting job queue processor...
‚úÖ File queued for async processing: cmbw3witi0002oud7cra8shtg (job: job_1749897690204_71z108wau)
 POST /api/async-upload 200 in 4657ms
[5b74fdde-b1b0-426f-a34f-c32988fb5448] GET http://localhost:3000/api/async-upload?uploadId=cmbw3witi0002oud7cra8shtg
 GET /api/async-upload?uploadId=cmbw3witi0002oud7cra8shtg 200 in 114ms
[9fe62d09-d930-4e9d-99de-dbb02801a9cc] GET http://localhost:3000/api/async-upload?uploadId=cmbw3witi0002oud7cra8shtg
 GET /api/async-upload?uploadId=cmbw3witi0002oud7cra8shtg 200 in 48ms
[dc6d1008-13bb-4a3c-ab14-cc4f743112ba] POST http://localhost:3000/api/upload
 ‚úì Compiled /api/upload in 105ms (568 modules)
üöÄ Processing 1 files with unified processor
üöÄ Starting unified processing: test-global-pricelist.pdf (0.28MB)
üìÅ Created upload record: cmbw3xgmv0005oud74gn2w1q3
üîÑ Starting file extraction for application/pdf...
üöÄ Starting Gemini Flash 2.0 PDF processing: test-global-pricelist.pdf
üì§ Sending PDF to Gemini Flash 2.0 (0.28MB)
üì• Received response from Gemini Flash 2.0 (8669 characters)
üìä Parsed Gemini response: 73 products, supplier: NICO boulangerie
‚úÖ Gemini Flash 2.0 processing completed: 73 products in 33652ms
üì¶ Extracted 73 products
‚ö†Ô∏è Product count (73) exceeds batch limit of 50. Processing first 50 products only.
ü§ñ Starting ChatGPT o3-mini standardization for 50 products
 POST /api/upload 200 in 120352ms
[b42b8459-0654-4ed2-9bee-be70979f5920] GET http://localhost:3000/api/stats
 GET /api/stats 200 in 768ms
ChatGPT o3-mini raw response length: 7398
ChatGPT o3-mini content preview: [
  {
    "originalName": "Ciabatta",
    "standardizedName": "Bread Ciabatta",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Pita",
    "standardizedName": "Bread Pita",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Bagel",
    "standardizedName": "Bread Bagel",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
...
‚ùå Failed to parse ChatGPT o3 response: SyntaxError: Expected property name or '}' in JSON at position 7397 (line 306 column 4)
    at JSON.parse (<anonymous>)
    at parse (app/services/centralized/StandardizationService.ts:294:33)
    at parseStandardizationResponse (app/services/centralized/StandardizationService.ts:155:40)
    at async UnifiedFileProcessor.processUpload (app/services/centralized/UnifiedFileProcessor.ts:108:36)
    at async POST (app/api/upload/route.ts:38:23)
  292 |       }
  293 |
> 294 |       const parsedResults = JSON.parse(cleanContent);
      |                                 ^
  295 |       
  296 |       if (!Array.isArray(parsedResults)) {
  297 |         throw new Error('Response is not an array');
Raw response: [
  {
    "originalName": "Ciabatta",
    "standardizedName": "Bread Ciabatta",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Pita",
    "standardizedName": "Bread Pita",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Bagel",
    "standardizedName": "Bread Bagel",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Bagel Normal",
    "standardizedName": "Bagel Normal",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Burger Bun",
    "standardizedName": "Bun Burger",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Burger Bun Small",
    "standardizedName": "Bun Burger Small",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Bistro' Bun",
    "standardizedName": "Bun Bistro",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Hotdog Bun Normal",
    "standardizedName": "Bun Hotdog Normal",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Hotdog Bun Mini",
    "standardizedName": "Bun Hotdog Mini",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "English Muffin",
    "standardizedName": "Muffin English",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Pretzel",
    "standardizedName": "Bread Pretzel",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Pizza Base American",
    "standardizedName": "Base Pizza American",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Pizza Base Italian",
    "standardizedName": "Base Pizza Italian",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Baguette Big",
    "standardizedName": "Baguette Big",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Baguette Mini",
    "standardizedName": "Baguette Mini",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Sourdough Bun",
    "standardizedName": "Bun Sourdough",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Sourdough Baguette",
    "standardizedName": "Baguette Sourdough",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Panini",
    "standardizedName": "Bread Panini",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Sourdough Big",
    "standardizedName": "Bread Sourdough Big",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Sourdough Normal",
    "standardizedName": "Bread Sourdough Normal",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Multigrain Round",
    "standardizedName": "Bread Multigrain Round",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Loaf",
    "standardizedName": "Bread Loaf",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Sunflower Whole Wheat",
    "standardizedName": "Bread Sunflower Whole Wheat",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Country",
    "standardizedName": "Bread Country",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Toast Brown",
    "standardizedName": "Toast Brown",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Toast White",
    "standardizedName": "Toast White",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "GF English Muffin",
    "standardizedName": "Muffin English",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "GF Ciabatta",
    "standardizedName": "Bread Ciabatta",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "GF Bagel",
    "standardizedName": "Bread Bagel",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "GF Pizza Base",
    "standardizedName": "Base Pizza",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Mini Baguette",
    "standardizedName": "Baguette Mini",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "GF Burger Bun",
    "standardizedName": "Bun Burger",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Multiseeds Crackers",
    "standardizedName": "Crackers Multiseeds",
    "originalUnit": "kg",
    "standardizedUnit": "kg",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "Multiseeds Crackers",
    "standardizedName": "Crackers Multiseeds",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 100
  },
  {
    "originalName": "GF Stroopwafel",
    "standardizedName": "Bread Stroopwafel",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "bakery",
    "confidence": 90
  },
  {
    "originalName": "Sable' Chocolate Cashews",
    "standardizedName": "Snack Sable Chocolate Cashews",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "other",
    "confidence": 90
  },
  {
    "originalName": "Sable' Vanilla",
    "standardizedName": "Snack Sable Vanilla",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "other",
    "confidence": 90
  },
  {
    "originalName": "Sable' Lemon",
    "standardizedName": "Snack Sable Lemon",
    "originalUnit": "pcs",
    "standardizedUnit": "pcs",
    "category": "other",
    "confidence": 90
  },
  {

‚ùå ChatGPT o3-mini standardization failed: Error: Failed to parse ChatGPT o3 response: Expected property name or '}' in JSON at position 7397 (line 306 column 4)
    at StandardizationService.parseStandardizationResponse (app/services/centralized/StandardizationService.ts:328:12)
    at parseStandardizationResponse (app/services/centralized/StandardizationService.ts:155:40)
    at async UnifiedFileProcessor.processUpload (app/services/centralized/UnifiedFileProcessor.ts:108:36)
    at async POST (app/api/upload/route.ts:38:23)
  326 |       
  327 |       // No fallback - throw error if parsing fails
> 328 |       throw new Error(`Failed to parse ChatGPT o3 response: ${error instanceof Error ? error.message : 'Unknown parsing error'}`);
      |            ^
  329 |     }
  330 |   }
  331 |
‚ùå Unified processing failed: Error: OpenAI API Error: ChatGPT o3-mini standardization service is unavailable. Failed to parse ChatGPT o3 response: Expected property name or '}' in JSON at position 7397 (line 306 column 4)
    at StandardizationService.standardizeProducts (app/services/centralized/StandardizationService.ts:171:12)
    at async UnifiedFileProcessor.processUpload (app/services/centralized/UnifiedFileProcessor.ts:108:36)
    at async POST (app/api/upload/route.ts:38:23)
  169 |     } catch (error) {
  170 |       console.error('‚ùå ChatGPT o3-mini standardization failed:', error);
> 171 |       throw new Error(`OpenAI API Error: ChatGPT o3-mini standardization service is unavailable. ${error instanceof Error ? error.message : 'Unknown error'}`);
      |            ^
  172 |     }
  173 |   }
  174 |
üíæ Updated upload cmbw3xgmv0005oud74gn2w1q3 status to failed
[f89efda5-0825-4fc3-be4b-c46e184b0ede] POST http://localhost:3000/api/async-upload
üöÄ Starting background job processor...
‚úÖ Background job processor started
üöÄ Async upload endpoint called
üìÅ Processing file: test-widi-wiguna.xlsx (0.09MB)
üìù Job queued: job_1749897974096_upsn77q36 for upload cmbw42m7l0008oud7b50mfgcs
üöÄ Starting job queue processor...
‚úÖ File queued for async processing: cmbw42m7l0008oud7b50mfgcs (job: job_1749897974096_upsn77q36)
 POST /api/async-upload 200 in 2635ms
[952e7ba0-2c6f-4e3b-ac8e-c2738a3eec95] GET http://localhost:3000/api/async-upload?uploadId=cmbw42m7l0008oud7b50mfgcs
 GET /api/async-upload?uploadId=cmbw42m7l0008oud7b50mfgcs 200 in 92ms
[8c67c4a0-a9ff-44bb-a84e-e8b4cf381fca] POST http://localhost:3000/api/upload
üöÄ Processing 1 files with unified processor
üöÄ Starting unified processing: test-widi-wiguna.xlsx (0.09MB)
üìÅ Created upload record: cmbw435op000boud7ysf02iz8
üîÑ Starting file extraction for application/octet-stream...
üìä Processing Excel/CSV with Gemini Flash 2.0: test-widi-wiguna.xlsx
üì• Downloading file from: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/test-widi-wiguna-WqJjJLvdHbR90HkNe0oqW9EIlpxe50.xlsx
üì¶ Converting file content to array buffer...
ü§ñ Sending content to Gemini Flash 2.0 (10283 characters)...
‚ùå Excel/CSV processing failed: Expected double-quoted property name in JSON at position 22865 (line 1123 column 34)
‚è±Ô∏è  Failed after 39785ms
üè∑Ô∏è  Error category: parsing
‚ùå Unified processing failed: Error: No products extracted from file
    at UnifiedFileProcessor.processUpload (app/services/centralized/UnifiedFileProcessor.ts:102:14)
    at async POST (app/api/upload/route.ts:38:23)
  100 |
  101 |       if (extractionResult.products.length === 0) {
> 102 |         throw new Error('No products extracted from file');
      |              ^
  103 |       }
  104 |
  105 |       console.log(`üì¶ Extracted ${extractionResult.products.length} products`);
üíæ Updated upload cmbw435op000boud7ysf02iz8 status to failed
 POST /api/upload 200 in 41589ms
 ‚úì Compiled in 11ms
[2c5f0b6c-25bc-4145-8bef-53bc7f9cfb37] POST http://localhost:3000/api/upload
 ‚úì Compiled /api/upload in 83ms (312 modules)
üöÄ Processing 1 files with unified processor
üöÄ Starting unified processing: test-widi-wiguna.xlsx (0.09MB)
üìÅ Created upload record: cmbw45j04000eoud7y6xddt6o
üîÑ Starting file extraction for application/octet-stream...
üìä Processing Excel/CSV with Gemini Flash 2.0: test-widi-wiguna.xlsx
üì• Downloading file from: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/test-widi-wiguna-YcizB9GB7AlGuG0N85J06cShXP5oZx.xlsx
üì¶ Converting file content to array buffer...
ü§ñ Sending content to Gemini Flash 2.0 (10283 characters)...
üì¶ Extracted 30 products
ü§ñ Starting ChatGPT o3-mini standardization for 30 products
ChatGPT o3-mini raw response length: 5820
ChatGPT o3-mini content preview: [
  {
    "originalName": "Ares",
    "standardizedName": "Ares",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Asparagus",
    "standardizedName": "Asparagus",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Bean Sprout Long",
    "standardizedName": "Bean Sprout Long",
    "originalUnit": "KG.",
    "standardized...
‚úÖ ChatGPT o3-mini standardization completed: 30 products in 38967ms, 6258 tokens
üîß Standardized 30 products
‚úÖ Processing completed: cmbw45j04000eoud7y6xddt6o, 0 products stored, 50155ms
 POST /api/upload 200 in 50303ms
 ‚úì Compiled in 9ms
[ad42dca1-ed72-4b89-8dba-776a124509f3] POST http://localhost:3000/api/upload
 ‚úì Compiled /api/upload in 78ms (312 modules)
üöÄ Processing 1 files with unified processor
üöÄ Starting unified processing: test-widi-wiguna.xlsx (0.09MB)
üìÅ Created upload record: cmbw48jnk000ioud7e32p8im9
üîÑ Starting file extraction for application/octet-stream...
üìä Processing Excel/CSV with Gemini Flash 2.0: test-widi-wiguna.xlsx
üì• Downloading file from: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/test-widi-wiguna-ov4guGfuf70jwIWJwcTIA6glKp7qLz.xlsx
üì¶ Converting file content to array buffer...
ü§ñ Sending content to Gemini Flash 2.0 (10283 characters)...
‚ùå Excel/CSV processing failed: Unexpected end of JSON input
‚è±Ô∏è  Failed after 38450ms
üè∑Ô∏è  Error category: parsing
‚ùå Unified processing failed: Error: No products extracted from file
    at UnifiedFileProcessor.processUpload (app/services/centralized/UnifiedFileProcessor.ts:102:14)
    at async POST (app/api/upload/route.ts:38:23)
  100 |
  101 |       if (extractionResult.products.length === 0) {
> 102 |         throw new Error('No products extracted from file');
      |              ^
  103 |       }
  104 |
  105 |       console.log(`üì¶ Extracted ${extractionResult.products.length} products`);
üíæ Updated upload cmbw48jnk000ioud7e32p8im9 status to failed
 POST /api/upload 200 in 41789ms
 ‚úì Compiled in 54ms (347 modules)
[e69c65ae-4fb8-4096-a111-1e979c6d540b] POST http://localhost:3000/api/process-direct
 ‚úì Compiled /api/process-direct in 137ms (563 modules)
üöÄ Starting direct processing for upload: cmbw42m7l0008oud7b50mfgcs
üöÄ Starting async processing: test-widi-wiguna.xlsx
 POST /api/process-direct 200 in 1165ms
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw42m7l0008oud7b50mfgcs"
  },
  data: {
    processingDetails: {
      0: "{",
      ~
      1: "\"",
      2: "j",
      3: "o",
      4: "b",
      5: "I",
      6: "d",
      7: "\"",
      8: ":",
      9: "\"",
      10: "j",
      11: "o",
      12: "b",
      13: "_",
      14: "1",
      15: "7",
      16: "4",
      17: "9",
      18: "8",
      19: "9",
      20: "7",
      21: "9",
      22: "7",
      23: "4",
      24: "0",
      25: "9",
      26: "6",
      27: "_",
      28: "u",
      29: "p",
      30: "s",
      31: "n",
      32: "7",
      33: "7",
      34: "q",
      35: "3",
      36: "6",
      37: "\"",
      38: ",",
      39: "\"",
      40: "s",
      41: "t",
      42: "a",
      43: "g",
      44: "e",
      45: "\"",
      46: ":",
      47: "\"",
      48: "q",
      49: "u",
      50: "e",
      51: "u",
      52: "e",
      53: "d",
      54: "\"",
      55: ",",
      56: "\"",
      57: "p",
      58: "r",
      59: "o",
      60: "g",
      61: "r",
      62: "e",
      63: "s",
      64: "s",
      65: "\"",
      66: ":",
      67: "0",
      68: ",",
      69: "\"",
      70: "b",
      71: "a",
      72: "t",
      73: "c",
      74: "h",
      75: "S",
      76: "i",
      77: "z",
      78: "e",
      79: "\"",
      80: ":",
      81: "2",
      82: "5",
      83: "}",
      stage: "extracting",
      progress: 10,
      message: "Extracting data with Gemini Flash 2.0...",
      lastUpdated: "2025-06-14T10:52:45.844Z",
?     set?: String | Null
    }
  }
}

Unknown argument `0`. Did you mean `set`? Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:27:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
üìä Processing Excel/CSV with Gemini Flash 2.0: test-widi-wiguna.xlsx
üì• Downloading file from: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/test-widi-wiguna-Z5cBTRrJqAn5A0x1Sr8xz4PpGHi0PN.xlsx
üì¶ Converting file content to array buffer...
ü§ñ Sending content to Gemini Flash 2.0 (10283 characters)...
‚ùå Excel/CSV processing failed: Expected ',' or '}' after property value in JSON at position 22834 (line 1127 column 26)
‚è±Ô∏è  Failed after 38225ms
üè∑Ô∏è  Error category: parsing
‚ùå Async processing failed for test-widi-wiguna.xlsx: Error: No products extracted from file
    at AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:39:14)
  37 |       
  38 |       if (!extractionResult.products || extractionResult.products.length === 0) {
> 39 |         throw new Error('No products extracted from file');
     |              ^
  40 |       }
  41 |       
  42 |       console.log(`üì¶ Extracted ${extractionResult.products.length} products`);
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw42m7l0008oud7b50mfgcs"
  },
  data: {
    processingDetails: {
      0: "{",
      ~
      1: "\"",
      2: "j",
      3: "o",
      4: "b",
      5: "I",
      6: "d",
      7: "\"",
      8: ":",
      9: "\"",
      10: "j",
      11: "o",
      12: "b",
      13: "_",
      14: "1",
      15: "7",
      16: "4",
      17: "9",
      18: "8",
      19: "9",
      20: "7",
      21: "9",
      22: "7",
      23: "4",
      24: "0",
      25: "9",
      26: "6",
      27: "_",
      28: "u",
      29: "p",
      30: "s",
      31: "n",
      32: "7",
      33: "7",
      34: "q",
      35: "3",
      36: "6",
      37: "\"",
      38: ",",
      39: "\"",
      40: "s",
      41: "t",
      42: "a",
      43: "g",
      44: "e",
      45: "\"",
      46: ":",
      47: "\"",
      48: "q",
      49: "u",
      50: "e",
      51: "u",
      52: "e",
      53: "d",
      54: "\"",
      55: ",",
      56: "\"",
      57: "p",
      58: "r",
      59: "o",
      60: "g",
      61: "r",
      62: "e",
      63: "s",
      64: "s",
      65: "\"",
      66: ":",
      67: "0",
      68: ",",
      69: "\"",
      70: "b",
      71: "a",
      72: "t",
      73: "c",
      74: "h",
      75: "S",
      76: "i",
      77: "z",
      78: "e",
      79: "\"",
      80: ":",
      81: "2",
      82: "5",
      83: "}",
      stage: "failed",
      progress: 0,
      message: undefined,
      lastUpdated: "2025-06-14T10:53:24.194Z",
      error: "No products extracted from file",
?     set?: String | Null
    },
    status: "failed",
    errorMessage: "No products extracted from file"
  }
}

Unknown argument `0`. Did you mean `set`? Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:174:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Background processing failed: Error: No products extracted from file
    at AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:39:14)
  37 |       
  38 |       if (!extractionResult.products || extractionResult.products.length === 0) {
> 39 |         throw new Error('No products extracted from file');
     |              ^
  40 |       }
  41 |       
  42 |       console.log(`üì¶ Extracted ${extractionResult.products.length} products`);
 ‚úì Compiled in 11ms
[17de7560-a239-4268-a955-a4557ccda8d7] POST http://localhost:3000/api/upload
 ‚úì Compiled /api/upload in 75ms (313 modules)
üöÄ Processing 1 files with unified processor
üöÄ Starting unified processing: test-widi-wiguna.xlsx (0.09MB)
üìÅ Created upload record: cmbw4fp23000loud75gqbfz7x
üîÑ Starting file extraction for application/octet-stream...
üìä Processing Excel/CSV with batch processor: test-widi-wiguna.xlsx
üìä Processing Excel file in batches: test-widi-wiguna.xlsx
üìã Processing sheet: Sheet1
üîÑ Processing batch 1/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 2/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 3/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 4/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 5/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 6/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 7/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 8/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 9/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 10/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 11/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 12/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 13/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 14/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 15/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 16/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 17/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 18/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 19/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 20/34 (31 rows) from sheet Sheet1
 POST /api/upload 200 in 120296ms
üîÑ Processing batch 21/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 22/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 23/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 24/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 25/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 26/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 27/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 28/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 29/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 30/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 31/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 32/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 33/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 34/34 (10 rows) from sheet Sheet1
üìã Processing sheet: Sheet2
üìã Processing sheet: Sheet3
‚úÖ Excel batch processing completed: 587 products extracted
üì¶ Extracted 587 products
‚ö†Ô∏è Product count (587) exceeds batch limit of 50. Processing first 50 products only.
ü§ñ Starting ChatGPT o3-mini standardization for 50 products
 ‚úì Compiled in 10ms
ChatGPT o3-mini raw response length: 9651
ChatGPT o3-mini content preview: [
  {
    "originalName": "Ares",
    "standardizedName": "Ares",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "other",
    "confidence": 80
  },
  {
    "originalName": "Asparagus",
    "standardizedName": "Asparagus",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Bean Sprout Long",
    "standardizedName": "Bean Sprout Long",
    "originalUnit": "KG.",
    "standardizedUnit":...
‚úÖ ChatGPT o3-mini standardization completed: 50 products in 54468ms, 10394 tokens
üîß Standardized 50 products
‚úÖ Processing completed: cmbw4fp23000loud75gqbfz7x, 0 products stored, 257844ms
[27b38963-ec7d-48f1-aab9-851f55ad7656] POST http://localhost:3000/api/upload
 ‚úì Compiled /api/upload in 73ms (313 modules)
Upload processing error: TypeError: Content-Type was not one of "multipart/form-data" or "application/x-www-form-urlencoded".
    at async POST (app/api/upload/route.ts:8:21)
   6 | export async function POST(request: NextRequest) {
   7 |   try {
>  8 |     const formData = await request.formData();
     |                     ^
   9 |     const files = formData.getAll('files') as File[];
  10 |     const supplierId = formData.get('supplierId') as string | null;
  11 |     const autoApprove = formData.get('autoApprove') === 'true';
 POST /api/upload 500 in 128ms
[a4e9a496-c3ff-4cc0-8432-29b241c53543] POST http://localhost:3000/api/process-direct
 ‚úì Compiled /api/process-direct in 80ms (317 modules)
üöÄ Starting direct processing for upload: cmbw4fp23000loud75gqbfz7x
üöÄ Starting async processing: test-widi-wiguna.xlsx
 POST /api/process-direct 200 in 990ms
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "extracting",
      ~~~~~
      progress: 10,
      message: "Extracting data with Gemini Flash 2.0...",
      lastUpdated: "2025-06-14T11:02:38.908Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:27:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
üìä Processing Excel/CSV with batch processor: test-widi-wiguna.xlsx
üìä Processing Excel file in batches: test-widi-wiguna.xlsx
üìã Processing sheet: Sheet1
üîÑ Processing batch 1/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 2/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 3/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 4/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 5/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 6/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 7/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 8/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 9/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 10/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 11/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 12/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 13/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 14/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 15/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 16/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 17/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 18/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 19/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 20/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 21/34 (31 rows) from sheet Sheet1
‚ùå Batch 21 failed: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash-exp"},"quotaValue":"10"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"19s"}]
    at async ExcelBatchProcessor.processBatch (app/services/centralized/ExcelBatchProcessor.ts:192:23)
    at async ExcelBatchProcessor.processExcelInBatches (app/services/centralized/ExcelBatchProcessor.ts:76:32)
    at async UnifiedFileProcessor.processExcelOrCsv (app/services/centralized/UnifiedFileProcessor.ts:257:21)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:35:27)
  190 | - Process ALL rows in this batch thoroughly`;
  191 |
> 192 |     const aiResponse = await Promise.race([
      |                       ^
  193 |       this.model.generateContent(prompt),
  194 |       new Promise((_, reject) => 
  195 |         setTimeout(() => reject(new Error('Batch processing timeout after 60 seconds')), 60000) {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
üîÑ Processing batch 22/34 (31 rows) from sheet Sheet1
‚ùå Batch 22 failed: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash-exp"},"quotaValue":"10"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"18s"}]
    at async ExcelBatchProcessor.processBatch (app/services/centralized/ExcelBatchProcessor.ts:192:23)
    at async ExcelBatchProcessor.processExcelInBatches (app/services/centralized/ExcelBatchProcessor.ts:76:32)
    at async UnifiedFileProcessor.processExcelOrCsv (app/services/centralized/UnifiedFileProcessor.ts:257:21)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:35:27)
  190 | - Process ALL rows in this batch thoroughly`;
  191 |
> 192 |     const aiResponse = await Promise.race([
      |                       ^
  193 |       this.model.generateContent(prompt),
  194 |       new Promise((_, reject) => 
  195 |         setTimeout(() => reject(new Error('Batch processing timeout after 60 seconds')), 60000) {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
üîÑ Processing batch 23/34 (31 rows) from sheet Sheet1
‚ùå Batch 23 failed: Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-exp:generateContent: [429 Too Many Requests] You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits. [{"@type":"type.googleapis.com/google.rpc.QuotaFailure","violations":[{"quotaMetric":"generativelanguage.googleapis.com/generate_content_free_tier_requests","quotaId":"GenerateRequestsPerMinutePerProjectPerModel-FreeTier","quotaDimensions":{"location":"global","model":"gemini-2.0-flash-exp"},"quotaValue":"10"}]},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Learn more about Gemini API quotas","url":"https://ai.google.dev/gemini-api/docs/rate-limits"}]},{"@type":"type.googleapis.com/google.rpc.RetryInfo","retryDelay":"18s"}]
    at async ExcelBatchProcessor.processBatch (app/services/centralized/ExcelBatchProcessor.ts:192:23)
    at async ExcelBatchProcessor.processExcelInBatches (app/services/centralized/ExcelBatchProcessor.ts:76:32)
    at async UnifiedFileProcessor.processExcelOrCsv (app/services/centralized/UnifiedFileProcessor.ts:257:21)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:35:27)
  190 | - Process ALL rows in this batch thoroughly`;
  191 |
> 192 |     const aiResponse = await Promise.race([
      |                       ^
  193 |       this.model.generateContent(prompt),
  194 |       new Promise((_, reject) => 
  195 |         setTimeout(() => reject(new Error('Batch processing timeout after 60 seconds')), 60000) {
  status: 429,
  statusText: 'Too Many Requests',
  errorDetails: [Array]
}
üîÑ Processing batch 24/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 25/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 26/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 27/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 28/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 29/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 30/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 31/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 32/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 33/34 (31 rows) from sheet Sheet1
üîÑ Processing batch 34/34 (10 rows) from sheet Sheet1
üìã Processing sheet: Sheet2
üìã Processing sheet: Sheet3
‚úÖ Excel batch processing completed: 517 products extracted
üì¶ Extracted 517 products
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "extracted",
      ~~~~~
      progress: 25,
      message: "Extracted 517 products",
      lastUpdated: "2025-06-14T11:05:47.591Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:43:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
üìä Processing 517 products in 21 batches of 25
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 25,
      message: "Standardizing batch 1/21 (25 products)...",
      lastUpdated: "2025-06-14T11:05:47.692Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 1/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4857
ChatGPT o3-mini content preview: [
  {
    "originalName": "Ares",
    "standardizedName": "Ares",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Asparagus",
    "standardizedName": "Asparagus",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Bean Sprout Long",
    "standardizedName": "Bean Sprout Long",
    "originalUnit": "KG.",
    "standardized...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 31672ms, 6045 tokens
‚úÖ Batch 1 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 27,
      message: "Standardizing batch 2/21 (25 products)...",
      lastUpdated: "2025-06-14T11:06:20.554Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 2/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4808
ChatGPT o3-mini content preview: [
  {
    "originalName": "Chily Small Green",
    "standardizedName": "Chili Small Green",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Chily Small Red",
    "standardizedName": "Chili Small Red",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Chives",
    "standardizedName": "Chives",
    "originalUnit": "KG.",...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 36790ms, 7041 tokens
‚úÖ Batch 2 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 30,
      message: "Standardizing batch 3/21 (25 products)...",
      lastUpdated: "2025-06-14T11:06:58.533Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 3/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4706
ChatGPT o3-mini content preview: [
  {
    "originalName": "Kecicang",
    "standardizedName": "Kecicang",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "other",
    "confidence": 100
  },
  {
    "originalName": "Kemangi Leaf",
    "standardizedName": "Leaf Kemangi",
    "originalUnit": "KG",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Kencur",
    "standardizedName": "Kencur",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 54533ms, 10637 tokens
‚úÖ Batch 3 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 32,
      message: "Standardizing batch 4/21 (25 products)...",
      lastUpdated: "2025-06-14T11:07:54.926Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 4/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4780
ChatGPT o3-mini content preview: [
  {
    "originalName": "Singkong Leaf",
    "standardizedName": "Cassava Leaf",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Spinach Lokal",
    "standardizedName": "Spinach Local",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "vegetables",
    "confidence": 100
  },
  {
    "originalName": "Suji Leaf",
    "standardizedName": "Suji Leaf",
    "originalUnit": "Ikt",
    "s...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 38343ms, 7728 tokens
‚úÖ Batch 4 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 35,
      message: "Standardizing batch 5/21 (25 products)...",
      lastUpdated: "2025-06-14T11:08:34.458Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 5/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4680
ChatGPT o3-mini content preview: [
  {
    "originalName": "Bangkuang",
    "standardizedName": "Jicama",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "fruits",
    "confidence": 100
  },
  {
    "originalName": "Buah Naga",
    "standardizedName": "Dragonfruit",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "fruits",
    "confidence": 100
  },
  {
    "originalName": "Grape Black Local",
    "standardizedName": "Grape Black",
    "originalUnit": "KG.",
    "standardizedUni...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 45285ms, 8452 tokens
‚úÖ Batch 5 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 37,
      message: "Standardizing batch 6/21 (25 products)...",
      lastUpdated: "2025-06-14T11:09:20.941Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 6/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4779
ChatGPT o3-mini content preview: [
  {
    "originalName": "Tangerine Lumajang besar",
    "standardizedName": "Tangerine Lumajang",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "fruits",
    "confidence": 100
  },
  {
    "originalName": "Tangerine Kintamani",
    "standardizedName": "Tangerine Kintamani",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "fruits",
    "confidence": 100
  },
  {
    "originalName": "Water Melon Yellow",
    "standardizedName": "Watermelon Yell...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 47344ms, 8712 tokens
‚úÖ Batch 6 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 39,
      message: "Standardizing batch 7/21 (25 products)...",
      lastUpdated: "2025-06-14T11:10:09.472Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 7/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4812
ChatGPT o3-mini content preview: [
  {
    "originalName": "Baking powder",
    "standardizedName": "Powder Baking",
    "originalUnit": "can",
    "standardizedUnit": "can",
    "category": "other",
    "confidence": 100
  },
  {
    "originalName": "Tabasco 60ml",
    "standardizedName": "Sauce Tabasco",
    "originalUnit": "btl",
    "standardizedUnit": null,
    "category": "condiments",
    "confidence": 90
  },
  {
    "originalName": "Tepung segitiga biru",
    "standardizedName": "Flour",
    "originalUnit": "kg",
    "...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 52687ms, 9478 tokens
‚úÖ Batch 7 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 42,
      message: "Standardizing batch 8/21 (25 products)...",
      lastUpdated: "2025-06-14T11:11:03.351Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 8/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4756
ChatGPT o3-mini content preview: [
  {
    "originalName": "aplev vinegar",
    "standardizedName": "Vinegar Aplev",
    "originalUnit": "btl",
    "standardizedUnit": "bottle",
    "category": "other",
    "confidence": 95
  },
  {
    "originalName": "susu kental manis",
    "standardizedName": "Milk Condensed",
    "originalUnit": "can",
    "standardizedUnit": "can",
    "category": "other",
    "confidence": 95
  },
  {
    "originalName": "Minyak goreng 5 ltr",
    "standardizedName": "Oil Cooking",
    "originalUnit": "G...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 65256ms, 9796 tokens
‚úÖ Batch 8 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 44,
      message: "Standardizing batch 9/21 (25 products)...",
      lastUpdated: "2025-06-14T11:12:09.815Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 9/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4704
ChatGPT o3-mini content preview: [
  {
    "originalName": "wijen hitam",
    "standardizedName": "Sesame Black",
    "originalUnit": "Kg",
    "standardizedUnit": "kg",
    "category": "spices",
    "confidence": 100
  },
  {
    "originalName": "Telor ayam",
    "standardizedName": "Egg Chicken",
    "originalUnit": "krt",
    "standardizedUnit": null,
    "category": "dairy",
    "confidence": 80
  },
  {
    "originalName": "Gula Pasir",
    "standardizedName": "Sugar Granulated",
    "originalUnit": "KG.",
    "standardize...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 44319ms, 7315 tokens
‚úÖ Batch 9 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 46,
      message: "Standardizing batch 10/21 (25 products)...",
      lastUpdated: "2025-06-14T11:12:55.666Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 10/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4793
ChatGPT o3-mini content preview: [
  {
    "originalName": "Kecap Manis",
    "standardizedName": "Sauce Sweet",
    "originalUnit": "Botol",
    "standardizedUnit": "bottle",
    "category": "condiments",
    "confidence": 100
  },
  {
    "originalName": "Saus Sambal",
    "standardizedName": "Sauce Chili",
    "originalUnit": "Botol",
    "standardizedUnit": "bottle",
    "category": "condiments",
    "confidence": 100
  },
  {
    "originalName": "Gula Pasir",
    "standardizedName": "Sugar Granulated",
    "originalUnit": ...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 43338ms, 6918 tokens
‚úÖ Batch 10 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 49,
      message: "Standardizing batch 11/21 (25 products)...",
      lastUpdated: "2025-06-14T11:13:40.204Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 11/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4751
ChatGPT o3-mini content preview: [
  {
    "originalName": "Garam",
    "standardizedName": "Salt",
    "originalUnit": "Bungkus",
    "standardizedUnit": "pack",
    "category": "condiments",
    "confidence": 100
  },
  {
    "originalName": "Kecap Manis",
    "standardizedName": "Sauce Sweet",
    "originalUnit": "Botol",
    "standardizedUnit": "bottle",
    "category": "condiments",
    "confidence": 100
  },
  {
    "originalName": "Saus Sambal",
    "standardizedName": "Sauce Chili",
    "originalUnit": "Botol",
    "sta...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 47723ms, 7458 tokens
‚úÖ Batch 11 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 51,
      message: "Standardizing batch 12/21 (25 products)...",
      lastUpdated: "2025-06-14T11:14:29.119Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 12/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4687
ChatGPT o3-mini content preview: [
  {
    "originalName": "Garam",
    "standardizedName": "Salt",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "condiments",
    "confidence": 95
  },
  {
    "originalName": "Kecap Manis",
    "standardizedName": "Sauce Sweet",
    "originalUnit": "Botol",
    "standardizedUnit": "bottle",
    "category": "condiments",
    "confidence": 95
  },
  {
    "originalName": "Saus Sambal",
    "standardizedName": "Sauce Chili",
    "originalUnit": "Botol",
    "standardi...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 55298ms, 8861 tokens
‚úÖ Batch 12 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 54,
      message: "Standardizing batch 13/21 (25 products)...",
      lastUpdated: "2025-06-14T11:15:25.801Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 13/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4786
ChatGPT o3-mini content preview: [
  {
    "originalName": "KOPI",
    "standardizedName": "Coffee",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "beverages",
    "confidence": 100
  },
  {
    "originalName": "TEH",
    "standardizedName": "Tea",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "beverages",
    "confidence": 100
  },
  {
    "originalName": "GULA MERAH",
    "standardizedName": "Sugar Brown",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "c...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 50026ms, 8113 tokens
‚úÖ Batch 13 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 56,
      message: "Standardizing batch 14/21 (25 products)...",
      lastUpdated: "2025-06-14T11:16:17.024Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 14/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4826
ChatGPT o3-mini content preview: [
  {
    "originalName": "Susu Bendera Coklat",
    "standardizedName": "Milk Chocolate",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "dairy",
    "confidence": 100
  },
  {
    "originalName": "KOPI ABC SUSU",
    "standardizedName": "Coffee Milk",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "beverages",
    "confidence": 100
  },
  {
    "originalName": "TEH CELUP SOSRO",
    "standardizedName": "Tea Bag",
    "originalUnit": "DUS"...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 56545ms, 9182 tokens
‚úÖ Batch 14 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 58,
      message: "Standardizing batch 15/21 (25 products)...",
      lastUpdated: "2025-06-14T11:17:14.764Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 15/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4796
ChatGPT o3-mini content preview: [
  {
    "originalName": "Mie Instan",
    "standardizedName": "Noodle Instant",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "other",
    "confidence": 100
  },
  {
    "originalName": "Kopi Bubuk",
    "standardizedName": "Coffee Powder",
    "originalUnit": "Bungkus",
    "standardizedUnit": "pack",
    "category": "beverages",
    "confidence": 95
  },
  {
    "originalName": "Teh Celup",
    "standardizedName": "Tea Bag",
    "originalUnit": "Kotak",
    "stan...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 58468ms, 8510 tokens
‚úÖ Batch 15 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 61,
      message: "Standardizing batch 16/21 (25 products)...",
      lastUpdated: "2025-06-14T11:18:14.944Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 16/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 5035
ChatGPT o3-mini content preview: [
  {
    "originalName": "Beras Premium Sania 5 KG.",
    "standardizedName": "Rice Premium",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "grains",
    "confidence": 100
  },
  {
    "originalName": "Indomie Goreng",
    "standardizedName": "Noodles Fried",
    "originalUnit": "PCS",
    "standardizedUnit": "pcs",
    "category": "grains",
    "confidence": 100
  },
  {
    "originalName": "Susu UHT Indomilk Cokelat 1 Liter",
    "standardizedName": "Milk Chocolate"...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 54963ms, 8040 tokens
‚úÖ Batch 16 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 63,
      message: "Standardizing batch 17/21 (25 products)...",
      lastUpdated: "2025-06-14T11:19:11.097Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 17/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4722
ChatGPT o3-mini content preview: [
  {
    "originalName": "ROICO AYAM",
    "standardizedName": "Chicken",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "meat",
    "confidence": 100
  },
  {
    "originalName": "MASAKO SAPI",
    "standardizedName": "Beef",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "meat",
    "confidence": 100
  },
  {
    "originalName": "LADA KUBU",
    "standardizedName": "Pepper",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    ...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 53764ms, 7549 tokens
‚úÖ Batch 17 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 65,
      message: "Standardizing batch 18/21 (25 products)...",
      lastUpdated: "2025-06-14T11:20:06.053Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 18/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4711
ChatGPT o3-mini content preview: [
  {
    "originalName": "Jahe",
    "standardizedName": "Ginger",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "spices",
    "confidence": 100
  },
  {
    "originalName": "Lengkuas",
    "standardizedName": "Galangal",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
    "category": "spices",
    "confidence": 100
  },
  {
    "originalName": "Gula Pasir",
    "standardizedName": "Sugar Granulated",
    "originalUnit": "KG.",
    "standardizedUnit": "kg",
 ...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 51760ms, 8020 tokens
‚úÖ Batch 18 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 68,
      message: "Standardizing batch 19/21 (25 products)...",
      lastUpdated: "2025-06-14T11:20:59.009Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 19/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4789
ChatGPT o3-mini content preview: [
  {
    "originalName": "Mie Instan",
    "standardizedName": "Noodles Instant",
    "originalUnit": "PCS.",
    "standardizedUnit": "pcs",
    "category": "other",
    "confidence": 100
  },
  {
    "originalName": "Kopi Bubuk",
    "standardizedName": "Coffee Powder",
    "originalUnit": "Bungkus",
    "standardizedUnit": "pack",
    "category": "beverages",
    "confidence": 100
  },
  {
    "originalName": "Teh Celup",
    "standardizedName": "Tea Bag",
    "originalUnit": "Kotak",
    "st...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 49615ms, 7886 tokens
‚úÖ Batch 19 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 70,
      message: "Standardizing batch 20/21 (25 products)...",
      lastUpdated: "2025-06-14T11:21:49.817Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 20/21: 25 products
ü§ñ Starting ChatGPT o3-mini standardization for 25 products
ChatGPT o3-mini raw response length: 4919
ChatGPT o3-mini content preview: [
  {
    "originalName": "Beras Premium",
    "standardizedName": "Rice Premium",
    "originalUnit": "KG",
    "standardizedUnit": "kg",
    "category": "grains",
    "confidence": 100
  },
  {
    "originalName": "Telur Ayam",
    "standardizedName": "Chicken Egg",
    "originalUnit": "KG",
    "standardizedUnit": "kg",
    "category": "other",
    "confidence": 100
  },
  {
    "originalName": "Mie Instan Indomie Ayam Bawang",
    "standardizedName": "Instant Noodle Chicken Onion",
    "orig...
‚úÖ ChatGPT o3-mini standardization completed: 25 products in 71883ms, 10188 tokens
‚úÖ Batch 20 completed: 25 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardizing",
      ~~~~~
      progress: 73,
      message: "Standardizing batch 21/21 (17 products)...",
      lastUpdated: "2025-06-14T11:23:02.892Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:59:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
ü§ñ Standardizing batch 21/21: 17 products
ü§ñ Starting ChatGPT o3-mini standardization for 17 products
ChatGPT o3-mini raw response length: 3269
ChatGPT o3-mini content preview: [
  {
    "originalName": "MIE INSTAN (PCS)",
    "standardizedName": "Noodles Instant",
    "originalUnit": "PCS",
    "standardizedUnit": "pcs",
    "category": "other",
    "confidence": 100
  },
  {
    "originalName": "MINYAK GORENG (KGM)",
    "standardizedName": "Oil Frying",
    "originalUnit": "KGM",
    "standardizedUnit": "kg",
    "category": "oils",
    "confidence": 100
  },
  {
    "originalName": "SARDEN (PCS)",
    "standardizedName": "Sardine",
    "originalUnit": "PCS",
    "s...
‚úÖ ChatGPT o3-mini standardization completed: 17 products in 41421ms, 7039 tokens
‚úÖ Batch 21 completed: 17 products standardized
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "standardized",
      ~~~~~
      progress: 75,
      message: "Standardized 517 products",
      lastUpdated: "2025-06-14T11:23:44.978Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:106:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 80,
      message: "Storing products in database...",
      lastUpdated: "2025-06-14T11:23:45.075Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:109:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 80,
      message: "Stored 50/517 products...",
      lastUpdated: "2025-06-14T11:23:53.727Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 81,
      message: "Stored 100/517 products...",
      lastUpdated: "2025-06-14T11:24:01.611Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 83,
      message: "Stored 150/517 products...",
      lastUpdated: "2025-06-14T11:24:09.721Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 84,
      message: "Stored 200/517 products...",
      lastUpdated: "2025-06-14T11:24:17.215Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 85,
      message: "Stored 250/517 products...",
      lastUpdated: "2025-06-14T11:24:24.018Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 87,
      message: "Stored 300/517 products...",
      lastUpdated: "2025-06-14T11:24:30.016Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 88,
      message: "Stored 350/517 products...",
      lastUpdated: "2025-06-14T11:24:37.419Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 90,
      message: "Stored 400/517 products...",
      lastUpdated: "2025-06-14T11:24:43.949Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 91,
      message: "Stored 450/517 products...",
      lastUpdated: "2025-06-14T11:24:49.830Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 92,
      message: "Stored 500/517 products...",
      lastUpdated: "2025-06-14T11:24:55.656Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "storing",
      ~~~~~
      progress: 94,
      message: "Stored 517/517 products...",
      lastUpdated: "2025-06-14T11:24:58.034Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:135:8)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "completing",
      ~~~~~
      progress: 95,
      message: "Finalizing...",
      lastUpdated: "2025-06-14T11:24:58.134Z",
?     set?: String | Null
    }
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:144:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
‚ùå Failed to update job status: Error [PrismaClientValidationError]: 
Invalid `prisma.upload.update()` invocation:

{
  where: {
    id: "cmbw4fp23000loud75gqbfz7x"
  },
  data: {
    processingDetails: {
      stage: "completed",
      ~~~~~
      progress: 100,
      message: "‚úÖ Completed! Stored 517 products",
      lastUpdated: "2025-06-14T11:24:58.273Z",
?     set?: String | Null
    },
    status: "completed"
  }
}

Unknown argument `stage`. Available options are marked with ?.
    at async JobQueue.updateJobStatus (app/services/background/JobQueue.ts:181:6)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:166:6)
  179 |       };
  180 |
> 181 |       await prisma.upload.update({
      |      ^
  182 |         where: { id: uploadId },
  183 |         data: {
  184 |           processingDetails: updatedDetails, {
  clientVersion: '6.9.0'
}
üéâ Async processing completed for test-widi-wiguna.xlsx: 517 products stored
[61635a43-b5d9-4699-ab1d-0251789b93a6] GET http://localhost:3000/admin
 ‚óã Compiling /admin ...
 ‚úì Compiled /admin in 585ms (607 modules)
 GET /admin 200 in 701ms
 ‚úì Compiled in 53ms (294 modules)
[62e4ef26-8ce4-4bb8-a05d-e6ed876a86fc] GET http://localhost:3000/api/uploads/pending?page=1&limit=10
 ‚úì Compiled /api/uploads/pending in 44ms (611 modules)
 GET /api/uploads/pending?page=1&limit=10 200 in 914ms
 ‚úì Compiled in 92ms (294 modules)
 ‚úì Compiled in 64ms (294 modules)
 ‚úì Compiled in 82ms (691 modules)
 ‚úì Compiled in 88ms (294 modules)
 ‚úì Compiled in 67ms (294 modules)
 ‚úì Compiled in 76ms (294 modules)
 ‚úì Compiled in 60ms (294 modules)
 ‚úì Compiled in 75ms (294 modules)
 ‚úì Compiled in 61ms (294 modules)
 ‚úì Compiled in 54ms (294 modules)
 ‚úì Compiled in 60ms (294 modules)
 ‚úì Compiled in 65ms (294 modules)
 ‚úì Compiled in 62ms (294 modules)
 ‚úì Compiled in 67ms (294 modules)
 ‚úì Compiled in 86ms (294 modules)
 ‚úì Compiled in 57ms (294 modules)
 ‚úì Compiled in 64ms (294 modules)
 ‚úì Compiled in 65ms (294 modules)
 ‚úì Compiled in 67ms (294 modules)
 ‚úì Compiled in 61ms (294 modules)
 ‚úì Compiled in 84ms (691 modules)
 ‚úì Compiled in 64ms (294 modules)
