
> vercel-marketplace-neon@0.1.0 dev
> next dev

   ▲ Next.js 15.1.6
   - Local:        http://localhost:3000
   - Network:      http://192.168.0.195:3000
   - Environments: .env

 ✓ Starting...
 ✓ Ready in 1010ms
 ○ Compiling /api/stats ...
 ✓ Compiled /api/stats in 613ms (336 modules)
Slow Prisma operation: Price.findMany took 2253ms
 GET /api/stats 200 in 2951ms
 ✓ Compiled /api/upload-unified in 372ms (471 modules)
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Widi Wiguna 03_07.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 86844 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: Widi Wiguna 03_07.xlsx
[UnifiedGemini] Processing Widi Wiguna 03_07.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: Widi Wiguna 03_07.xlsx
[UnifiedGemini] Excel preprocessing error: Error: Bad compressed size: 65895 != 1179258880
    at XLSX (app/services/core/UnifiedGeminiService.ts:186:23)
    at preprocessExcelFile (app/services/core/UnifiedGeminiService.ts:159:18)
    at prepareFileContent (app/services/core/UnifiedGeminiService.ts:56:41)
    at processDocument (app/api/upload-unified/route.ts:102:42)
  184 |   private preprocessExcelFile(content: string | Buffer, fileName: string): FileContent {
  185 |     try {
> 186 |       const workbook = XLSX.read(content, { type: Buffer.isBuffer(content) ? 'buffer' : 'string' });
      |                       ^
  187 |       
  188 |       // Find sheet with data
  189 |       let selectedSheet = null;
[UnifiedGemini] Error: Error: Failed to preprocess Excel file: Bad compressed size: 65895 != 1179258880
    at UnifiedGeminiService.preprocessExcelFile (app/services/core/UnifiedGeminiService.ts:232:12)
    at preprocessExcelFile (app/services/core/UnifiedGeminiService.ts:159:18)
    at prepareFileContent (app/services/core/UnifiedGeminiService.ts:56:41)
    at processDocument (app/api/upload-unified/route.ts:102:42)
  230 |     } catch (error) {
  231 |       console.error('[UnifiedGemini] Excel preprocessing error:', error);
> 232 |       throw new Error(`Failed to preprocess Excel file: ${error instanceof Error ? error.message : 'Unknown error'}`);
      |            ^
  233 |     }
  234 |   }
  235 |
[UnifiedUpload] Error: Error: Failed to process document: Failed to preprocess Excel file: Bad compressed size: 65895 != 1179258880
    at UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:72:12)
    at async POST (app/api/upload-unified/route.ts:102:15)
  70 |     } catch (error) {
  71 |       console.error('[UnifiedGemini] Error:', error);
> 72 |       throw new Error(`Failed to process document: ${error instanceof Error ? error.message : 'Unknown error'}`);
     |            ^
  73 |     }
  74 |   }
  75 |
 POST /api/upload-unified 500 in 577ms
 ✓ Compiled in 14ms
 ○ Compiling /api/upload-unified ...
 ✓ Compiled /api/upload-unified in 605ms (709 modules)
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Widi Wiguna 03_07.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 86844 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: Widi Wiguna 03_07.xlsx
[UnifiedGemini] Processing Widi Wiguna 03_07.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed, trying ExcelJS fallback in UnifiedGemini: Bad compressed size: 65895 != 1179258880
[UnifiedGemini] Excel preprocessing error: {
  isExcelJSFallback: true,
  buffer: <Buffer 50 4b 03 04 14 00 08 08 08 00 69 85 dc 5a 00 00 00 00 00 00 00 00 00 00 00 00 0f 00 00 00 78 6c 2f 77 6f 72 6b 62 6f 6f 6b 2e 78 6d 6c 8d 50 41 6e c2 ... 86794 more bytes, l: 9537, read_shift: [Function: ReadShift], chk: [Function: CheckField], write_shift: [Function: WriteShift]>,
  fileName: 'Widi Wiguna 03_07.xlsx'
}
[UnifiedGemini] Error: Error: Failed to preprocess Excel file: Unknown error
    at UnifiedGeminiService.preprocessExcelFile (app/services/core/UnifiedGeminiService.ts:254:12)
    at preprocessExcelFile (app/services/core/UnifiedGeminiService.ts:160:20)
    at prepareFileContent (app/services/core/UnifiedGeminiService.ts:56:41)
    at processDocument (app/api/upload-unified/route.ts:102:42)
  252 |     } catch (error) {
  253 |       console.error('[UnifiedGemini] Excel preprocessing error:', error);
> 254 |       throw new Error(`Failed to preprocess Excel file: ${error instanceof Error ? error.message : 'Unknown error'}`);
      |            ^
  255 |     }
  256 |   }
  257 |
[UnifiedUpload] Error: Error: Failed to process document: Failed to preprocess Excel file: Unknown error
    at UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:72:12)
    at async POST (app/api/upload-unified/route.ts:102:15)
  70 |     } catch (error) {
  71 |       console.error('[UnifiedGemini] Error:', error);
> 72 |       throw new Error(`Failed to process document: ${error instanceof Error ? error.message : 'Unknown error'}`);
     |            ^
  73 |     }
  74 |   }
  75 |
 POST /api/upload-unified 500 in 848ms
 ✓ Compiled in 106ms (709 modules)
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Widi Wiguna 03_07.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 86844 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: Widi Wiguna 03_07.xlsx
[UnifiedGemini] Processing Widi Wiguna 03_07.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed, trying ExcelJS fallback in UnifiedGemini: Bad compressed size: 65895 != 1179258880
[UnifiedGemini] Using ExcelJS fallback for: Widi Wiguna 03_07.xlsx
📊 ExcelJS: Processing file with 3 worksheets
   📋 Checking worksheet: "Sheet1" (264 rows)
✅ ExcelJS: Successfully processed 242 rows from "Sheet1"
[UnifiedGemini] Estimated products: 0, Using batching: true
[UnifiedGemini] Processing 0 batches with size 200
[UnifiedUpload] Success: 0 products extracted in 107ms
 POST /api/upload-unified 200 in 186ms
 ✓ Compiled /api/async-upload in 275ms (1078 modules)
⚠️ Background processor auto-start DISABLED - using synchronous processing
🚀 Async upload endpoint called
📁 Processing file: Widi Wiguna 03_07.xlsx (0.08MB)
🔄 Uploading to Blob Storage: Widi Wiguna 03_07.xlsx
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Widi%20Wiguna%2003_07-CdtD2k4K903D9wRDoDEVri8eypLTRv.xlsx
💾 Creating upload record in database
✅ Upload record created: cmcpusgvm0002ou873r9du6o7 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Widi%20Wiguna%2003_07-CdtD2k4K903D9wRDoDEVri8eypLTRv.xlsx
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpusgvm0002ou873r9du6o7
🚀 Enhanced processing starting for upload: cmcpusgvm0002ou873r9du6o7
🔍 Enhanced Excel extraction starting: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed with array type, trying with buffer type: Bad compressed size: 65895 != 1179258880
⚠️ XLSX library failed, trying ExcelJS fallback: Bad compressed size: 65895 != 1179258880
✅ ExcelJS fallback successful
📊 ExcelJS: Processing file with 3 worksheets
📄 Processing ExcelJS worksheet: "Sheet1"
   📋 Worksheet "Sheet1": 242 non-empty rows
   📋 Sheet structure: name=1, price=3, unit=2, dataStart=4
   🔬 Sheet structure: {
  nameColumn: 1,
  priceColumn: 3,
  unitColumn: 2,
  categoryColumn: -1,
  dataStartRow: 4,
  headerRow: 3
}
   📊 Extraction complete: 215 products from 215/242 rows
   ✅ ExcelJS worksheet "Sheet1" processed: 215 products extracted
📄 Processing ExcelJS worksheet: "Sheet2"
   📋 Worksheet "Sheet2": 0 non-empty rows
   ⚠️ Skipping worksheet "Sheet2": too few rows
📄 Processing ExcelJS worksheet: "Sheet3"
   📋 Worksheet "Sheet3": 0 non-empty rows
   ⚠️ Skipping worksheet "Sheet3": too few rows
✅ Enhanced extraction completed: Widi Wiguna 03_07.xlsx
   📊 Rows: 215/242 (88.8%)
   🛍️ Products: 215
   📄 Sheets: 1
   ⏱️ Time: 928ms
   💰 Cost: $0.0000
🔍 Validating 215 extracted products...
📊 Price validation summary:
   Valid: 215/215
   Warnings: 21
   Errors: 0
   Average confidence: 97.9%
   Price distribution:
     < 10k: 18
     10k-100k: 170
     100k-1M: 27
     > 1M: 0
🏢 Processing supplier: "Widi"
   📞 Phone: Not provided
   📧 Email: Not provided
   📍 Address: Not provided
✅ Found existing supplier: cmc06ue2h0407s2kl56ch1jso
📝 Supplier detection: "Widi" → using cmc06ue2h0407s2kl56ch1jso
📦 Processing 215 valid products...
⚡ Skipping AI standardization: disabled or 215 products > 200 limit
📊 Grouped 215 products into 214 unique products
Bulk operation: Price.updateMany completed in 154ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 118ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 120ms
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 10/214 unique products...
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 114ms
✅ Processed 20/214 unique products...
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 115ms
✅ Processed 30/214 unique products...
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 113ms
✅ Processed 40/214 unique products...
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 122ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 114ms
✅ Processed 50/214 unique products...
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 118ms
Bulk operation: Price.updateMany completed in 118ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 115ms
✅ Processed 60/214 unique products...
Bulk operation: Price.updateMany completed in 120ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 150ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 117ms
✅ Processed 70/214 unique products...
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 122ms
✅ Processed 80/214 unique products...
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 126ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 140ms
Bulk operation: Price.updateMany completed in 119ms
Bulk operation: Price.updateMany completed in 119ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
✅ Processed 90/214 unique products...
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
✅ Processed 100/214 unique products...
Bulk operation: Price.updateMany completed in 139ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 113ms
 POST /api/async-upload 200 in 60003ms
✅ Processed 110/214 unique products...
Bulk operation: Price.updateMany completed in 197ms
Bulk operation: Price.updateMany completed in 288ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
✅ Processed 120/214 unique products...
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 113ms
✅ Processed 130/214 unique products...
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 115ms
✅ Processed 140/214 unique products...
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
✅ Processed 150/214 unique products...
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 129ms
Bulk operation: Price.updateMany completed in 115ms
Bulk operation: Price.updateMany completed in 112ms
✅ Processed 160/214 unique products...
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
🔗 Consolidated 2 duplicate products into "tepung segitiga biru" (best price: 285000)
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
✅ Processed 170/214 unique products...
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 116ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 115ms
✅ Processed 180/214 unique products...
Bulk operation: Price.updateMany completed in 117ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 118ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
✅ Processed 190/214 unique products...
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
✅ Processed 200/214 unique products...
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 149ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 114ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 113ms
✅ Processed 210/214 unique products...
Bulk operation: Price.updateMany completed in 111ms
Bulk operation: Price.updateMany completed in 113ms
Bulk operation: Price.updateMany completed in 112ms
Bulk operation: Price.updateMany completed in 112ms
🎉 Successfully processed 214 products
📋 Processing Log: cmcpusgvm0002ou873r9du6o7 - completed_with_errors - 0.888 completeness
✅ Enhanced processing completed: cmcpusgvm0002ou873r9du6o7
   📊 Completeness: 88.8%
   🛍️ Products: 214
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 214, error: undefined }
✅ Synchronous processing completed: SUCCESS
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: test-pdf-1.pdf (application/pdf, 2912032 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: test-pdf-1.pdf
🔍 PDF extraction starting: test-pdf-1.pdf
📄 Step 1: Converting PDF to images: test-pdf-1.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-1.pdf_page_1.png: ```json
[
  {"n": "Baked Bean in tomato sauce", "p": 90000, "u": "2.65 Kg", "c": null, "s": 0.9},
  {"n": "Baked Bean in tomato sauce", "p": 21900, "u": "425GR", "c": null, "s": 0.9},
  {"n": "Chick P...
📊 Parsed data: [
  {
    n: 'Baked Bean in tomato sauce',
    p: 90000,
    u: '2.65 Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Baked Bean in tomato sauce',
    p: 21900,
    u: '425GR',
    c: null,
    s: 0.9
  },
  { n: 'Chick Peas', p: 22500, u: '400 gr', c: null, s: 0.9 },
  { n: 'Artichoke Hearts', p: 46000, u: '390 Gr', c: null, s: 0.9 },
  { n: 'Artichoke Hearts', p: 242200, u: '2,5 kg', c: null, s: 0.9 },
  {
    n: 'Whole Peeled Tomatoes',
    p: 95000,
    u: '2.55 Kg',
    c: null,
    s: 0.9
  },
  { n: 'Whole Peeled Tomatoes', p: 22200, u: '420gr', c: null, s: 0.9 },
  {
    n: 'Jalapeno Sliced Pepper',
    p: 180000,
    u: '2.8 Kg',
    c: null,
    s: 0.9
  },
  { n: 'Red Kidney Beans', p: 126500, u: '2.5 Kg', c: null, s: 0.9 },
  { n: 'Red Kidney Beans', p: 22500, u: '400 gr', c: null, s: 0.9 },
  {
    n: 'Tomato Paste ( 22% - 24%)',
    p: 125000,
    u: '2.22 Kg',
    c: null,
    s: 0.9
  },
  { n: 'Tomato Paste 22/24%', p: 21500, u: '400gr', c: null, s: 0.9 },
  { n: 'Gherkins', p: 45500, u: '720ml', c: null, s: 0.9 },
  { n: 'Peach Halves in Syrup', p: 58000, u: '825gr', c: null, s: 0.9 },
  { n: 'Balsamic Vinegar', p: 61050, u: '500ml', c: null, s: 0.9 },
  { n: 'Red Grape Vinegar', p: 55500, u: '500ml', c: null, s: 0.9 },
  { n: 'White Grape Vinegar', p: 55500, u: '500ml', c: null, s: 0.9 },
  { n: 'Cooking Wines Red', p: 125000, u: '750ml', c: null, s: 0.9 },
  { n: 'Cooking Wines White', p: 125000, u: '750ml', c: null, s: 0.9 },
  {
    n: 'Maple Syrup - Flavoured Maple',
    p: 95000,
    u: '1 liter',
    c: null,
    s: 0.9
  },
  { n: 'Caramel Sauce', p: 39960, u: '350 ml', c: null, s: 0.9 },
  { n: 'PURE MAPLE SYRUP', p: 181700, u: '450 gr', c: null, s: 0.9 },
  { n: 'PURE MAPLE SYRUP', p: 110000, u: '250 gr', c: null, s: 0.9 }
]
✅ Extracted 23 products
✅ Image 1: 23 products extracted by Gemini Flash 2.0
🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-1.pdf_page_2.png: ```json
[
  {"n": "ORCHARD FRUIT COCKTAIL (South Afri", "p": 55500, "u": "825 GR", "c": null, "s": 0.9},
  {"n": "ORCHARD FRUIT COCKTAIL (GREECE)", "p": 55500, "u": "29OZ/825GR", "c": null, "s": 0.9},...
📊 Parsed data: [
  {
    n: 'ORCHARD FRUIT COCKTAIL (South Afri',
    p: 55500,
    u: '825 GR',
    c: null,
    s: 0.9
  },
  {
    n: 'ORCHARD FRUIT COCKTAIL (GREECE)',
    p: 55500,
    u: '29OZ/825GR',
    c: null,
    s: 0.9
  },
  {
    n: 'FIESTA FRUIT COCTAIL (Philippine)',
    p: null,
    u: '29OZ/825GR',
    c: null,
    s: 0.9
  },
  {
    n: 'PEACHES HALVES (SOUTH AFRICA)',
    p: 50000,
    u: '825 GR',
    c: null,
    s: 0.9
  },
  {
    n: 'PEACH HALVES IN SYRUP (GREECE)',
    p: null,
    u: '825 GR',
    c: null,
    s: 0.9
  },
  {
    n: 'CREAM STYLE CORN THAILAND 15 oz',
    p: 13542,
    u: '425 Gr',
    c: null,
    s: 0.9
  },
  { n: 'WHOLE KERNEL CORN', p: 13542, u: '432 Gr', c: null, s: 0.9 },
  { n: 'TOMATO PASTE (K)', p: 15152, u: '170 GR', c: null, s: 0.9 },
  { n: 'TOMATO SAUCE', p: 23310, u: '425 GR', c: null, s: 0.9 },
  { n: 'DICED TOMATOES', p: 23310, u: '411 GR', c: null, s: 0.9 },
  { n: 'PURE TOMATO', p: 23310, u: '425 GR', c: null, s: 0.9 },
  { n: 'Olive Oil - Pomace', p: 430000, u: '5 Ltr', c: null, s: 0.9 },
  {
    n: 'Olive Oil - Extra Virgin',
    p: 560000,
    u: '5 Ltr',
    c: null,
    s: 0.9
  },
  { n: 'Olive Oil w/Truffle', p: 83250, u: '250 ml', c: null, s: 0.9 },
  { n: 'WHITE TRUFFLES OIL', p: 323000, u: '250 ml', c: null, s: 0.9 },
  { n: 'BLACK TRUFFLES OIL', p: null, u: '250 ml', c: null, s: 0.9 },
  { n: 'SALAD OIL', p: 169000, u: '3 LTR', c: null, s: 0.9 },
  { n: 'Sun Flower Oil', p: 310000, u: '5 LTR', c: null, s: 0.9 },
  { n: 'Sun Flower Oil', p: 131000, u: '2 LTR', c: null, s: 0.9 },
  { n: 'Canola Oil', p: 1050000, u: '20 LTR', c: null, s: 0.9 },
  { n: 'Corn Oil', p: 150000, u: '2 LTR', c: null, s: 0.9 },
  { n: 'Sun Flower Oil', p: 156000, u: '2 LTR', c: null, s: 0.9 },
  { n: 'Sun Flower Oil', p: null, u: '5 LTR', c: null, s: 0.9 },
  {
    n: 'Minyak Goreng (Classic)',
    p: 375000,
    u: '18 Liter',
    c: null,
    s: 0.9
  }
]
✅ Extracted 24 products
✅ Image 2: 24 products extracted by Gemini Flash 2.0
🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-1.pdf_page_3.png: ```json
[
  {"n": "ROBO TARTUFATA Truffle Mushroom Paste", "p": 252500.0, "u": "500 Gr", "c": null, "s": 0.9},
  {"n": "French's CATLLEMENT'S-BBQ SAUCE", "p": 360000.0, "u": "3 LTR", "c": null, "s": 0...
📊 Parsed data: [
  {
    n: 'ROBO TARTUFATA Truffle Mushroom Paste',
    p: 252500,
    u: '500 Gr',
    c: null,
    s: 0.9
  },
  {
    n: "French's CATLLEMENT'S-BBQ SAUCE",
    p: 360000,
    u: '3 LTR',
    c: null,
    s: 0.9
  },
  {
    n: "French's Dijon Mustard Chardonnay",
    p: 63000,
    u: '340 gr',
    c: null,
    s: 0.9
  },
  {
    n: "French's Classic Yellow Mustard",
    p: 168500,
    u: '2.98 Kg',
    c: null,
    s: 0.9
  },
  {
    n: "French's Classic Yellow Mustard Squeeze",
    p: 47500,
    u: '14 Oz',
    c: null,
    s: 0.9
  },
  {
    n: 'CY Beverages Native Honey',
    p: 65500,
    u: '1 Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'TSUKABA Almond Milk - Unsweetened',
    p: 93019,
    u: '946ML',
    c: null,
    s: 0.9
  },
  { n: 'Mazzetta Capers', p: 105000, u: '470 gr', c: null, s: 0.9 },
  {
    n: 'Mazzetta Sundried Tomatoe',
    p: 106000,
    u: '220 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'SAPORITO Maraschino Red Cherry',
    p: 350000,
    u: '3,9 ltr',
    c: null,
    s: 0.9
  },
  {
    n: 'ERAWAN FOODS Lychees In Syrup',
    p: 39700,
    u: '565 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'IMPERIAL Lychees In Syrup',
    p: 32000,
    u: '567 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'JI XIANG Lychees In Syrup',
    p: 32000,
    u: '567 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'LA COSTENA Jalapeno Whole',
    p: 125000,
    u: '2.6 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'LA COSTENA Chipotle Peppers',
    p: 56500,
    u: '340 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'F&N F&N Evaporated Milk',
    p: 19203,
    u: '410 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'HOSEN Black Olive Pitted',
    p: 176500,
    u: '3 Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'DEHO TUNA CHUNK IN OIL',
    p: 23210,
    u: '180 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'HEINZ Heinz Tomato Paste',
    p: 226100,
    u: '3,15 Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'START VILLAGE Anchovy Fillet in Olive Oil',
    p: 410700,
    u: '720 Gr',
    c: null,
    s: 0.9
  },
  {
    n: 'START VILLAGE Anchovy Fillet in Olive Oil',
    p: 38850,
    u: '48 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'PURA Coarse Salt (Kasar) 300gr',
    p: 38500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'PURA Fine Salt (Halus) 300gr',
    p: 38500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'PURA Fine Salt (Halus) 1000gr',
    p: 75000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'PURA Seasoning 100gr', p: 62160, u: null, c: null, s: 0.9 },
  {
    n: 'PURA Himalayan Salt Garlic 125gr',
    p: 45510,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'PURA Himalayan Salt Pepper 125gr',
    p: 45510,
    u: null,
    c: null,
    s: 0.9
  }
]
✅ Extracted 27 products
✅ Image 3: 27 products extracted by Gemini Flash 2.0
🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
 POST /api/upload-unified 200 in 30002ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: test-pdf-2.pdf (application/pdf, 2927 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: test-pdf-2.pdf
🔍 PDF extraction starting: test-pdf-2.pdf
📄 Step 1: Converting PDF to images: test-pdf-2.pdf
✅ Converted to 1 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/1 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-2.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-2.pdf_page_1.png: ```json
[
  {"n":"-------________________ 3.2%", "p":89.50, "u":null, "c":null, "s":0.9},
  {"n":"-------", "p":45.00, "u":null, "c":null, "s":0.9},
  {"n":"-------", "p":750.00, "u":null, "c":null, "...
📊 Parsed data: [
  {
    n: '-------________________ 3.2%',
    p: 89.5,
    u: null,
    c: null,
    s: 0.9
  },
  { n: '-------', p: 45, u: null, c: null, s: 0.9 },
  { n: '-------', p: 750, u: null, c: null, s: 0.9 },
  { n: '-------', p: 1200, u: null, c: null, s: 0.9 },
  { n: '-------', p: 25, u: null, c: null, s: 0.9 },
  { n: '-------', p: 120, u: null, c: null, s: 0.9 },
  { n: '-------', p: 95, u: null, c: null, s: 0.9 },
  { n: '-------', p: 380, u: null, c: null, s: 0.9 },
  { n: '------- C1', p: 85, u: null, c: null, s: 0.9 },
  { n: '-------', p: 110, u: null, c: null, s: 0.9 },
  { n: '-------', p: 55, u: null, c: null, s: 0.9 },
  { n: '-------', p: 250, u: null, c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 1: 12 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 12 products from 1 images in 5610ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 12 products extracted in 6478ms
 POST /api/upload-unified 200 in 6492ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Widi Wiguna 03_07.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 86844 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: Widi Wiguna 03_07.xlsx
[UnifiedGemini] Processing Widi Wiguna 03_07.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed, trying ExcelJS fallback in UnifiedGemini: Bad compressed size: 65895 != 1179258880
[UnifiedGemini] Using ExcelJS fallback for: Widi Wiguna 03_07.xlsx
📊 ExcelJS: Processing file with 3 worksheets
   📋 Checking worksheet: "Sheet1" (264 rows)
✅ ExcelJS: Successfully processed 242 rows from "Sheet1"
[UnifiedGemini] Estimated products: 0, Using batching: true
[UnifiedGemini] Processing 0 batches with size 200
[UnifiedUpload] Success: 0 products extracted in 32ms
 POST /api/upload-unified 200 in 41ms
🔍 Parsing Gemini response for test-pdf-1.pdf_page_4.png: ```json
[
  {"n": "Tom Yum Paste", "p": 59940, "u": "400 Gr", "c": null, "s": 0.9},
  {"n": "Green Curry Paste", "p": 59940, "u": "400 Gr", "c": null, "s": 0.9},
  {"n": "Red Curry Paste", "p": 59940,...
📊 Parsed data: [
  { n: 'Tom Yum Paste', p: 59940, u: '400 Gr', c: null, s: 0.9 },
  { n: 'Green Curry Paste', p: 59940, u: '400 Gr', c: null, s: 0.9 },
  { n: 'Red Curry Paste', p: 59940, u: '400 Gr', c: null, s: 0.9 },
  { n: 'Yellow Curry Paste', p: 59940, u: '400 Gr', c: null, s: 0.9 },
  { n: 'Tom Yum Paste', p: 12210, u: '50 Gr', c: null, s: 0.9 },
  { n: 'Green Curry Paste', p: 12210, u: '50 Gr', c: null, s: 0.9 },
  { n: 'Red Curry Paste', p: 12210, u: '50 Gr', c: null, s: 0.9 },
  { n: 'Yellow Curry Paste', p: 12210, u: '50 Gr', c: null, s: 0.9 },
  { n: 'Curry Paste Panang', p: 12210, u: '50 Gr', c: null, s: 0.9 },
  { n: 'Curry Paste Massaman', p: 12210, u: '50 Gr', c: null, s: 0.9 },
  { n: 'Spring Roll Sauce', p: 64500, u: '870 Gr', c: null, s: 0.9 },
  {
    n: 'Sweet Chilli Sauce For Dipping',
    p: 64500,
    u: '920 Gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Sweet Chilli Sauce For Dipping',
    p: 36000,
    u: '350 G',
    c: null,
    s: 0.9
  },
  { n: 'Oyster Sauce', p: 91000, u: '2.2 Kg', c: null, s: 0.9 },
  { n: 'Hoisin Sauce', p: null, u: '2.2 Kg', c: null, s: 0.9 },
  { n: 'Plum Sauce', p: null, u: '2.5 kg', c: null, s: 0.9 },
  {
    n: 'Sesame Oil - Pure White',
    p: 218615,
    u: '750 ML',
    c: null,
    s: 0.9
  },
  { n: 'Sesame Oil - Black', p: 358500, u: '4,5 Ltr', c: null, s: 0.9 },
  { n: 'Sesame Oil - Black', p: 48507, u: '510 ml', c: null, s: 0.9 },
  { n: 'Singapore Laksa Paste', p: 230000, u: '1 Kg', c: null, s: 0.9 },
  { n: 'Fish Sauce', p: 30500, u: '700 ml', c: null, s: 0.9 },
  { n: 'Fish Sauce', p: 32000, u: '700 ml', c: null, s: 0.9 },
  { n: 'Hp Sauce', p: 68043, u: '255ml', c: null, s: 0.9 },
  { n: 'L&P Sauce', p: 72594, u: '290 ml', c: null, s: 0.9 },
  { n: 'Red pepper', p: 50000, u: '60 ml', c: null, s: 0.9 },
  { n: 'Bread Crumbs - White', p: 30500, u: '1 Kg', c: null, s: 0.9 },
  {
    n: 'RICE PAPER 22cm (Blue)',
    p: 50500,
    u: '400 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'RICE PAPER 22cm (Blue)',
    p: 32190,
    u: '250gr',
    c: null,
    s: 0.9
  },
  { n: 'Potato Starch', p: 763125, u: '25 Kg', c: null, s: 0.9 },
  { n: 'Potato Starch', p: 30525, u: '1 Kg', c: null, s: 0.9 },
  {
    n: 'Rice Noodle-PAD THAI 4-7 mm',
    p: 29500,
    u: '400 gr',
    c: null,
    s: 0.9
  },
  { n: 'Thai Palm Sugar', p: 27500, u: '500gr', c: null, s: 0.9 },
  { n: 'Tuna Chunk in Oil', p: 150000, u: '1180 gr', c: null, s: 0.9 }
]
✅ Extracted 33 products
✅ Image 4: 33 products extracted by Gemini Flash 2.0
🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: test-excel-1.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 29238 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: test-excel-1.xlsx
[UnifiedGemini] Processing test-excel-1.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: test-excel-1.xlsx
[UnifiedGemini] Estimated products: 0, Using batching: true
[UnifiedGemini] Processing 0 batches with size 200
[UnifiedUpload] Success: 0 products extracted in 26ms
 POST /api/upload-unified 200 in 37ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: test-excel-2.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 95989 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: test-excel-2.xlsx
[UnifiedGemini] Processing test-excel-2.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: test-excel-2.xlsx
[UnifiedGemini] Estimated products: 0, Using batching: true
[UnifiedGemini] Processing 0 batches with size 200
[UnifiedUpload] Success: 0 products extracted in 9ms
 POST /api/upload-unified 200 in 20ms
🔍 Parsing Gemini response for test-pdf-1.pdf_page_5.png: ```json
[
  {"n": "Madras Curry Powder", "p": 38500, "u": "225 g", "c": null, "s": 0.9},
  {"n": "Meat Curry Powder", "p": 38500, "u": "225 g", "c": null, "s": 0.9},
  {"n": "Madras Curry Powder", "p"...
📊 Parsed data: [
  { n: 'Madras Curry Powder', p: 38500, u: '225 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 38500, u: '225 g', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 71000, u: '450 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 71000, u: '450 g', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 129000, u: '900 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 129000, u: '900 g', c: null, s: 0.9 },
  { n: 'Shaoxing Arak Masak', p: 66600, u: '640ml', c: null, s: 0.9 },
  { n: 'Shaoxing Arak Masak', p: 35520, u: '640ml', c: null, s: 0.9 },
  { n: 'Mei Kuei Lu Chew', p: 240315, u: '560ml', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 29304, u: '225 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 29304, u: '225 g', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 55500, u: '450 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 55500, u: '450 g', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 106005, u: '900 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 106005, u: '900 g', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 29304, u: '200 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 29304, u: '200 g', c: null, s: 0.9 },
  { n: 'Madras Curry Powder', p: 52170, u: '375 g', c: null, s: 0.9 },
  { n: 'Meat Curry Powder', p: 52170, u: '375 g', c: null, s: 0.9 },
  {
    n: 'Meat Curry - Extra Strong',
    p: 39960,
    u: '225 g',
    c: null,
    s: 0.9
  },
  { n: 'Chili Powder', p: 39960, u: '225 g', c: null, s: 0.9 },
  {
    n: 'Meat Curry - Extra Strong',
    p: 75528,
    u: '450 g',
    c: null,
    s: 0.9
  },
  { n: 'Chili Powder', p: 75528, u: '450 g', c: null, s: 0.9 },
  {
    n: 'Meat Curry - Extra Strong',
    p: 147852,
    u: '900 g',
    c: null,
    s: 0.9
  },
  { n: 'Chili Powder', p: 147852, u: '900 g', c: null, s: 0.9 },
  {
    n: 'Meat Curry - Extra Strong',
    p: 36850,
    u: '200 g',
    c: null,
    s: 0.9
  },
  { n: 'Chili Powder', p: 36850, u: '200 g', c: null, s: 0.9 },
  {
    n: 'Meat Curry - Extra Strong',
    p: 66600,
    u: '375 g',
    c: null,
    s: 0.9
  },
  { n: 'Chili Powder', p: 66600, u: '375 g', c: null, s: 0.9 },
  {
    n: 'Madras curry - Premium',
    p: 39960,
    u: '225 g',
    c: null,
    s: 0.9
  },
  {
    n: 'Madras curry - Premium',
    p: 75258,
    u: '450 g',
    c: null,
    s: 0.9
  },
  {
    n: 'Madras curry - Premium',
    p: 66600,
    u: '200 g',
    c: null,
    s: 0.9
  },
  {
    n: 'Madras curry - Premium',
    p: 36850,
    u: '375 g',
    c: null,
    s: 0.9
  },
  { n: 'Garam Masala', p: 47952, u: '200 g', c: null, s: 0.9 },
  { n: 'Garam Masala', p: 86025, u: '375 g', c: null, s: 0.9 },
  { n: 'Tandoori BBQ masala', p: 39960, u: '200 g', c: null, s: 0.9 },
  { n: 'Tandoori BBQ masala', p: 71800, u: '375 g', c: null, s: 0.9 }
]
✅ Extracted 37 products
✅ Image 5: 37 products extracted by Gemini Flash 2.0
🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-1.pdf_page_6.png: ```json
[
  {"n": "Vegetalk Mushroom Seasoning 150 gr", "p": 45510, "u": null, "c": null, "s": 0.9},
  {"n": "Vegetalk Aleo Vera Natural Seasening 150 gr", "p": 55500, "u": null, "c": null, "s": 0.9},...
📊 Parsed data: [
  {
    n: 'Vegetalk Mushroom Seasoning 150 gr',
    p: 45510,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Vegetalk Aleo Vera Natural Seasening 150 gr',
    p: 55500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'KONBU', p: 600000, u: 'KG', c: null, s: 0.9 },
  { n: 'KARA SANTAN', p: 8500, u: '200ml', c: null, s: 0.9 },
  { n: 'KARA SANTAN', p: 36200, u: '1000ml', c: null, s: 0.9 },
  { n: 'Balsamic Vinegar', p: 61050, u: '500ml', c: null, s: 0.9 },
  { n: 'Balsamic Vinegar', p: 222000, u: '5000ml', c: null, s: 0.9 },
  { n: 'Red Wine Vinegar', p: 61050, u: '500ml', c: null, s: 0.9 },
  { n: 'Red Wine Vinegar', p: 183150, u: '5000ml', c: null, s: 0.9 },
  { n: 'White Wine Vinegar', p: 61050, u: '500ml', c: null, s: 0.9 },
  { n: 'White Wine Vinegar', p: 183150, u: '5000ml', c: null, s: 0.9 },
  {
    n: 'Sparkling Red Grape Juice',
    p: 47730,
    u: '640 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Sparkling White Grape Juice',
    p: 47730,
    u: '640 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'FRUTEE-CRANBERRY JUICE',
    p: 47730,
    u: '975 ml',
    c: null,
    s: 0.9
  }
]
✅ Extracted 14 products
✅ Image 6: 14 products extracted by Gemini Flash 2.0
🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-1.pdf_page_7.png: ```json
[
  {"n": "KARAAGE BATTER MIX NO.1 (2KG)", "p": 3027000.0, "u": "10", "c": null, "s": 0.9},
  {"n": "CRISPY POWDER BATTER MIX \"SAKUMI\" 10KG", "p": 1045000.0, "u": "10", "c": null, "s": 0.9},...
📊 Parsed data: [
  {
    n: 'KARAAGE BATTER MIX NO.1 (2KG)',
    p: 3027000,
    u: '10',
    c: null,
    s: 0.9
  },
  {
    n: 'CRISPY POWDER BATTER MIX "SAKUMI" 10KG',
    p: 1045000,
    u: '10',
    c: null,
    s: 0.9
  },
  { n: 'BATTER MIX K200 10KG', p: 1565000, u: '10', c: null, s: 0.9 },
  {
    n: 'TERRIYAKI SAUCE 2KG (1.8L)',
    p: 2028000,
    u: '6',
    c: null,
    s: 0.9
  },
  { n: 'JAPANESE DRESSING 1L', p: 2505600, u: '12', c: null, s: 0.9 },
  {
    n: 'KARAAGE BATTER MIX NO 1 2KG',
    p: null,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'CRISPY POWDER BATTER MIX "SAKUMI " 10KG',
    p: null,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'BATTER MIXK20', p: null, u: null, c: null, s: 0.9 },
  { n: 'TERRIYAKI SAUCE 2KG (1.8L', p: null, u: null, c: null, s: 0.9 },
  { n: 'JAPANESE DRESSING 1L', p: null, u: null, c: null, s: 0.9 }
]
✅ Extracted 10 products
✅ Image 7: 10 products extracted by Gemini Flash 2.0
🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing test-pdf-1.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for test-pdf-1.pdf_page_8.png: ```json
[
  {"n": "Farfalle", "p": 39500, "u": "500 gr", "c": null, "s": 0.9},
  {"n": "Fettucine", "p": 65500, "u": "500 gr", "c": null, "s": 0.9},
  {"n": "Fusilli", "p": 39500, "u": "500 gr", "c": ...
📊 Parsed data: [
  { n: 'Farfalle', p: 39500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Fettucine', p: 65500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Fusilli', p: 39500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Lasagna Uovo', p: 81500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Linguine', p: 35500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Penne Rigate', p: 38500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Penne Rigate', p: 57500, u: '1000 gr', c: null, s: 0.9 },
  { n: 'Spagetti no 5', p: null, u: '500 gr', c: null, s: 0.9 },
  { n: 'Spagetti no 7', p: 34500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Spagetti no 7', p: 52000, u: '1000 gr', c: null, s: 0.9 },
  { n: 'Rigatoni', p: 39500, u: '500 gr', c: null, s: 0.9 },
  { n: 'Macheroni', p: 39800, u: '500 gr', c: null, s: 0.9 },
  {
    n: 'Biondi Linguine No. 01',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Biondi Vermicelli No. 02',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Biondi Spaghetti No. 04',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Biondi Angel Hair No.09',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Biondi Fettucchine No. 12',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  },
  { n: 'Biondi Spirals No. 16', p: 14541, u: '500gr', c: null, s: 0.9 },
  {
    n: 'Biondi Travelle No. 17',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  },
  { n: 'Biondi Penne No. 18', p: 14541, u: '500gr', c: null, s: 0.9 },
  { n: 'Biondi Elbows No. 35', p: 14541, u: '500gr', c: null, s: 0.9 },
  {
    n: 'Biondi Maccaroni No. 38',
    p: 14541,
    u: '500gr',
    c: null,
    s: 0.9
  }
]
✅ Extracted 22 products
✅ Image 8: 22 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 190 products from 8 images in 61415ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 190 products extracted in 64210ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: 0z britts 1 04_07.pdf (application/pdf, 626964 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: 0z britts 1 04_07.pdf
🔍 PDF extraction starting: 0z britts 1 04_07.pdf
📄 Step 1: Converting PDF to images: 0z britts 1 04_07.pdf
✅ Converted to 5 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_1.png: ```json
[
  {"n": "Tenderloin S/S Off Whole*", "p": 438500.00, "u": null, "c": null, "s": 0.9},
  {"n": "Tenderloin S/S Off * (Portioned)", "p": 455000.00, "u": null, "c": null, "s": 0.9},
  {"n": "Te...
📊 Parsed data: [
  {
    n: 'Tenderloin S/S Off Whole*',
    p: 438500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Tenderloin S/S Off * (Portioned)',
    p: 455000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Tenderloin S/Strap (MVP)',
    p: 387500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Scotch Fillet (Rib Eye) Whole**',
    p: 430500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Scotch Fillet (Rib Eye) ** (Portioned)',
    p: 439500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Striploin (Sirloin) ** Whole(Steak Ready)',
    p: 353500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Striploin (Sirloin) ** (Steak Ready) (Portioned)',
    p: 362000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Porterhouse (Portioned)', p: 367500, u: null, c: null, s: 0.9 },
  { n: 'Rump **', p: 304500, u: null, c: null, s: 0.9 },
  { n: 'Rump (Portioned)', p: 312000, u: null, c: null, s: 0.9 },
  {
    n: 'T Bone Whole * (Shortloin)',
    p: 402000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'T Bone (Portioned)', p: 408500, u: null, c: null, s: 0.9 },
  { n: 'Skirt Whole', p: 268750, u: null, c: null, s: 0.9 },
  {
    n: 'Prime OP Rib B/In Whole (Rib Eye on Bone)',
    p: 379500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Prime OP Rib B/In (Rib Eye on Bone) * Frenched',
    p: 387500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Prime OP Rib B/In (Rib Eye on Bone) * Portioned',
    p: 387500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Tomohawk', p: 387500, u: null, c: null, s: 0.9 },
  { n: 'Topside', p: 244100, u: null, c: null, s: 0.9 },
  { n: 'Topside Outside', p: 244100, u: null, c: null, s: 0.9 },
  {
    n: 'Oyster Blade (Flat Iron Steak)',
    p: 230000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Silverside (Outside)', p: 245500, u: null, c: null, s: 0.9 },
  {
    n: 'Silverside (Frozen. Pickled)',
    p: 254500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Silverside Corn Beef Sliced',
    p: 279500,
    u: '250gm',
    c: null,
    s: 0.9
  },
  { n: 'Knuckle (Whole)', p: 254500, u: null, c: null, s: 0.9 },
  {
    n: 'Rolled Knuckle ready for roasting',
    p: 254500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Gandik (Eye Round)', p: 254500, u: null, c: null, s: 0.9 },
  { n: 'Veal Whole', p: 254500, u: null, c: null, s: 0.9 },
  {
    n: 'FQ65 CL Cubed Ready to Mince. 15% Fat',
    p: 151500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'FQ85 Mince (15% fat)', p: 176500, u: null, c: null, s: 0.9 },
  { n: 'FQ90 Lean Rump Mince', p: 328500, u: null, c: null, s: 0.9 },
  { n: 'Veal Mince', p: 260000, u: null, c: null, s: 0.9 },
  { n: 'Pastrami Beef', p: 285500, u: null, c: null, s: 0.9 },
  { n: 'Oso Busso (Whole)', p: 244000, u: null, c: null, s: 0.9 },
  { n: 'Oso Busso (Portioned)', p: 265000, u: null, c: null, s: 0.9 },
  { n: 'Oso Busso (Bone)', p: 244000, u: null, c: null, s: 0.9 },
  { n: 'Chuck (Whole 20kg)', p: 222500, u: null, c: null, s: 0.9 },
  {
    n: 'Chuck/Blade (whole 16kg)',
    p: 215000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Blade Roast Marinaated', p: 275500, u: null, c: null, s: 0.9 },
  { n: 'Rump Picanha', p: 336500, u: null, c: null, s: 0.9 },
  {
    n: 'Gravy Beef/ Stewing Steak.',
    p: 298500,
    u: null,
    c: null,
    s: 0.9
  }
]
✅ Extracted 40 products
✅ Image 1: 40 products extracted by Gemini Flash 2.0
🔍 Processing image 2/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_2.png: ```json
[
  {"n": "Beef Fat", "p": 80500.00, "u": "1Kg", "c": null, "s": 0.9},
  {"n": "Brisket (whole 12)", "p": 238500.00, "u": null, "c": null, "s": 0.9},
  {"n": "Chuck Tender (2 Pieces)", "p": 23...
📊 Parsed data: [
  { n: 'Beef Fat', p: 80500, u: '1Kg', c: null, s: 0.9 },
  { n: 'Brisket (whole 12)', p: 238500, u: null, c: null, s: 0.9 },
  { n: 'Chuck Tender (2 Pieces)', p: 239750, u: null, c: null, s: 0.9 },
  {
    n: 'Tail Cut (Ox Tail)',
    p: 310500,
    u: 'On Request',
    c: null,
    s: 0.9
  },
  { n: 'Veal Portion', p: 260000, u: '200Grm', c: null, s: 0.9 },
  {
    n: 'Short Rib (Cut to Specification)',
    p: 250500,
    u: 'On Request',
    c: null,
    s: 0.9
  },
  {
    n: 'Short Rib Marinated (Pre Cooked)',
    p: 262500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  { n: 'Crest Meat (HUMP)', p: 159000, u: null, c: null, s: 0.9 },
  { n: 'Shankell', p: 238500, u: null, c: null, s: 0.9 },
  { n: 'Flank Steak', p: 245500, u: '500gm', c: null, s: 0.9 },
  { n: 'Beef Short Rib Boneless', p: 278000, u: null, c: null, s: 0.9 },
  { n: 'Beef Cheek', p: 365500, u: null, c: null, s: 0.9 },
  { n: 'BBQ Beef Sausages', p: 182500, u: '500gm', c: null, s: 0.9 },
  {
    n: 'Chorizo Beef Sausages',
    p: 188250,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Tomato & Onion Beef Sausages',
    p: 210500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  { n: 'Chicken Sausages', p: 138500, u: '500gm', c: null, s: 0.9 },
  {
    n: 'Breakfast Sausages (Pork & Beef)',
    p: 185500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Cumberland Pork Sausages',
    p: 198500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Soft Cabana Smoked Sausage (Pork & Beef)',
    p: 275500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Dry Cabana Smoked Sausage (Pork & Beef)',
    p: 275500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Chorizo Pork Sausages',
    p: 192500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Bratwus Pork Sausages',
    p: 259500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Kransky Sausages',
    p: 268000,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Cabanosi Pork Sausages',
    p: 269500,
    u: '300gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Gourmet Lamb Sausages',
    p: 285500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Aussie Beef Rissole (1pack = 2pcs)',
    p: 63000,
    u: '150gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'BBQ Beef Burger (1pack = 2pcs)',
    p: 63000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Burger(1pack = 2pcs)',
    p: 43500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Crumbed Fish Patty (1pack = 2 pcs)',
    p: 38000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Breakfast Burger (Pork & Beef) (1pack = 2pcs)',
    p: 59000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  { n: 'Beef Crumbed Patty', p: 35000, u: '200gm', c: null, s: 0.9 },
  { n: 'Veal Crumbed Patty', p: 29000, u: '200gm', c: null, s: 0.9 },
  {
    n: 'Tomato & Onion Beef Burger(1pack = 2pcs)',
    p: 35000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chorizo Beef Burger (1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chorizo Pork Burger(1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Breakfast Burger (Pork & Beef) (1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Cumberland Pork Burger(1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Herb Burger(1pack = 2pcs)',
    p: 22500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Texan Burger(1pack = 2pcs)',
    p: 35000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'PASTRAMI (Beef) Sliced',
    p: 275500,
    u: '150gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Aussie Beef Hot Dogs/Also Chipolata',
    p: 197500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Aussie Cheese Beef Kransky Hot Dog',
    p: 203000,
    u: '500gm',
    c: null,
    s: 0.9
  },
  { n: 'Chicken Hot Dog', p: 136000, u: '500gm', c: null, s: 0.9 },
  { n: 'Pork Hot Dog', p: 203000, u: '500gm', c: null, s: 0.9 }
]
✅ Extracted 44 products
✅ Image 2: 44 products extracted by Gemini Flash 2.0
🔍 Processing image 3/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_3.png: ```json
[
  {"n": "Bakso Balls", "p": 168500.00, "u": "500gm", "c": null, "s": 0.9},
  {"n": "Aussie Pork Bacon Pie", "p": 45000.00, "u": "300gm", "c": "POULTRY", "s": 0.9},
  {"n": "Aussie Beef Mince...
📊 Parsed data: [
  { n: 'Bakso Balls', p: 168500, u: '500gm', c: null, s: 0.9 },
  {
    n: 'Aussie Pork Bacon Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Beef Mince Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Beef Mince Party Pie',
    p: 19500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Chicken Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Chicken Party Pie',
    p: 19500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Aussie Pork Pie', p: 45000, u: '300gm', c: 'POULTRY', s: 0.9 },
  {
    n: 'Aussie Chicken Curry Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Steak Mashroom Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Pork Curry Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Cottage Meat Pie 250 Gr',
    p: 37500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Cottage Meat Pie 450 Gr',
    p: 65000,
    u: '450gm',
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Lasagna', p: 65000, u: '500gm', c: 'POULTRY', s: 0.9 },
  {
    n: 'Vegetable Samosa',
    p: 30000,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Beef Samosa`',
    p: 38500,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Pork Samosa',
    p: 38500,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken Samosa',
    p: 34000,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Marrow Bone Special (Cut)',
    p: 89500,
    u: 'on request',
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Marrow Bone', p: 84500, u: 'on request', c: 'POULTRY', s: 0.9 },
  { n: 'Back Bone', p: 65000, u: 'on request', c: 'POULTRY', s: 0.9 },
  {
    n: 'Mixed Bone Special',
    p: 89500,
    u: 'on request',
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Dog Bones', p: 65000, u: 'on request', c: 'POULTRY', s: 0.9 },
  { n: 'Dog Mince', p: 65000, u: 'on request', c: 'POULTRY', s: 0.9 },
  { n: 'Lamb Shank', p: 218500, u: '350 Gr-500 Gr', c: 'LAMB', s: 0.9 },
  { n: 'Lamb Hind Shank', p: 218500, u: 'HindHh', c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Hind Shank Pre Cooked in Gravy sauce',
    p: 229500,
    u: '800gm',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Leg Bone In', p: 207350, u: 'Bonell', c: 'LAMB', s: 0.9 },
  { n: 'Lamb Leg Bone Out', p: 255500, u: 'Bonell', c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Rack (Portioning Plus 10%)',
    p: 272500,
    u: '10Rr',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Rack French Cut', p: 286500, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb loin whole (Portioning Plus 10%)',
    p: 248500,
    u: '10lp',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Shoulder Bone In', p: 205500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Lamb Full Carcass', p: 175500, u: 'FullFf', c: 'LAMB', s: 0.9 },
  { n: 'Goat Carcass', p: 189500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Lamb Neck', p: 175500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Lamb Mince', p: 286500, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Shoulder Bone out',
    p: 222500,
    u: 'Boneless',
    c: 'LAMB',
    s: 0.9
  },
  {
    n: 'Lamb Texan Salami',
    p: 255000,
    u: 'TexanTt',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Cut Lamb Hind Shank', p: 184000, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Cube Bone In',
    p: 175500,
    u: 'Bone In',
    c: 'LAMB',
    s: 0.9
  }
]
✅ Extracted 40 products
✅ Image 3: 40 products extracted by Gemini Flash 2.0
🔍 Processing image 4/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_4.png: ```json
[
  {"n": "Lamb Kebab", "p": 266500.00, "u": "30gm each", "c": "LAMB", "s": 0.9},
  {"n": "Lamb Rib/Belly Marinated (Pre Cooked)", "p": 252500.00, "u": "500gm", "c": "LAMB", "s": 0.9},
  {"n":...
📊 Parsed data: [
  { n: 'Lamb Kebab', p: 266500, u: '30gm each', c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Rib/Belly Marinated (Pre Cooked)',
    p: 252500,
    u: '500gm',
    c: 'LAMB',
    s: 0.9
  },
  {
    n: 'Lamb Cutlets (Portioned)',
    p: 286500,
    u: null,
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Loin (Portioned)', p: 252500, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Cutlets French Cut',
    p: 375000,
    u: null,
    c: 'LAMB',
    s: 0.9
  },
  { n: '4 Q Lamb Chops', p: 252500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Crumbed Lamb Cutlets', p: 266500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Whole Chicken', p: null, u: '1.4', c: 'POULTRY', s: 0.7 },
  { n: 'Breast', p: null, u: '2', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Maryland', p: null, u: '500', c: 'POULTRY', s: 0.7 },
  { n: 'Wings', p: null, u: '1.5', c: 'POULTRY', s: 0.7 },
  { n: 'Legs', p: null, u: '1.5', c: 'POULTRY', s: 0.7 },
  { n: 'Thighs', p: null, u: '1.5', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Cube', p: null, u: '250', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Bone', p: null, u: 'On Request', c: 'POULTRY', s: 0.7 },
  { n: 'Heart & Liver', p: null, u: '500', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Mince', p: null, u: '500', c: 'POULTRY', s: 0.7 },
  {
    n: 'Chicken Leg Marinated',
    p: 68500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Marocan Chicken Thigh Boneless',
    p: 75500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken / Stuffed Mushroom',
    p: 125500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken Aussie Gordon Blue',
    p: 130000,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken Wing Chinese BBQ',
    p: 65500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken Garlic Ginger Soya',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken British Curry',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Half Chicken BBQ', p: 49500, u: null, c: 'POULTRY', s: 0.9 },
  {
    n: 'Half Chicken Piri - Piri',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken Mexican',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Half Chicken Hoisin', p: 49500, u: null, c: 'POULTRY', s: 0.9 },
  {
    n: 'Half Chicken Tandori',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken Marocan',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Chicken Cajun', p: 75500, u: null, c: 'POULTRY', s: 0.9 },
  { n: 'Turkey 3kg', p: null, u: 'N/A', c: 'POULTRY', s: 0.7 },
  {
    n: 'Turkey 7 to 8 kg Approx',
    p: null,
    u: 'N/A',
    c: 'POULTRY',
    s: 0.7
  },
  { n: 'Peking Duck', p: 79500, u: '1.7', c: 'POULTRY', s: 0.9 }
]
✅ Extracted 34 products
✅ Image 4: 34 products extracted by Gemini Flash 2.0
🔍 Processing image 5/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_5.png: ```json
[
  {"n": "Red Snapper Fresh Fillet", "p": 376500.00, "u": "K/G", "c": null, "s": 0.9},
  {"n": "Goldband Snapper Fresh Fillet", "p": 305000.00, "u": "K/G", "c": null, "s": 0.9},
  {"n": "Swor...
📊 Parsed data: [
  {
    n: 'Red Snapper Fresh Fillet',
    p: 376500,
    u: 'K/G',
    c: null,
    s: 0.9
  },
  {
    n: 'Goldband Snapper Fresh Fillet',
    p: 305000,
    u: 'K/G',
    c: null,
    s: 0.9
  },
  { n: 'Swordfish (Meka)', p: 201200, u: 'K/G', c: null, s: 0.9 },
  { n: 'YF Tuna Steak', p: 200725, u: 'K/G', c: null, s: 0.9 },
  { n: 'BF Tuna Steak', p: 252000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Salmon Fillet', p: 632000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Coral Grouper (Kerapu)', p: 337000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Jumbo Shrimp (Vename)', p: 282000, u: 'K/G', c: null, s: 0.9 },
  { n: 'King Tiger Prawn (20)', p: 374000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Baramundi', p: 318000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Giant Trevally (Cakol)', p: 255500, u: 'K/G', c: null, s: 0.9 },
  { n: 'Calamari Tube', p: 218500, u: 'K/G', c: null, s: 0.9 },
  { n: 'Mahi Mahi', p: 243000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Sea Bass', p: 307500, u: 'K/G', c: null, s: 0.9 },
  {
    n: 'White Snapper (Kakap Putih)',
    p: 337000,
    u: 'K/G',
    c: null,
    s: 0.9
  }
]
✅ Extracted 15 products
✅ Image 5: 15 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 173 products from 5 images in 51619ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 173 products extracted in 53759ms
 POST /api/upload-unified 200 in 53766ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: AF Seafood 03_07.pdf (application/pdf, 432459 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: AF Seafood 03_07.pdf
🔍 PDF extraction starting: AF Seafood 03_07.pdf
📄 Step 1: Converting PDF to images: AF Seafood 03_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_1.png: ```json
[{"n":"PRAWN 10","p":250000,"u":"PRICE/KG","c":null,"s":0.9},{"n":"PRAWN 15","p":210000,"u":"PRICE/KG","c":null,"s":0.9},{"n":"PRAWN 20","p":185000,"u":"PRICE/KG","c":null,"s":0.9},{"n":"PRAWN...
📊 Parsed data: [
  { n: 'PRAWN 10', p: 250000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 15', p: 210000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 20', p: 185000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 25', p: 165000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 30', p: 155000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 40', p: 135000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 50', p: 120000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'PRAWN 60', p: 100000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: '20', p: 280000, u: 'PRICE/KG', c: null, s: 0.7 },
  { n: '30', p: 250000, u: 'PRICE/KG', c: null, s: 0.7 },
  { n: '40', p: 220000, u: 'PRICE/KG', c: null, s: 0.7 },
  { n: '50', p: 200000, u: 'PRICE/KG', c: null, s: 0.7 },
  {
    n: 'RIVER PRAWN 100-UP',
    p: 220000,
    u: 'PRICE/KG',
    c: null,
    s: 0.9
  },
  { n: 'LOBSTER 100-200', p: 380000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'LOBSTER 200-300', p: 420000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'LOBSTER 300-500', p: 450000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'LOBSTER 500-UP', p: 470000, u: 'PRICE/KG', c: null, s: 0.9 },
  {
    n: 'LOBSTER SLIPER 150-UP',
    p: 180000,
    u: 'PRICE/KG',
    c: null,
    s: 0.9
  },
  { n: 'LOCAL CLAM', p: 25000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'GREEN MUSSLE', p: 50000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'OYSTER', p: 60000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'OYSTER', p: 50000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'MANILA', p: 40000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'BATIK', p: 40000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP', p: 80000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 30/40', p: 170000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 40/50', p: 150000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 20/30', p: 280000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 30/40', p: 270000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 40/60', p: 250000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 60/80', p: 220000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 100/120', p: 190000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SCALLOP 120/140', p: 170000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'SQUID SOTONG', p: 175000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'MANIS', p: 165000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'TUBE', p: 95000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'RING', p: 100000, u: 'PRICE/KG', c: null, s: 0.9 },
  { n: 'FLOWER', p: 100000, u: 'PRICE/KG', c: null, s: 0.9 }
]
✅ Extracted 38 products
✅ Image 1: 38 products extracted by Gemini Flash 2.0
🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_2.png: ```json
[
  {"n": "SQUID SOTONG", "p": 120000, "u": null, "c": "WHOLE", "s": 0.9},
  {"n": "MANIS", "p": 95000, "u": null, "c": "WHOLE", "s": 0.9},
  {"n": "RED SNAPPER", "p": 115000, "u": "SIZE BY RE...
📊 Parsed data: [
  { n: 'SQUID SOTONG', p: 120000, u: null, c: 'WHOLE', s: 0.9 },
  { n: 'MANIS', p: 95000, u: null, c: 'WHOLE', s: 0.9 },
  { n: 'RED SNAPPER', p: 115000, u: 'SIZE BY REQ', c: 'WHOLE', s: 0.9 },
  {
    n: 'WHITE SNAPPER',
    p: 110000,
    u: 'SIZE BY REQ',
    c: 'WHOLE',
    s: 0.9
  },
  { n: 'CRAB', p: 150000, u: '200-300', c: 'LIVE', s: 0.9 },
  { n: 'CRAB', p: 200000, u: '300-400', c: 'LIVE', s: 0.9 },
  { n: 'CRAB', p: 240000, u: '500-700', c: 'LIVE', s: 0.9 },
  { n: 'CRAB', p: 300000, u: '800 Up', c: 'LIVE', s: 0.9 },
  { n: 'CRAB SOFT SHELL', p: 170000, u: '150-UP', c: 'FROZEN', s: 0.9 },
  { n: 'SEA CRAB', p: 150000, u: '150-UP', c: 'LIVE', s: 0.9 },
  { n: 'OCTOPUS', p: 100000, u: '1kg Down', c: 'WHOLE', s: 0.9 },
  { n: 'OCTOPUS', p: 130000, u: '1kg Up', c: 'WHOLE', s: 0.9 },
  { n: 'OCTOPUS', p: 140000, u: '2kg Up', c: 'WHOLE', s: 0.9 },
  {
    n: 'TUNA SUSHI GRADE',
    p: 175000,
    u: null,
    c: 'CENTER CUT',
    s: 0.9
  },
  { n: 'TUNA SAKU', p: 130000, u: null, c: 'PORTION', s: 0.9 },
  { n: 'TUNA FILLET', p: 125000, u: null, c: 'LOIN', s: 0.9 },
  { n: 'TUNA STEAK', p: 125000, u: '100-200', c: 'PORTION', s: 0.9 },
  { n: 'OTORO TUNA', p: 350000, u: null, c: 'FROZEN', s: 0.9 },
  {
    n: 'RED SNAPPER',
    p: 200000,
    u: null,
    c: 'FILLET SKIN ON/OFF',
    s: 0.9
  },
  {
    n: 'WHITE SNAPPER',
    p: 150000,
    u: null,
    c: 'FILLET SKIN ON/OFF',
    s: 0.9
  },
  {
    n: 'SEA BASS',
    p: 140000,
    u: null,
    c: 'FILLET SKIN ON/OFF',
    s: 0.9
  },
  { n: 'PARROT', p: 145000, u: null, c: 'FILLET SKIN ON/OFF', s: 0.9 },
  { n: 'SWORD FISH', p: 115000, u: null, c: 'FILLET SKIN OFF', s: 0.9 },
  {
    n: 'BUTTER FISH',
    p: 140000,
    u: null,
    c: 'FILLET SKIN OFF',
    s: 0.9
  },
  { n: 'MAHI-MAHI', p: 120000, u: null, c: 'FILLET SKIN OFF', s: 0.9 },
  { n: 'COBIA/DELEG', p: 65000, u: null, c: 'WHOLE', s: 0.9 },
  {
    n: 'COBIA/DELEG',
    p: 100000,
    u: null,
    c: 'FILLET SKIN OFF',
    s: 0.9
  },
  { n: 'BARRAMUNDI', p: 160000, u: null, c: 'FILLET SKIN ON', s: 0.9 },
  { n: 'KERAPU/GROUPER', p: 80000, u: null, c: 'WHOLE', s: 0.9 },
  {
    n: 'KERAPU/GROUPER',
    p: 165000,
    u: null,
    c: 'FILLET SKIN ON',
    s: 0.9
  }
]
✅ Extracted 30 products
✅ Image 2: 30 products extracted by Gemini Flash 2.0
🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_3.png: ```json
[
  {"n": "MARLIN", "p": 85000, "u": null, "c": null, "s": 0.9},
  {"n": "MARLIN STEAK", "p": 100000, "u": "PORTION", "c": null, "s": 0.9},
  {"n": "MACKAREL / TENGIRI", "p": 160000, "u": null...
📊 Parsed data: [
  { n: 'MARLIN', p: 85000, u: null, c: null, s: 0.9 },
  { n: 'MARLIN STEAK', p: 100000, u: 'PORTION', c: null, s: 0.9 },
  { n: 'MACKAREL / TENGIRI', p: 160000, u: null, c: null, s: 0.9 },
  { n: 'DORY', p: 70000, u: null, c: null, s: 0.9 },
  { n: 'WAHOO', p: 150000, u: null, c: null, s: 0.9 },
  { n: 'WAHOO', p: 80000, u: 'WHOLE', c: null, s: 0.9 },
  { n: 'SALMON TROUT', p: 270000, u: null, c: null, s: 0.9 },
  { n: 'SALMON TAZMAN', p: 290000, u: null, c: null, s: 0.9 },
  { n: 'SALMON', p: 350000, u: null, c: null, s: 0.9 },
  { n: 'SALMON', p: 300000, u: null, c: null, s: 0.9 },
  { n: 'SALMON', p: 320000, u: null, c: null, s: 0.9 },
  { n: 'SALMON SMOKED', p: 390000, u: '900GR Pax', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 3: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_4.png: I am unable to process this image. Can you provide a clearer image?...
❌ No JSON found in response
✅ Image 4: 0 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 80 products from 4 images in 23685ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 80 products extracted in 24813ms
 POST /api/upload-unified 200 in 24823ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Bali diary 05_07 .pdf (application/pdf, 7688127 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Bali diary 05_07 .pdf
🔍 PDF extraction starting: Bali diary 05_07 .pdf
📄 Step 1: Converting PDF to images: Bali diary 05_07 .pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Bali diary 05_07 .pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Bali diary 05_07 .pdf_page_1.png: ```json
[
  {"n": "Camembert 55% f.d.m, 10 days aging", "p": 355000, "u": "150-200gr/pcs", "c": "COWMILK - SOFT CHEESE", "s": 0.9},
  {"n": "Brie 55% f.d.m, 14 days aging", "p": 389000, "u": "2,5-3kg/...
📊 Parsed data: [
  {
    n: 'Camembert 55% f.d.m, 10 days aging',
    p: 355000,
    u: '150-200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Brie 55% f.d.m, 14 days aging',
    p: 389000,
    u: '2,5-3kg/wheel',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Bali-Blue (Cambozola-style blue cheese), 55% f.d.m.',
    p: 400000,
    u: '150-200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Balzola (Gorgonzola-style blue cheese) 65% f.d.m.,',
    p: 500000,
    u: '5-8kg/wheel',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Labnah (Strained Yoghurt- cheese) 68% f.d.m.,',
    p: 222000,
    u: '1 kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Panneer Cheese',
    p: 322000,
    u: '1kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'German Cream Cheese (Fresh cheese)0.1%f.d.m',
    p: 100000,
    u: '500gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Quark (German-stye curd-cheese)',
    p: 100000,
    u: '500gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Syrki Small (chocolate cheese bar) 30g',
    p: 9000,
    u: '30g/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Syrki Small (chocolate cheese bar) 60g',
    p: 17000,
    u: '60gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Mozzarella',
    p: 56000,
    u: '200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Romadur (Munsterstyle) 200 gr, 55%f.d.m',
    p: 322000,
    u: '200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Shankleesh (Dreamcheese Herbs in oil)',
    p: 33000,
    u: '100gr/1kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Feta Cheese',
    p: 278000,
    u: '1kg-1,3kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Smoked Feta cheese',
    p: 29000,
    u: '1kg-1,3kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Feta in oil glass jar with olive/sunflower oil',
    p: 50000,
    u: '200gr/glass',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Hallumi Cheese',
    p: 278000,
    u: '1kg-1,3kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Schlosskaese 55% f.d.m 150 gr pcs,',
    p: 355000,
    u: '100gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Oscypek (Pasta Filata)',
    p: 333000,
    u: '800gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Cheddar white, 4 weeks aged in vacuumfoil, no rind, 45% f.d.m',
    p: 278000,
    u: '2,5-3kg/pack',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Cheddar Red, 4 weeks aged in vacuumfoil, no rind, 45% f.d.m',
    p: 278000,
    u: '2,5-3kg/pack',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Butter Cheese',
    p: 278000,
    u: '2,5-3kg/pack',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Tilister, 4 weeks aging in vakuumfoil',
    p: 433000,
    u: '6-7kg/wheel',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Mountain Cheese/ Gruyere style cheese',
    p: 433000,
    u: '15kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Manchego (Rosemary)',
    p: 389000,
    u: '4-6kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Balitaler (emmental without big holes, same taste) -',
    p: 389000,
    u: '15kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'reserve 6 to 12 moths. 45% f.d.m.',
    p: null,
    u: null,
    c: 'COWMILK - HARD CHEESE',
    s: 0.7
  },
  {
    n: 'Raclette Cheese',
    p: 389000,
    u: '5-7kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Smoked Raclette',
    p: 389000,
    u: '5kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Bali spicy/Chilli cheese',
    p: 389000,
    u: '5kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Goat Cheese',
    p: 500000,
    u: '150-200gr/pcs',
    c: 'GOAT MILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: '"Crottin de Chavignol"',
    p: null,
    u: null,
    c: 'GOAT MILK - SOFT CHEESE',
    s: 0.7
  },
  {
    n: 'Cheese Platter',
    p: 441000,
    u: '1,3 kg/pack',
    c: 'OTHER PRODUCTS',
    s: 0.9
  },
  {
    n: 'Mettenden Roh Polnish (pork saussage)',
    p: 250000,
    u: '1kg',
    c: 'OTHER PRODUCTS',
    s: 0.9
  },
  {
    n: 'Pfefferbeisser (mix pork beef saussage)',
    p: 299000,
    u: '1kg',
    c: 'OTHER PRODUCTS',
    s: 0.9
  }
]
✅ Extracted 35 products
✅ Image 1: 35 products extracted by Gemini Flash 2.0
🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Bali diary 05_07 .pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Bali diary 05_07 .pdf_page_2.png: ```json
[
  {"n": "Natur Yoghurt Premium PLAIN -", "p": 61000, "u": "1L", "c": "YOGURT & KEFIR", "s": 0.9},
  {"n": "Fruit yoghurt Premium", "p": 61000, "u": "IL", "c": "YOGURT & KEFIR", "s": 0.9},
  ...
📊 Parsed data: [
  {
    n: 'Natur Yoghurt Premium PLAIN -',
    p: 61000,
    u: '1L',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Fruit yoghurt Premium',
    p: 61000,
    u: 'IL',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Yogurt in short glass pudding 90ml -',
    p: 11000,
    u: '90 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Cup yogurt 80 ml -',
    p: 6000,
    u: '80 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Skyr (low fat yogurt)',
    p: 100000,
    u: '1L',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Skyr cup 150ml (plain, strawberry, blackberry, mango)',
    p: 17000,
    u: '150ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Vegan Coconut Yoghurt',
    p: 80000,
    u: 'IL',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Greek Style yogurt',
    p: 85000,
    u: 'IL',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Drink Kefir 6% f.d.m.',
    p: 28000,
    u: '500 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Drink yogurt (Apple, Vanilla, Bluberry, Peach)',
    p: 33000,
    u: '500 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Saurerrahm (Sour cream 32% fat)',
    p: 44000,
    u: '200gr',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Saurerrahm (Sour cream 32% fat)',
    p: 100000,
    u: 'IL',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Full-Fat fresh milk (3,9% fat) 1L',
    p: 23000,
    u: '11',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Full-Fat fresh milk (3,9% fat) 5L',
    p: 90000,
    u: 'SL',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Probiotic Whey Drink fat free (Guava and Mango)',
    p: 22000,
    u: '500ml',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Probiotic Whey Drink fat free (Guava and Mango)',
    p: 100000,
    u: 'SL',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Pickles Gerkins Plain',
    p: 56000,
    u: '500gr/Jar',
    c: 'NON DAIRY PRODUCT',
    s: 0.9
  },
  {
    n: 'Pickles Spicy Gerkins',
    p: 56000,
    u: '500gr/Jar',
    c: 'NON DAIRY PRODUCT',
    s: 0.9
  },
  {
    n: 'Mixed Pickles',
    p: 67000,
    u: '500gr/Jar',
    c: 'NON DAIRY PRODUCT',
    s: 0.9
  }
]
✅ Extracted 19 products
✅ Image 2: 19 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 54 products from 2 images in 21814ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 54 products extracted in 27968ms
 POST /api/upload-unified 200 in 27991ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Benoa fish market 03_07.pdf (application/pdf, 2137859 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Benoa fish market 03_07.pdf
🔍 PDF extraction starting: Benoa fish market 03_07.pdf
📄 Step 1: Converting PDF to images: Benoa fish market 03_07.pdf
✅ Converted to 5 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
 POST /api/upload-unified 200 in 7197ms
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_1.png: ```json
[
  {"n": "Striploin MBS 4/5", "p": 175000, "u": "100G", "c": null, "s": 0.9},
  {"n": "Striploin MBS 6/7", "p": 205000, "u": "100G", "c": null, "s": 0.9},
  {"n": "Striploin MBS 8/9", "p": 24...
📊 Parsed data: [
  { n: 'Striploin MBS 4/5', p: 175000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin MBS 6/7', p: 205000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin MBS 8/9', p: 245000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye MBS 4/5', p: 185000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye MBS 6/7', p: 215000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye MBS 8/9', p: 250000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin MBS 4/5', p: 205000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin MBS 6/7', p: 235000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin MBS 8/9', p: 270000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin A4', p: 450000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin A5', p: 465000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye A4', p: 460000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye A5', p: 475000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin A5', p: 485000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin', p: 30000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye', p: 40000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin', p: 55000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin No Roll', p: 50000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin Choice', p: 65000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin Prime', p: 95000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye No Roll', p: 70000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye Choice', p: 90000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye Prime', p: 105000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin No Roll', p: 85000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin Choice', p: 100000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin Prime', p: 125000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'Ribeye', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'Tenderloin', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'Saikoro Cubes', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'AU. Striploin', p: 240000, u: '100G', c: null, s: 0.9 },
  { n: 'AU. Ribeye', p: 260000, u: '100G', c: null, s: 0.9 }
]
✅ Extracted 32 products
✅ Image 1: 32 products extracted by Gemini Flash 2.0
🔍 Processing image 2/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_2.png: ```json
[
  {"n": "Smoked Beef Bacon", "p": 75000, "u": null, "c": null, "s": 0.9},
  {"n": "Smoked Pork Bacon", "p": 70000, "u": null, "c": null, "s": 0.9},
  {"n": "Dry Cured Black Angus Beef", "p":...
📊 Parsed data: [
  { n: 'Smoked Beef Bacon', p: 75000, u: null, c: null, s: 0.9 },
  { n: 'Smoked Pork Bacon', p: 70000, u: null, c: null, s: 0.9 },
  {
    n: 'Dry Cured Black Angus Beef',
    p: 105000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Dry Cured Pork Streaky', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'US. Kalbi Choice', p: 290000, u: null, c: null, s: 0.9 },
  { n: 'US. Kalbi Prime', p: 330000, u: null, c: null, s: 0.9 },
  { n: 'US. Karubi Choice', p: 400000, u: null, c: null, s: 0.9 },
  { n: 'US. Karubi Prime', p: 500000, u: null, c: null, s: 0.9 },
  { n: 'JP. Karubi Wagyu A5', p: 1100000, u: null, c: null, s: 0.9 },
  { n: 'AU. Ox Tongue', p: 130000, u: null, c: null, s: 0.9 },
  { n: 'AU. Rump', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'AU. Ribeye', p: 180000, u: null, c: null, s: 0.9 },
  { n: 'AU. Sirloin', p: 125000, u: null, c: null, s: 0.9 },
  { n: 'US. Shortplate', p: 115000, u: null, c: null, s: 0.9 },
  { n: 'NZ. Topside', p: 110000, u: null, c: null, s: 0.9 },
  { n: 'AU Oxtail', p: 450000, u: 'KG', c: null, s: 0.9 },
  { n: 'AU Marrow Split', p: 110000, u: 'KG', c: null, s: 0.9 },
  { n: 'AU Marrow Center', p: 110000, u: 'KG', c: null, s: 0.9 },
  { n: 'US. Pork Loin', p: 95000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Collar', p: 90000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Tenderloin', p: 110000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Belly Skin On', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Belly Skin Off', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'Salmon 100 GR', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'Duck Breast 225 GR', p: 100000, u: null, c: null, s: 0.9 }
]
✅ Extracted 25 products
✅ Image 2: 25 products extracted by Gemini Flash 2.0
🔍 Processing image 3/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_3.png: ```json
[
  {"n": "AU. Beef", "p": 100000, "u": "500 GRAMS / PACK", "c": null, "s": 0.9},
  {"n": "US. Pork", "p": 105000, "u": "500 GRAMS / PACK", "c": null, "s": 0.9},
  {"n": "OR. Chicken", "p": 10...
📊 Parsed data: [
  { n: 'AU. Beef', p: 100000, u: '500 GRAMS / PACK', c: null, s: 0.9 },
  { n: 'US. Pork', p: 105000, u: '500 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'OR. Chicken',
    p: 105000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Beef Balls', p: 25000, u: '250 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'Cheese Fish Balls',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Crab Balls', p: 20000, u: '250 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'Lobster Balls',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Original Fish Balls',
    p: 15000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Salmon Balls',
    p: 20000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Shrimp Balls',
    p: 20000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Squid Balls',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Seafood Mixball 1KG', p: 85000, u: null, c: null, s: 0.9 },
  {
    n: 'China Broccoli',
    p: 20000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Mix Vegetables',
    p: 20000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Chikuwa / Crab Stick',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Fish Cheese Dumpling',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'French Fries Shoestring',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Korean Fish Odeng',
    p: 20000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Fried Fish Cake / Roll',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Superside Steamboat 1KG', p: 85000, u: null, c: null, s: 0.9 },
  {
    n: 'Korean Cabbage Kimchi',
    p: 40000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Beef Prime', p: 85000, u: '320 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'Beef Black Angus',
    p: 95000,
    u: '320 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Beef Breakfast',
    p: 160000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Breakfast',
    p: 140000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Precooked',
    p: 95000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Merguez',
    p: 160000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Bratwurst',
    p: 130000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Breakfast',
    p: 140000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Chorizo',
    p: 135000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Italian',
    p: 135000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Toulouse',
    p: 135000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  }
]
✅ Extracted 32 products
✅ Image 3: 32 products extracted by Gemini Flash 2.0
🔍 Processing image 4/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_4.png: ```json
[
  {"n": "Lamb Chop", "p": 435000, "u": null, "c": null, "s": 0.9},
  {"n": "Lamb Rack", "p": 425000, "u": null, "c": null, "s": 0.9},
  {"n": "Lamb Leg Bone In", "p": 325000, "u": null, "c":...
📊 Parsed data: [
  { n: 'Lamb Chop', p: 435000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Rack', p: 425000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Leg Bone In', p: 325000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Leg Boneless', p: 375000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Shank', p: 300000, u: null, c: null, s: 0.9 },
  { n: 'Breast Fillet', p: 130000, u: null, c: null, s: 0.9 },
  { n: 'Feet with Bone', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Thigh Fillet', p: 140000, u: null, c: null, s: 0.9 },
  { n: 'Whole Free Range', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'Whole Probiotic', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'Wings with Bone', p: 40000, u: null, c: null, s: 0.9 },
  { n: 'Duck Leg Confit (4)', p: 400000, u: null, c: null, s: 0.9 },
  {
    n: 'Tiger Head Skin On Size 20',
    p: 240000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Tiger Head Skin On Size 30',
    p: 200000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Vaname Peeled Size 30', p: 190000, u: null, c: null, s: 0.9 },
  {
    n: 'Vaname Peeled Size 40/60',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Squid Tube', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'Squid Ring', p: 120000, u: null, c: null, s: 0.9 },
  { n: 'FR Pork Chop', p: 270000, u: null, c: null, s: 0.9 },
  { n: 'US Baby Back Ribs', p: 225000, u: null, c: null, s: 0.9 },
  { n: 'US Belly Skin On', p: 185000, u: null, c: null, s: 0.9 },
  { n: 'US Cutlet Brined', p: 250000, u: null, c: null, s: 0.9 },
  { n: 'US Spare Ribs', p: 175000, u: null, c: null, s: 0.9 },
  { n: 'Dory Fillet', p: 90000, u: null, c: null, s: 0.9 },
  { n: 'Norway Salmon Fillet', p: 400000, u: null, c: null, s: 0.9 },
  { n: 'Tuna Saku A (Sashimi)', p: 200000, u: null, c: null, s: 0.9 },
  { n: 'Australian', p: 750000, u: null, c: null, s: 0.9 },
  { n: 'US Angus Choice', p: 900000, u: null, c: null, s: 0.9 }
]
✅ Extracted 28 products
✅ Image 4: 28 products extracted by Gemini Flash 2.0
🔍 Processing image 5/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_5.png: ```json
[
  {"n": "Bulgogi", "p": 35000, "u": null, "c": null, "s": 0.9},
  {"n": "Galbi", "p": 35000, "u": null, "c": null, "s": 0.9},
  {"n": "Gochujang", "p": 50000, "u": null, "c": null, "s": 0.9}...
📊 Parsed data: [
  { n: 'Bulgogi', p: 35000, u: null, c: null, s: 0.9 },
  { n: 'Galbi', p: 35000, u: null, c: null, s: 0.9 },
  { n: 'Gochujang', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Beef Mutton Clear', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Beef Mutton Spices', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mala Beef Tallow', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Mala Clear Oil', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mala Tang Beef Sesame', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mala Tang Spicy Red Oil', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mushroom', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Pork Bone & Chicken', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Pork Belly & Chicken', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Seafood', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Tomato', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Tom Yum Goong', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Barbeque', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Bulgogi', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Gochujang', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Teriyaki Blackpepper', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Teriyaki Garlic', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Yakiniku', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Mala Spicy', p: 20000, u: null, c: null, s: 0.9 },
  { n: 'Sesame Original', p: 20000, u: null, c: null, s: 0.9 },
  { n: 'Sesame Spicy', p: 20000, u: null, c: null, s: 0.9 },
  { n: 'Garlic Herbs', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Japanese Garlic', p: 85000, u: null, c: null, s: 0.9 },
  { n: 'Parmesan Garlic', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Truffle Garlic', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Vegan Organic', p: 70000, u: null, c: null, s: 0.9 },
  { n: 'Blackpepper', p: 25000, u: null, c: null, s: 0.9 },
  { n: 'New Orleans Tomato', p: 25000, u: null, c: null, s: 0.9 },
  { n: 'Sweet & Spicy', p: 25000, u: null, c: null, s: 0.9 }
]
✅ Extracted 32 products
✅ Image 5: 32 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 149 products from 5 images in 46528ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 149 products extracted in 49192ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: 0z britts 1 04_07.pdf (application/pdf, 626964 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: 0z britts 1 04_07.pdf
🔍 PDF extraction starting: 0z britts 1 04_07.pdf
📄 Step 1: Converting PDF to images: 0z britts 1 04_07.pdf
✅ Converted to 5 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_1.png: ```json
[
  {"n": "Tenderloin S/S Off Whole*", "p": 438500.00, "u": null, "c": null, "s": 0.9},
  {"n": "Tenderloin S/S Off * (Portioned)", "p": 455000.00, "u": null, "c": null, "s": 0.9},
  {"n": "Te...
📊 Parsed data: [
  {
    n: 'Tenderloin S/S Off Whole*',
    p: 438500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Tenderloin S/S Off * (Portioned)',
    p: 455000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Tenderloin S/Strap (MVP)',
    p: 387500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Scotch Fillet (Rib Eye) Whole**',
    p: 430500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Scotch Fillet (Rib Eye) ** (Portioned)',
    p: 439500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Striploin (Sirloin) ** Whole(Steak Ready)',
    p: 353500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Striploin (Sirloin) ** (Steak Ready) (Portioned)',
    p: 362000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Porterhouse (Portioned)', p: 367500, u: null, c: null, s: 0.9 },
  { n: 'Rump **', p: 304500, u: null, c: null, s: 0.9 },
  { n: 'Rump (Portioned)', p: 312000, u: null, c: null, s: 0.9 },
  {
    n: 'T Bone Whole * (Shortloin)',
    p: 402000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'T Bone (Portioned)', p: 408500, u: null, c: null, s: 0.9 },
  { n: 'Skirt Whole', p: 268750, u: null, c: null, s: 0.9 },
  {
    n: 'Prime OP Rib B/In Whole (Rib Eye on Bone)',
    p: 379500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Prime OP Rib B/In (Rib Eye on Bone) * Frenched',
    p: 387500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Prime OP Rib B/In (Rib Eye on Bone) * Portioned',
    p: 387500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Tomohawk', p: 387500, u: null, c: null, s: 0.9 },
  { n: 'Topside', p: 244100, u: null, c: null, s: 0.9 },
  { n: 'Topside Outside', p: 244100, u: null, c: null, s: 0.9 },
  {
    n: 'Oyster Blade (Flat Iron Steak)',
    p: 230000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Silverside (Outside)', p: 245500, u: null, c: null, s: 0.9 },
  {
    n: 'Silverside (Frozen. Pickled)',
    p: 254500,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Silverside Corn Beef Sliced',
    p: 279500,
    u: '250gm',
    c: null,
    s: 0.9
  },
  { n: 'Knuckle (Whole)', p: 254500, u: null, c: null, s: 0.9 },
  {
    n: 'Rolled Knuckle ready for roasting',
    p: 254500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Gandik (Eye Round)', p: 254500, u: null, c: null, s: 0.9 },
  { n: 'Veal Whole', p: 254500, u: null, c: null, s: 0.9 },
  {
    n: 'FQ65 CL Cubed Ready to Mince. 15% Fat',
    p: 151500,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'FQ85 Mince (15% fat)', p: 176500, u: null, c: null, s: 0.9 },
  { n: 'FQ90 Lean Rump Mince', p: 328500, u: null, c: null, s: 0.9 },
  { n: 'Veal Mince', p: 260000, u: null, c: null, s: 0.9 },
  { n: 'Pastrami Beef', p: 285500, u: null, c: null, s: 0.9 },
  { n: 'Oso Busso (Whole)', p: 244000, u: null, c: null, s: 0.9 },
  { n: 'Oso Busso (Portioned)', p: 265000, u: null, c: null, s: 0.9 },
  { n: 'Oso Busso (Bone)', p: 244000, u: null, c: null, s: 0.9 },
  { n: 'Chuck (Whole 20kg)', p: 222500, u: null, c: null, s: 0.9 },
  {
    n: 'Chuck/Blade (whole 16kg)',
    p: 215000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Blade Roast Marinaated', p: 275500, u: null, c: null, s: 0.9 },
  { n: 'Rump Picanha', p: 336500, u: null, c: null, s: 0.9 },
  {
    n: 'Gravy Beef/ Stewing Steak.',
    p: 298500,
    u: null,
    c: null,
    s: 0.9
  }
]
✅ Extracted 40 products
✅ Image 1: 40 products extracted by Gemini Flash 2.0
🔍 Processing image 2/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_2.png: ```json
[
  {"n": "Beef Fat", "p": 80500.00, "u": "1Kg", "c": null, "s": 0.9},
  {"n": "Brisket (whole 12)", "p": 238500.00, "u": null, "c": null, "s": 0.9},
  {"n": "Chuck Tender (2 Pieces)", "p": 23...
📊 Parsed data: [
  { n: 'Beef Fat', p: 80500, u: '1Kg', c: null, s: 0.9 },
  { n: 'Brisket (whole 12)', p: 238500, u: null, c: null, s: 0.9 },
  { n: 'Chuck Tender (2 Pieces)', p: 239750, u: null, c: null, s: 0.9 },
  {
    n: 'Tail Cut (Ox Tail)',
    p: 310500,
    u: 'On Request',
    c: null,
    s: 0.7
  },
  { n: 'Veal Portion', p: 260000, u: '200Grm', c: null, s: 0.9 },
  {
    n: 'Short Rib (Cut to Specification)',
    p: 250500,
    u: 'On Request',
    c: null,
    s: 0.7
  },
  {
    n: 'Short Rib Marinated (Pre Cooked)',
    p: 262500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  { n: 'Crest Meat (HUMP)', p: 159000, u: null, c: null, s: 0.9 },
  { n: 'Shankell', p: 238500, u: null, c: null, s: 0.9 },
  { n: 'Flank Steak', p: 245500, u: '500gm', c: null, s: 0.9 },
  { n: 'Beef Short Rib Boneless', p: 278000, u: null, c: null, s: 0.9 },
  { n: 'Beef Cheek', p: 365500, u: null, c: null, s: 0.9 },
  { n: 'BBQ Beef Sausages', p: 182500, u: '500gm', c: null, s: 0.9 },
  {
    n: 'Chorizo Beef Sausages',
    p: 188250,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Tomato & Onion Beef Sausages',
    p: 210500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  { n: 'Chicken Sausages', p: 138500, u: '500gm', c: null, s: 0.9 },
  {
    n: 'Breakfast Sausages (Pork & Beef)',
    p: 185500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Cumberland Pork Sausages',
    p: 198500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Soft Cabana Smoked Sausage (Pork & Beef)',
    p: 275500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Dry Cabana Smoked Sausage (Pork & Beef)',
    p: 275500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Chorizo Pork Sausages',
    p: 192500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Bratwus Pork Sausages',
    p: 259500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Kransky Sausages',
    p: 268000,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Cabanosi Pork Sausages',
    p: 269500,
    u: '300gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Gourmet Lamb Sausages',
    p: 285500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Aussie Beef Rissole (1pack = 2pcs)',
    p: 63000,
    u: '150gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'BBQ Beef Burger (1pack = 2pcs)',
    p: 63000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Burger(1pack = 2pcs)',
    p: 43500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Crumbed Fish Patty (1pack = 2 pcs)',
    p: 38000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Breakfast Burger (Pork & Beef) (1pack = 2pcs)',
    p: 59000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  { n: 'Beef Crumbed Patty', p: 35000, u: '200gm', c: null, s: 0.9 },
  { n: 'Veal Crumbed Patty', p: 29000, u: '200gm', c: null, s: 0.9 },
  {
    n: 'Tomato & Onion Beef Burger(1pack = 2pcs)',
    p: 35000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chorizo Beef Burger (1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chorizo Pork Burger(1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Breakfast Burger (Pork & Beef) (1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Cumberland Pork Burger(1pack = 2pcs)',
    p: 25500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Herb Burger(1pack = 2pcs)',
    p: 22500,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Texan Burger(1pack = 2pcs)',
    p: 35000,
    u: '125gm/pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'PASTRAMI (Beef) Sliced',
    p: 275500,
    u: '150gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Aussie Beef Hot Dogs/Also Chipolata',
    p: 197500,
    u: '500gm',
    c: null,
    s: 0.9
  },
  {
    n: 'Aussie Cheese Beef Kransky Hot Dog',
    p: 203000,
    u: '500gm',
    c: null,
    s: 0.9
  },
  { n: 'Chicken Hot Dog', p: 136000, u: '500gm', c: null, s: 0.9 },
  { n: 'Pork Hot Dog', p: 203000, u: '500gm', c: null, s: 0.9 }
]
✅ Extracted 44 products
✅ Image 2: 44 products extracted by Gemini Flash 2.0
🔍 Processing image 3/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_3.png: ```json
[
  {"n": "Bakso Balls", "p": 168500.00, "u": "500gm", "c": null, "s": 0.9},
  {"n": "Aussie Pork Bacon Pie", "p": 45000.00, "u": "300gm", "c": "POULTRY", "s": 0.9},
  {"n": "Aussie Beef Mince...
📊 Parsed data: [
  { n: 'Bakso Balls', p: 168500, u: '500gm', c: null, s: 0.9 },
  {
    n: 'Aussie Pork Bacon Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Beef Mince Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Beef Mince Party Pie',
    p: 19500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Chicken Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Chicken Party Pie',
    p: 19500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Aussie Pork Pie', p: 45000, u: '300gm', c: 'POULTRY', s: 0.9 },
  {
    n: 'Aussie Chicken Curry Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Steak Mashroom Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Aussie Pork Curry Pie',
    p: 45000,
    u: '300gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Cottage Meat Pie 250 Gr',
    p: 37500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Cottage Meat Pie 450 Gr',
    p: 65000,
    u: '450gm',
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Lasagna', p: 65000, u: '500gm', c: 'POULTRY', s: 0.9 },
  {
    n: 'Vegetable Samosa',
    p: 30000,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Beef Samosa`',
    p: 38500,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Pork Samosa',
    p: 38500,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken Samosa',
    p: 34000,
    u: '30gm each x 4 pk',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Marrow Bone Special (Cut)',
    p: 89500,
    u: 'on request',
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Marrow Bone', p: 84500, u: 'on request', c: 'POULTRY', s: 0.9 },
  { n: 'Back Bone', p: 65000, u: 'on request', c: 'POULTRY', s: 0.9 },
  {
    n: 'Mixed Bone Special',
    p: 89500,
    u: 'on request',
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Dog Bones', p: 65000, u: 'on request', c: 'POULTRY', s: 0.9 },
  { n: 'Dog Mince', p: 65000, u: 'on request', c: 'POULTRY', s: 0.9 },
  { n: 'Lamb Shank', p: 218500, u: '350 Gr-500 Gr', c: 'LAMB', s: 0.9 },
  { n: 'Lamb Hind Shank', p: 218500, u: 'HindHh', c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Hind Shank Pre Cooked in Gravy sauce',
    p: 229500,
    u: '800gm',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Leg Bone In', p: 207350, u: 'Bonell', c: 'LAMB', s: 0.9 },
  { n: 'Lamb Leg Bone Out', p: 255500, u: 'Bonell', c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Rack (Portioning Plus 10%)',
    p: 272500,
    u: '10Rr',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Rack French Cut', p: 286500, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb loin whole (Portioning Plus 10%)',
    p: 248500,
    u: '10lp',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Shoulder Bone In', p: 205500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Lamb Full Carcass', p: 175500, u: 'FullFf', c: 'LAMB', s: 0.9 },
  { n: 'Goat Carcass', p: 189500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Lamb Neck', p: 175500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Lamb Mince', p: 286500, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Shoulder Bone out',
    p: 222500,
    u: 'Boneless',
    c: 'LAMB',
    s: 0.9
  },
  {
    n: 'Lamb Texan Salami',
    p: 255000,
    u: 'TexanTt',
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Cut Lamb Hind Shank', p: 184000, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Cube Bone In',
    p: 175500,
    u: 'Bone In',
    c: 'LAMB',
    s: 0.9
  }
]
✅ Extracted 40 products
✅ Image 3: 40 products extracted by Gemini Flash 2.0
🔍 Processing image 4/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_4.png: ```json
[
  {"n": "Lamb Kebab", "p": 266500.00, "u": "30gm each", "c": "LAMB", "s": 0.9},
  {"n": "Lamb Rib/Belly Marinated (Pre Cooked)", "p": 252500.00, "u": "500gm", "c": "LAMB", "s": 0.9},
  {"n":...
📊 Parsed data: [
  { n: 'Lamb Kebab', p: 266500, u: '30gm each', c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Rib/Belly Marinated (Pre Cooked)',
    p: 252500,
    u: '500gm',
    c: 'LAMB',
    s: 0.9
  },
  {
    n: 'Lamb Cutlets (Portioned)',
    p: 286500,
    u: null,
    c: 'LAMB',
    s: 0.9
  },
  { n: 'Lamb Loin (Portioned)', p: 252500, u: null, c: 'LAMB', s: 0.9 },
  {
    n: 'Lamb Cutlets French Cut',
    p: 375000,
    u: null,
    c: 'LAMB',
    s: 0.9
  },
  { n: '4 Q Lamb Chops', p: 252500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Crumbed Lamb Cutlets', p: 266500, u: null, c: 'LAMB', s: 0.9 },
  { n: 'Whole Chicken', p: null, u: '1.4', c: 'POULTRY', s: 0.7 },
  { n: 'Breast', p: null, u: '2', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Maryland', p: null, u: '500', c: 'POULTRY', s: 0.7 },
  { n: 'Wings', p: null, u: '1.5', c: 'POULTRY', s: 0.7 },
  { n: 'Legs', p: null, u: '1.5', c: 'POULTRY', s: 0.7 },
  { n: 'Thighs', p: null, u: '1.5', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Cube', p: null, u: '250', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Bone', p: null, u: 'On Request', c: 'POULTRY', s: 0.7 },
  { n: 'Heart & Liver', p: null, u: '500', c: 'POULTRY', s: 0.7 },
  { n: 'Chicken Mince', p: null, u: '500', c: 'POULTRY', s: 0.7 },
  {
    n: 'Chicken Leg Marinated',
    p: 68500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Marocan Chicken Thigh Boneless',
    p: 75500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken / Stuffed Mushroom',
    p: 125500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken Aussie Gordon Blue',
    p: 130000,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Chicken Wing Chinese BBQ',
    p: 65500,
    u: '250gm',
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken Garlic Ginger Soya',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken British Curry',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Half Chicken BBQ', p: 49500, u: null, c: 'POULTRY', s: 0.9 },
  {
    n: 'Half Chicken Piri - Piri',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken Mexican',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Half Chicken Hoisin', p: 49500, u: null, c: 'POULTRY', s: 0.9 },
  {
    n: 'Half Chicken Tandori',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  {
    n: 'Half Chicken Marocan',
    p: 49500,
    u: null,
    c: 'POULTRY',
    s: 0.9
  },
  { n: 'Chicken Cajun', p: 75500, u: null, c: 'POULTRY', s: 0.9 },
  { n: 'Turkey 3kg', p: null, u: 'N/A', c: 'POULTRY', s: 0.7 },
  {
    n: 'Turkey 7 to 8 kg Approx',
    p: null,
    u: 'N/A',
    c: 'POULTRY',
    s: 0.7
  },
  { n: 'Peking Duck', p: 79500, u: '1.7', c: 'POULTRY', s: 0.9 }
]
✅ Extracted 34 products
✅ Image 4: 34 products extracted by Gemini Flash 2.0
🔍 Processing image 5/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for 0z britts 1 04_07.pdf_page_5.png: ```json
[
  {"n": "Red Snapper Fresh Fillet", "p": 376500.00, "u": "K/G", "c": null, "s": 0.9},
  {"n": "Goldband Snapper Fresh Fillet", "p": 305000.00, "u": "K/G", "c": null, "s": 0.9},
  {"n": "Swor...
📊 Parsed data: [
  {
    n: 'Red Snapper Fresh Fillet',
    p: 376500,
    u: 'K/G',
    c: null,
    s: 0.9
  },
  {
    n: 'Goldband Snapper Fresh Fillet',
    p: 305000,
    u: 'K/G',
    c: null,
    s: 0.9
  },
  { n: 'Swordfish (Meka)', p: 201200, u: 'K/G', c: null, s: 0.9 },
  { n: 'YF Tuna Steak', p: 200725, u: 'K/G', c: null, s: 0.9 },
  { n: 'BF Tuna Steak', p: 252000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Salmon Fillet', p: 632000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Coral Grouper (Kerapu)', p: 337000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Jumbo Shrimp (Vename)', p: 282000, u: 'K/G', c: null, s: 0.9 },
  { n: 'King Tiger Prawn (20)', p: 374000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Baramundi', p: 318000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Giant Trevally (Cakol)', p: 255500, u: 'K/G', c: null, s: 0.9 },
  { n: 'Calamari Tube', p: 218500, u: 'K/G', c: null, s: 0.9 },
  { n: 'Mahi Mahi', p: 243000, u: 'K/G', c: null, s: 0.9 },
  { n: 'Sea Bass', p: 307500, u: 'K/G', c: null, s: 0.9 },
  {
    n: 'White Snapper (Kakap Putih)',
    p: 337000,
    u: 'K/G',
    c: null,
    s: 0.9
  }
]
✅ Extracted 15 products
✅ Image 5: 15 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 173 products from 5 images in 50076ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 173 products extracted in 51964ms
 POST /api/upload-unified 200 in 51971ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: AF Seafood 03_07.pdf (application/pdf, 432459 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: AF Seafood 03_07.pdf
🔍 PDF extraction starting: AF Seafood 03_07.pdf
📄 Step 1: Converting PDF to images: AF Seafood 03_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_1.png: ```json
[
  {"n": "PRAWN 10", "p": 250000, "u": "KG", "c": null, "s": 0.9},
  {"n": "PRAWN 15", "p": 210000, "u": "KG", "c": null, "s": 0.9},
  {"n": "PRAWN 20", "p": 185000, "u": "KG", "c": null, "s"...
📊 Parsed data: [
  { n: 'PRAWN 10', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 15', p: 210000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 20', p: 185000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 25', p: 165000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 30', p: 155000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 40', p: 135000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 50', p: 120000, u: 'KG', c: null, s: 0.9 },
  { n: 'PRAWN 60', p: 100000, u: 'KG', c: null, s: 0.9 },
  { n: '20', p: 280000, u: 'KG', c: null, s: 0.7 },
  { n: '30', p: 250000, u: 'KG', c: null, s: 0.7 },
  { n: '40', p: 220000, u: 'KG', c: null, s: 0.7 },
  { n: '50', p: 200000, u: 'KG', c: null, s: 0.7 },
  { n: 'RIVER PRAWN 100-UP', p: 220000, u: 'KG', c: null, s: 0.9 },
  { n: 'LOBSTER 100-200', p: 380000, u: 'KG', c: null, s: 0.9 },
  { n: 'LOBSTER 200-300', p: 420000, u: 'KG', c: null, s: 0.9 },
  { n: 'LOBSTER 300-500', p: 450000, u: 'KG', c: null, s: 0.9 },
  { n: 'LOBSTER 500-UP', p: 470000, u: 'KG', c: null, s: 0.9 },
  { n: 'LOBSTER SLIPER 150-UP', p: 180000, u: 'KG', c: null, s: 0.9 },
  { n: 'LOCAL CLAM', p: 25000, u: 'KG', c: null, s: 0.9 },
  { n: 'GREEN MUSSLE', p: 50000, u: 'KG', c: null, s: 0.9 },
  { n: 'OYSTER', p: 60000, u: 'KG', c: null, s: 0.9 },
  { n: 'OYSTER', p: 50000, u: 'KG', c: null, s: 0.9 },
  { n: 'MANILA', p: 40000, u: 'KG', c: null, s: 0.9 },
  { n: 'BATIK', p: 40000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP', p: 80000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 30/40', p: 170000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 40/50', p: 150000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 20/30', p: 280000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 30/40', p: 270000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 40/60', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 60/80', p: 220000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 100/120', p: 190000, u: 'KG', c: null, s: 0.9 },
  { n: 'SCALLOP 120/140', p: 170000, u: 'KG', c: null, s: 0.9 },
  { n: 'SQUID SOTONG', p: 175000, u: 'KG', c: null, s: 0.9 },
  { n: 'MANIS', p: 165000, u: 'KG', c: null, s: 0.9 },
  { n: 'TUBE', p: 95000, u: 'KG', c: null, s: 0.9 },
  { n: 'RING', p: 100000, u: 'KG', c: null, s: 0.9 },
  { n: 'FLOWER', p: 100000, u: 'KG', c: null, s: 0.9 }
]
✅ Extracted 38 products
✅ Image 1: 38 products extracted by Gemini Flash 2.0
🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_2.png: ```json
[
  {"n": "SQUID SOTONG", "p": 120000, "u": null, "c": "WHOLE", "s": 0.9},
  {"n": "MANIS", "p": 95000, "u": null, "c": "WHOLE", "s": 0.9},
  {"n": "RED SNAPPER", "p": 115000, "u": "SIZE BY RE...
📊 Parsed data: [
  { n: 'SQUID SOTONG', p: 120000, u: null, c: 'WHOLE', s: 0.9 },
  { n: 'MANIS', p: 95000, u: null, c: 'WHOLE', s: 0.9 },
  { n: 'RED SNAPPER', p: 115000, u: 'SIZE BY REQ', c: 'WHOLE', s: 0.9 },
  {
    n: 'WHITE SNAPPER',
    p: 110000,
    u: 'SIZE BY REQ',
    c: 'WHOLE',
    s: 0.9
  },
  { n: 'CRAB', p: 150000, u: '200-300', c: 'LIVE', s: 0.9 },
  { n: 'CRAB', p: 200000, u: '300-400', c: 'LIVE', s: 0.9 },
  { n: 'CRAB', p: 240000, u: '500-700', c: 'LIVE', s: 0.9 },
  { n: 'CRAB', p: 300000, u: '800 Up', c: 'LIVE', s: 0.9 },
  { n: 'CRAB SOFT SHELL', p: 170000, u: '150-UP', c: 'FROZEN', s: 0.9 },
  { n: 'SEA CRAB', p: 150000, u: '150-UP', c: 'LIVE', s: 0.9 },
  { n: 'OCTOPUS', p: 100000, u: '1kg Down', c: 'WHOLE', s: 0.9 },
  { n: 'OCTOPUS', p: 130000, u: '1kg Up', c: 'WHOLE', s: 0.9 },
  { n: 'OCTOPUS', p: 140000, u: '2kg Up', c: 'WHOLE', s: 0.9 },
  {
    n: 'TUNA SUSHI GRADE',
    p: 175000,
    u: null,
    c: 'CENTER CUT',
    s: 0.9
  },
  { n: 'TUNA SAKU', p: 130000, u: null, c: 'PORTION', s: 0.9 },
  { n: 'TUNA FILLET', p: 125000, u: null, c: 'LOIN', s: 0.9 },
  { n: 'TUNA STEAK', p: 125000, u: '100-200', c: 'PORTION', s: 0.9 },
  { n: 'OTORO TUNA', p: 350000, u: null, c: 'FROZEN', s: 0.9 },
  {
    n: 'RED SNAPPER',
    p: 200000,
    u: null,
    c: 'FILLET SKIN ON/OFF',
    s: 0.9
  },
  {
    n: 'WHITE SNAPPER',
    p: 150000,
    u: null,
    c: 'FILLET SKIN ON/OFF',
    s: 0.9
  },
  {
    n: 'SEA BASS',
    p: 140000,
    u: null,
    c: 'FILLET SKIN ON/OFF',
    s: 0.9
  },
  { n: 'PARROT', p: 145000, u: null, c: 'FILLET SKIN ON/OFF', s: 0.9 },
  { n: 'SWORD FISH', p: 115000, u: null, c: 'FILLET SKIN OFF', s: 0.9 },
  {
    n: 'BUTTER FISH',
    p: 140000,
    u: null,
    c: 'FILLET SKIN OFF',
    s: 0.9
  },
  { n: 'MAHI-MAHI', p: 120000, u: null, c: 'FILLET SKIN OFF', s: 0.9 },
  { n: 'COBIA/DELEG', p: 65000, u: null, c: 'WHOLE', s: 0.9 },
  {
    n: 'COBIA/DELEG',
    p: 100000,
    u: null,
    c: 'FILLET SKIN OFF',
    s: 0.9
  },
  { n: 'BARRAMUNDI', p: 160000, u: null, c: 'FILLET SKIN ON', s: 0.9 },
  { n: 'KERAPU/GROUPER', p: 80000, u: null, c: 'WHOLE', s: 0.9 },
  {
    n: 'KERAPU/GROUPER',
    p: 165000,
    u: null,
    c: 'FILLET SKIN ON',
    s: 0.9
  }
]
✅ Extracted 30 products
✅ Image 2: 30 products extracted by Gemini Flash 2.0
🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_3.png: ```json
[
  {"n": "MARLIN", "p": 85000, "u": null, "c": null, "s": 0.9},
  {"n": "MARLIN STEAK", "p": 100000, "u": "PORTION", "c": null, "s": 0.9},
  {"n": "MACKAREL / TENGIRI", "p": 160000, "u": null...
📊 Parsed data: [
  { n: 'MARLIN', p: 85000, u: null, c: null, s: 0.9 },
  { n: 'MARLIN STEAK', p: 100000, u: 'PORTION', c: null, s: 0.9 },
  { n: 'MACKAREL / TENGIRI', p: 160000, u: null, c: null, s: 0.9 },
  { n: 'DORY', p: 70000, u: 'FILLET', c: null, s: 0.9 },
  { n: 'WAHOO', p: 150000, u: null, c: null, s: 0.9 },
  { n: 'WAHOO', p: 80000, u: 'WHOLE', c: null, s: 0.9 },
  { n: 'SALMON TROUT', p: 270000, u: null, c: null, s: 0.9 },
  { n: 'SALMON TAZMAN', p: 290000, u: null, c: null, s: 0.9 },
  { n: 'SALMON', p: 350000, u: null, c: null, s: 0.9 },
  { n: 'SALMON', p: 300000, u: null, c: null, s: 0.9 },
  { n: 'SALMON', p: 320000, u: null, c: null, s: 0.9 },
  { n: 'SALMON SMOKED', p: 390000, u: '900GR Pax', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 3: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for AF Seafood 03_07.pdf_page_4.png: I am unable to process this image. Can you provide a clearer image?...
❌ No JSON found in response
✅ Image 4: 0 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 80 products from 4 images in 23958ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 80 products extracted in 25068ms
 POST /api/upload-unified 200 in 25077ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Bali diary 05_07 .pdf (application/pdf, 7688127 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Bali diary 05_07 .pdf
🔍 PDF extraction starting: Bali diary 05_07 .pdf
📄 Step 1: Converting PDF to images: Bali diary 05_07 .pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Bali diary 05_07 .pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Bali diary 05_07 .pdf_page_1.png: ```json
[
  {"n": "Camembert 55% f.d.m, 10 days aging", "p": 355000, "u": "150-200gr/pcs", "c": "COWMILK - SOFT CHEESE", "s": 0.9},
  {"n": "Brie 55% f.d.m, 14 days aging", "p": 389000, "u": "2,5-3kg/...
📊 Parsed data: [
  {
    n: 'Camembert 55% f.d.m, 10 days aging',
    p: 355000,
    u: '150-200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Brie 55% f.d.m, 14 days aging',
    p: 389000,
    u: '2,5-3kg/wheel',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Bali-Blue (Cambozola-style blue cheese), 55% f.d.m.',
    p: 400000,
    u: '150-200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Balzola (Gorgonzola-style blue cheese) 65% f.d.m.,',
    p: 500000,
    u: '5-8kg/wheel',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Labnah (Strained Yoghurt- cheese) 68% f.d.m.,',
    p: 222000,
    u: '1 kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Panneer Cheese',
    p: 322000,
    u: '1kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'German Cream Cheese (Fresh cheese)0.1%f.d.m',
    p: 100000,
    u: '500gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Quark (German-stye curd-cheese)',
    p: 100000,
    u: '500gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Syrki Small (chocolate cheese bar) 30g',
    p: 9000,
    u: '30g/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Syrki Small (chocolate cheese bar) 60g',
    p: 17000,
    u: '60gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Mozzarella',
    p: 56000,
    u: '200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Romadur (Munsterstyle) 200 gr, 55%f.d.m',
    p: 322000,
    u: '200gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Shankleesh (Dreamcheese Herbs in oil)',
    p: 33000,
    u: '100gr/1kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Feta Cheese',
    p: 278000,
    u: '1kg-1,3kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Smoked Feta cheese',
    p: 29000,
    u: '1kg-1,3kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Feta in oil glass jar with olive/sunflower oil',
    p: 50000,
    u: '200gr/glass',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Hallumi Cheese',
    p: 278000,
    u: '1kg-1,3kg',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Schlosskaese 55% f.d.m 150 gr pcs,',
    p: 355000,
    u: '100gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Oscypek (Pasta Filata)',
    p: 333000,
    u: '800gr/pcs',
    c: 'COWMILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Cheddar white, 4 weeks aged in vacuumfoil, no rind, 45% f.d.m',
    p: 278000,
    u: '2,5-3kg/pack',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Cheddar Red, 4 weeks aged in vacuumfoil, no rind, 45% f.d.m',
    p: 278000,
    u: '2,5-3kg/pack',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Butter Cheese',
    p: 278000,
    u: '2,5-3kg/pack',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Tilister, 4 weeks aging in vakuumfoil',
    p: 433000,
    u: '6-7kg/wheel',
    c: 'COWMILK - SEMI SOFT CHEESE',
    s: 0.9
  },
  {
    n: 'Mountain Cheese/ Gruyere style cheese',
    p: 433000,
    u: '15kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Manchego (Rosemary)',
    p: 389000,
    u: '4-6kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Balitaler (emmental without big holes, same taste) -',
    p: 389000,
    u: '15kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'reserve 6 to 12 moths. 45% f.d.m.',
    p: null,
    u: null,
    c: 'COWMILK - HARD CHEESE',
    s: 0.7
  },
  {
    n: 'Raclette Cheese',
    p: 389000,
    u: '5-7kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Smoked Raclette',
    p: 389000,
    u: '5kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Bali spicy/Chilli cheese',
    p: 389000,
    u: '5kg/wheel',
    c: 'COWMILK - HARD CHEESE',
    s: 0.9
  },
  {
    n: 'Goat Cheese',
    p: 500000,
    u: '150-200gr/pcs',
    c: 'GOAT MILK - SOFT CHEESE',
    s: 0.9
  },
  {
    n: '"Crottin de Chavignol"',
    p: null,
    u: null,
    c: 'GOAT MILK - SOFT CHEESE',
    s: 0.7
  },
  {
    n: 'Cheese Platter',
    p: 441000,
    u: '1,3 kg/pack',
    c: 'OTHER PRODUCTS',
    s: 0.9
  },
  {
    n: 'Mettenden Roh Polnish (pork saussage)',
    p: 250000,
    u: '1kg',
    c: 'OTHER PRODUCTS',
    s: 0.9
  },
  {
    n: 'Pfefferbeisser (mix pork beef saussage)',
    p: 299000,
    u: '1kg',
    c: 'OTHER PRODUCTS',
    s: 0.9
  }
]
✅ Extracted 35 products
✅ Image 1: 35 products extracted by Gemini Flash 2.0
🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Bali diary 05_07 .pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Bali diary 05_07 .pdf_page_2.png: ```json
[
  {"n": "Natur Yoghurt Premium PLAIN -", "p": 61000, "u": "1L", "c": "YOGURT & KEFIR", "s": 0.9},
  {"n": "Fruit yoghurt Premium", "p": 61000, "u": "IL", "c": "YOGURT & KEFIR", "s": 0.9},
  ...
📊 Parsed data: [
  {
    n: 'Natur Yoghurt Premium PLAIN -',
    p: 61000,
    u: '1L',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Fruit yoghurt Premium',
    p: 61000,
    u: 'IL',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Yogurt in short glass pudding 90ml -',
    p: 11000,
    u: '90 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Cup yogurt 80 ml -',
    p: 6000,
    u: '80 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Skyr (low fat yogurt)',
    p: 100000,
    u: '1L',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Skyr cup 150ml (plain, strawberry, blackberry, mango)',
    p: 17000,
    u: '150ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Vegan Coconut Yoghurt',
    p: 80000,
    u: 'IL',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Greek Style yogurt',
    p: 85000,
    u: 'IL',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Drink Kefir 6% f.d.m.',
    p: 28000,
    u: '500 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Drink yogurt (Apple, Vanilla, Bluberry, Peach)',
    p: 33000,
    u: '500 ml',
    c: 'YOGURT & KEFIR',
    s: 0.9
  },
  {
    n: 'Saurerrahm (Sour cream 32% fat)',
    p: 44000,
    u: '200gr',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Saurerrahm (Sour cream 32% fat)',
    p: 100000,
    u: 'IL',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Full-Fat fresh milk (3,9% fat) 1L',
    p: 23000,
    u: '11',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Full-Fat fresh milk (3,9% fat) 5L',
    p: 90000,
    u: 'SL',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Probiotic Whey Drink fat free (Guava and Mango)',
    p: 22000,
    u: '500ml',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Probiotic Whey Drink fat free (Guava and Mango)',
    p: 100000,
    u: 'SL',
    c: 'OTHER MILK PRODUK',
    s: 0.9
  },
  {
    n: 'Pickles Gerkins Plain',
    p: 56000,
    u: '500gr/Jar',
    c: 'NON DAIRY PRODUCT',
    s: 0.9
  },
  {
    n: 'Pickles Spicy Gerkins',
    p: 56000,
    u: '500gr/Jar',
    c: 'NON DAIRY PRODUCT',
    s: 0.9
  },
  {
    n: 'Mixed Pickles',
    p: 67000,
    u: '500gr/Jar',
    c: 'NON DAIRY PRODUCT',
    s: 0.9
  }
]
✅ Extracted 19 products
✅ Image 2: 19 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 54 products from 2 images in 21868ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 54 products extracted in 28036ms
 POST /api/upload-unified 200 in 28056ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Benoa fish market 03_07.pdf (application/pdf, 2137859 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Benoa fish market 03_07.pdf
🔍 PDF extraction starting: Benoa fish market 03_07.pdf
📄 Step 1: Converting PDF to images: Benoa fish market 03_07.pdf
✅ Converted to 5 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_1.png: ```json
[
  {"n": "Striploin MBS 4/5", "p": 175000, "u": "100G", "c": null, "s": 0.9},
  {"n": "Striploin MBS 6/7", "p": 205000, "u": "100G", "c": null, "s": 0.9},
  {"n": "Striploin MBS 8/9", "p": 24...
📊 Parsed data: [
  { n: 'Striploin MBS 4/5', p: 175000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin MBS 6/7', p: 205000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin MBS 8/9', p: 245000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye MBS 4/5', p: 185000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye MBS 6/7', p: 215000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye MBS 8/9', p: 250000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin MBS 4/5', p: 205000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin MBS 6/7', p: 235000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin MBS 8/9', p: 270000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin A4', p: 450000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin A5', p: 465000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye A4', p: 460000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye A5', p: 475000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin A5', p: 485000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin', p: 30000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye', p: 40000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin', p: 55000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin No Roll', p: 50000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin Choice', p: 65000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin Prime', p: 95000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye No Roll', p: 70000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye Choice', p: 90000, u: '100G', c: null, s: 0.9 },
  { n: 'Ribeye Prime', p: 105000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin No Roll', p: 85000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin Choice', p: 100000, u: '100G', c: null, s: 0.9 },
  { n: 'Tenderloin Prime', p: 125000, u: '100G', c: null, s: 0.9 },
  { n: 'Striploin', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'Ribeye', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'Tenderloin', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'Saikoro Cubes', p: 250000, u: 'KG', c: null, s: 0.9 },
  { n: 'AU. Striploin', p: 240000, u: '100G', c: null, s: 0.9 },
  { n: 'AU. Ribeye', p: 260000, u: '100G', c: null, s: 0.9 }
]
✅ Extracted 32 products
✅ Image 1: 32 products extracted by Gemini Flash 2.0
🔍 Processing image 2/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_2.png: ```json
[
  {"n": "Smoked Beef Bacon", "p": 75000, "u": null, "c": null, "s": 0.9},
  {"n": "Smoked Pork Bacon", "p": 70000, "u": null, "c": null, "s": 0.9},
  {"n": "Dry Cured Black Angus Beef", "p":...
📊 Parsed data: [
  { n: 'Smoked Beef Bacon', p: 75000, u: null, c: null, s: 0.9 },
  { n: 'Smoked Pork Bacon', p: 70000, u: null, c: null, s: 0.9 },
  {
    n: 'Dry Cured Black Angus Beef',
    p: 105000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Dry Cured Pork Streaky', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'US. Kalbi Choice', p: 290000, u: null, c: null, s: 0.9 },
  { n: 'US. Kalbi Prime', p: 330000, u: null, c: null, s: 0.9 },
  { n: 'US. Karubi Choice', p: 400000, u: null, c: null, s: 0.9 },
  { n: 'US. Karubi Prime', p: 500000, u: null, c: null, s: 0.9 },
  { n: 'JP. Karubi Wagyu A5', p: 1100000, u: null, c: null, s: 0.9 },
  { n: 'AU. Ox Tongue', p: 130000, u: null, c: null, s: 0.9 },
  { n: 'AU. Rump', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'AU. Ribeye', p: 180000, u: null, c: null, s: 0.9 },
  { n: 'AU. Sirloin', p: 125000, u: null, c: null, s: 0.9 },
  { n: 'US. Shortplate', p: 115000, u: null, c: null, s: 0.9 },
  { n: 'NZ. Topside', p: 110000, u: null, c: null, s: 0.9 },
  { n: 'AU Oxtail', p: 450000, u: 'KG', c: null, s: 0.9 },
  { n: 'AU Marrow Split', p: 110000, u: 'KG', c: null, s: 0.9 },
  { n: 'AU Marrow Center', p: 110000, u: 'KG', c: null, s: 0.9 },
  { n: 'Salmon 100 GR', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'Duck Breast 225 GR', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Loin', p: 95000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Collar', p: 90000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Tenderloin', p: 110000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Belly Skin On', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'US. Pork Belly Skin Off', p: 105000, u: null, c: null, s: 0.9 }
]
✅ Extracted 25 products
✅ Image 2: 25 products extracted by Gemini Flash 2.0
🔍 Processing image 3/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_3.png: ```json
[
  {"n": "AU. Beef", "p": 100000, "u": "500 GRAMS / PACK", "c": null, "s": 0.9},
  {"n": "US. Pork", "p": 105000, "u": "500 GRAMS / PACK", "c": null, "s": 0.9},
  {"n": "OR. Chicken", "p": 10...
📊 Parsed data: [
  { n: 'AU. Beef', p: 100000, u: '500 GRAMS / PACK', c: null, s: 0.9 },
  { n: 'US. Pork', p: 105000, u: '500 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'OR. Chicken',
    p: 105000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Beef Balls', p: 25000, u: '250 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'Cheese Fish Balls',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Crab Balls', p: 20000, u: '250 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'Lobster Balls',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Original Fish Balls',
    p: 15000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Salmon Balls',
    p: 20000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Shrimp Balls',
    p: 20000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Squid Balls',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Seafood Mixball IKG',
    p: 85000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'China Broccoli',
    p: 20000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Mix Vegetables',
    p: 20000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Chikuwa / Crab Stick',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Fish Cheese Dumpling',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'French Fries Shoestring',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Korean Fish Odeng',
    p: 20000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Fried Fish Cake / Roll',
    p: 25000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Superside Steamboat IKG',
    p: 85000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Korean Cabbage Kimchi',
    p: 40000,
    u: '250 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  { n: 'Beef Prime', p: 85000, u: '320 GRAMS / PACK', c: null, s: 0.9 },
  {
    n: 'Beef Black Angus',
    p: 95000,
    u: '320 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Beef Breakfast',
    p: 160000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Breakfast',
    p: 140000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Precooked',
    p: 95000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Merguez',
    p: 160000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Bratwurst',
    p: 130000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Breakfast',
    p: 140000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Chorizo',
    p: 135000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Italian',
    p: 135000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  },
  {
    n: 'Pork Toulouse',
    p: 135000,
    u: '500 GRAMS / PACK',
    c: null,
    s: 0.9
  }
]
✅ Extracted 32 products
✅ Image 3: 32 products extracted by Gemini Flash 2.0
🔍 Processing image 4/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_4.png: ```json
[
  {"n": "Lamb Chop", "p": 435000, "u": null, "c": null, "s": 0.9},
  {"n": "Lamb Rack", "p": 425000, "u": null, "c": null, "s": 0.9},
  {"n": "Lamb Leg Bone In", "p": 325000, "u": null, "c":...
📊 Parsed data: [
  { n: 'Lamb Chop', p: 435000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Rack', p: 425000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Leg Bone In', p: 325000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Leg Boneless', p: 375000, u: null, c: null, s: 0.9 },
  { n: 'Lamb Shank', p: 300000, u: null, c: null, s: 0.9 },
  { n: 'Breast Fillet', p: 130000, u: null, c: null, s: 0.9 },
  { n: 'Feet with Bone', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Thigh Fillet', p: 140000, u: null, c: null, s: 0.9 },
  { n: 'Whole Free Range', p: 105000, u: null, c: null, s: 0.9 },
  { n: 'Whole Probiotic', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'Wings with Bone', p: 40000, u: null, c: null, s: 0.9 },
  { n: 'Duck Leg Confit (4)', p: 400000, u: null, c: null, s: 0.9 },
  {
    n: 'Tiger Head Skin On Size 20',
    p: 240000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Tiger Head Skin On Size 30',
    p: 200000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Vaname Peeled Size 30', p: 190000, u: null, c: null, s: 0.9 },
  {
    n: 'Vaname Peeled Size 40/60',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Squid Tube', p: 100000, u: null, c: null, s: 0.9 },
  { n: 'Squid Ring', p: 120000, u: null, c: null, s: 0.9 },
  { n: 'FR Pork Chop', p: 270000, u: null, c: null, s: 0.9 },
  { n: 'US Baby Back Ribs', p: 225000, u: null, c: null, s: 0.9 },
  { n: 'US Belly Skin On', p: 185000, u: null, c: null, s: 0.9 },
  { n: 'US Cutlet Brined', p: 250000, u: null, c: null, s: 0.9 },
  { n: 'US Spare Ribs', p: 175000, u: null, c: null, s: 0.9 },
  { n: 'Dory Fillet', p: 90000, u: null, c: null, s: 0.9 },
  { n: 'Norway Salmon Fillet', p: 400000, u: null, c: null, s: 0.9 },
  { n: 'Tuna Saku A (Sashimi)', p: 200000, u: null, c: null, s: 0.9 },
  { n: 'Australian', p: 750000, u: null, c: null, s: 0.9 },
  { n: 'US Angus Choice', p: 900000, u: null, c: null, s: 0.9 }
]
✅ Extracted 28 products
✅ Image 4: 28 products extracted by Gemini Flash 2.0
🔍 Processing image 5/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Benoa fish market 03_07.pdf_page_5.png: ```json
[
  {"n": "Bulgogi", "p": 35000, "u": null, "c": null, "s": 0.9},
  {"n": "Galbi", "p": 35000, "u": null, "c": null, "s": 0.9},
  {"n": "Gochujang", "p": 50000, "u": null, "c": null, "s": 0.9}...
📊 Parsed data: [
  { n: 'Bulgogi', p: 35000, u: null, c: null, s: 0.9 },
  { n: 'Galbi', p: 35000, u: null, c: null, s: 0.9 },
  { n: 'Gochujang', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Beef Mutton Clear', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Beef Mutton Spices', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mala Beef Tallow', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Mala Clear Oil', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mala Tang Beef Sesame', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mala Tang Spicy Red Oil', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Mushroom', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Pork Bone & Chicken', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Pork Belly & Chicken', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Seafood', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Tomato', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Tom Yum Goong', p: 60000, u: null, c: null, s: 0.9 },
  { n: 'Barbeque', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Bulgogi', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Gochujang', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Teriyaki Blackpepper', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Teriyaki Garlic', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Yakiniku', p: 30000, u: null, c: null, s: 0.9 },
  { n: 'Mala Spicy', p: 20000, u: null, c: null, s: 0.9 },
  { n: 'Sesame Original', p: 20000, u: null, c: null, s: 0.9 },
  { n: 'Sesame Spicy', p: 20000, u: null, c: null, s: 0.9 },
  { n: 'Garlic Herbs', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Japanese Garlic', p: 85000, u: null, c: null, s: 0.9 },
  { n: 'Parmesan Garlic', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Truffle Garlic', p: 50000, u: null, c: null, s: 0.9 },
  { n: 'Vegan Organic', p: 70000, u: null, c: null, s: 0.9 },
  { n: 'Blackpepper', p: 25000, u: null, c: null, s: 0.9 },
  { n: 'New Orleans Tomato', p: 25000, u: null, c: null, s: 0.9 },
  { n: 'Sweet & Spicy', p: 25000, u: null, c: null, s: 0.9 }
]
✅ Extracted 32 products
✅ Image 5: 32 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 149 products from 5 images in 43111ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 149 products extracted in 46061ms
 POST /api/upload-unified 200 in 46074ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: CV alam Sari 05_07 .pdf (application/pdf, 6449819 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: CV alam Sari 05_07 .pdf
🔍 PDF extraction starting: CV alam Sari 05_07 .pdf
📄 Step 1: Converting PDF to images: CV alam Sari 05_07 .pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_1.png: ```json
[]
```...
📊 Parsed data: []
✅ Extracted 0 products
✅ Image 1: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_2.png: ```json
[{"n":"Honey Blossom Cotton","p":170000,"u":"ltr","c":null,"s":0.9},{"n":"Honey Blossom Cotton","p":650000,"u":"5 ltr","c":null,"s":0.9},{"n":"Honey Longane","p":250000,"u":"ltr","c":null,"s":...
📊 Parsed data: [
  { n: 'Honey Blossom Cotton', p: 170000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Blossom Cotton', p: 650000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Longane', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Longane', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Mango', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Mango', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Hevea', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Hevea', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Acacia Sumatra', p: 250000, u: 'ltr', c: null, s: 0.9 },
  {
    n: 'Honey Acacia Sumatra',
    p: 1100000,
    u: '5 ltr',
    c: null,
    s: 0.9
  },
  { n: 'Honey Wild Acacia', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Wild Acacia', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Flower Of Java', p: 250000, u: 'ltr', c: null, s: 0.9 },
  {
    n: 'Honey Flower Of Java',
    p: 1100000,
    u: '5 ltr',
    c: null,
    s: 0.9
  },
  { n: 'Honey Cloves', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Cloves', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Rainforest Garut', p: 250000, u: 'ltr', c: null, s: 0.9 },
  {
    n: 'Honey Rainforest Garut',
    p: 1100000,
    u: '5 ltr',
    c: null,
    s: 0.9
  },
  { n: 'Honey Kaliandra', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Kaliandra', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Rambutan', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Rambutan', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  { n: 'Honey Eucalyptus', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Eucalyptus', p: 1100000, u: '5 ltr', c: null, s: 0.9 },
  {
    n: 'Whole Honeycomb with wood frame (23x48cm)',
    p: 280000,
    u: null,
    c: 'Multifloral',
    s: 0.9
  },
  {
    n: 'Honey Propolis Vinegar',
    p: 45000,
    u: '350 mlt',
    c: null,
    s: 0.9
  },
  { n: 'Honey Wax', p: 400000, u: 'KG', c: null, s: 0.9 },
  {
    n: 'Vanilla Planifolia',
    p: 2000000,
    u: '500gr',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'Vanilla Planifolia',
    p: 3600000,
    u: 'per kg',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti',
    p: 1800000,
    u: '500gr',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti',
    p: 3300000,
    u: 'per kg',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti',
    p: 1700000,
    u: '500gr',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti',
    p: 3200000,
    u: 'per kg',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Extract',
    p: 450000,
    u: '550 ml',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla - Vanilla Extract',
    p: 92000,
    u: '100 ml',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Extract',
    p: 59000,
    u: '50 ml',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Paste',
    p: 770000,
    u: '550 ml',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Paste',
    p: 149000,
    u: '100 ml',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Paste',
    p: 82000,
    u: '50 ml',
    c: 'Vanilla Organic Papua',
    s: 0.9
  },
  { n: 'MILK CHOCOLATE ALMOND', p: 310000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'MILK CHOCOLATE CASHEW', p: 310000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'MILK 45%', p: 310000, u: 'kg', c: 'MYNA', s: 0.9 },
  {
    n: 'DARK SALTED BRITTLE CARAMEL',
    p: 315000,
    u: 'kg',
    c: 'MYNA',
    s: 0.9
  },
  { n: 'DARK COFFEE', p: 315000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'DARK COCONUT', p: 315000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'DARK MINT', p: 315000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'DARK ORANGE', p: 315000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'DARK 60%', p: 370000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'DARK 70%', p: 370000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'DARK 85%', p: 380000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'WHITE CHOCOLATE', p: 370000, u: 'kg', c: 'MYNA', s: 0.9 },
  {
    n: 'COCOA LIQUOR/MASS 100%',
    p: 420000,
    u: 'kg',
    c: 'MYNA',
    s: 0.9
  },
  { n: 'COCOA BUTTER', p: 580000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'COCO POWDER', p: 335000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'COCOA NIBS', p: 400000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'COCONUT BROWN SUGAR', p: 90000, u: 'kg', c: 'MYNA', s: 0.9 },
  { n: 'CHOCOLATE SPHERES', p: 34000, u: 'pcs', c: 'MYNA', s: 0.9 },
  { n: 'CHOCOLATE SPHERES', p: 40000, u: 'pcs', c: 'MYNA', s: 0.9 },
  { n: 'COCOA HUSK ROASTED', p: 200000, u: 'kg', c: 'MYNA', s: 0.9 }
]
✅ Extracted 59 products
✅ Image 2: 59 products extracted by Gemini Flash 2.0
🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_3.png: ```json
[
  {"n": "Pasteurized Cow Milk Plain (4.5% Fat) JABMILK kooperativ farmer on order min 2 Itr", "p": 35000, "u": "per liter", "c": "DAIRY MILK & BUTTER", "s": 0.9},
  {"n": "Natural Yoghurt Pl...
📊 Parsed data: [
  {
    n: 'Pasteurized Cow Milk Plain (4.5% Fat) JABMILK kooperativ farmer on order min 2 Itr',
    p: 35000,
    u: 'per liter',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Natural Yoghurt Plain organic grassfed cow s milk 1 Liter',
    p: 68000,
    u: 'per liter',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Raw Cow Milk Java',
    p: 25000,
    u: 'per liter',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Frozen Goat Milk min order 6 btl lead time 2-3 days',
    p: 45000,
    u: '500 ml',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Frozen Goat Milk min order 4 liter lead time 2-3 days',
    p: 72000,
    u: '1 t',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Buttersheet Kahf for croissant and viennoiserie fat 83% up',
    p: 240000,
    u: 'block 2 kg',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Cultured Butter Kahf Farmer style 79% health and taste',
    p: 190000,
    u: '1 kg',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Organic Unsalted Butter Ganesha',
    p: 190000,
    u: '1 kg',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Non Gmo Soy Milk traditional soya plantation flores min order 1 Itr',
    p: 25000,
    u: 'glass bottle 500 ml',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Mozzarella Organic Kareem, soft, threads, smoking point >350 °C',
    p: 125000,
    u: 'block 1 kg',
    c: 'MOZZARELLA PIZZA & HALLOUMI',
    s: 0.9
  },
  {
    n: 'Mozzarella Organic Kahf ferm texture',
    p: 150000,
    u: 'block 1 kg',
    c: 'MOZZARELLA PIZZA & HALLOUMI',
    s: 0.9
  },
  {
    n: 'Halloumi Cheezzery grilled, veg burger, sandwich, salad',
    p: 230000,
    u: 'block 1 kg',
    c: 'MOZZARELLA PIZZA & HALLOUMI',
    s: 0.9
  },
  {
    n: 'Coeur De Brie',
    p: 130000,
    u: 'pack 200 gr up',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Janur mont d or style Brie',
    p: 100000,
    u: 'pack around 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Chaource, Britanny style Brie',
    p: 130000,
    u: 'pack around 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Truffle Oil Persian',
    p: 75000,
    u: 'pack 140 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Ashed Chevre',
    p: 65000,
    u: 'pack 140 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Dill & Garlic Persian',
    p: 65000,
    u: 'pack 140 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Greek Feta Traditional',
    p: 100000,
    u: 'pack 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Glenmore welsh cheddar',
    p: 100000,
    u: 'pack 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Maluku Jinten cumin gouda',
    p: 100000,
    u: 'pack 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Premium Greek Yoghurt',
    p: 89000,
    u: 'jar 500 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Soft Cow Cheese',
    p: 360000,
    u: 'pack 1 kg',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Buratta fresh filled w strataciela and cream',
    p: 350000,
    u: '@150 gr/ pc seal glass',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Buratta fresh filled w strataciela and cream',
    p: 380000,
    u: '@70 gr/ pc seal glass',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Ciliegieni fresh mozza small boconcini (33gr)',
    p: 230000,
    u: 'per pack 6 balls 200gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Boconcini fresh mozzarella organic',
    p: 230000,
    u: '10 x ball 100gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Nodino fresh mozzarella organic',
    p: 250000,
    u: '@50/100 gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Treccia fresh mozzarella organic',
    p: 250000,
    u: '@100/15',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Dolce Mt Batu Taste like St Nectaire snacks, salads',
    p: 420000,
    u: '1/2 block 500gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Kebima Blue Cheese strong taste, ,sauces, salad',
    p: 420000,
    u: '1/2 block 500gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Brie Mount Kawi Soft and tasty Brie style cheese',
    p: 420000,
    u: null,
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Ricotta fresh made',
    p: 120000,
    u: 'Pack 500gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Bintang Bromo a flavorful Tomme from Mt Bromo area',
    p: 290000,
    u: 'Block 4,5 kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Mba Kaciota hard cheese like Caciotta',
    p: 290000,
    u: 'Block 700 gr up',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Provola',
    p: 260000,
    u: 'Ball 500gr or Half ball',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Smoked Scarmoza',
    p: 275000,
    u: 'Ball 500gr or Half ball',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Provolone diam 90 mm',
    p: 260000,
    u: 'Loaf 2 kg or Half Loaf 1kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Provolone Sliced diameter 9 cm min order 500gr',
    p: 275000,
    u: 'Loaf 2 kg or Half Loaf 1kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Smoked Provolone',
    p: 265000,
    u: 'Loaf 2 kg or Half Loaf 1kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  }
]
✅ Extracted 40 products
✅ Image 3: 40 products extracted by Gemini Flash 2.0
🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_4.png: ```json
[
  {"n": "Jahru", "p": 480000, "u": "wheel 2,5 kg", "c": "KAHF CHEESE", "s": 0.9},
  {"n": "Hamet", "p": 330000, "u": "wheel 2,5 kg", "c": "KAHF CHEESE", "s": 0.9},
  {"n": "Chelang", "p": 33...
📊 Parsed data: [
  {
    n: 'Jahru',
    p: 480000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Hamet',
    p: 330000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Chelang',
    p: 330000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Cherah',
    p: 360000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Feta Artisan Kahf',
    p: 245000,
    u: 'pack 1 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Tomme De Andaliman',
    p: 420000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Kotikoti',
    p: 330000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Malangcego',
    p: 620000,
    u: 'Wheel 800 gr up',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Chebing',
    p: 620000,
    u: 'Block 1,4 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Goat Feta',
    p: 450000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Fresh Cream',
    p: 105000,
    u: '1 liter',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Double Cream',
    p: 135000,
    u: '1 liter',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Salju Orion',
    p: 245000,
    u: '> Block 400 gr',
    c: 'CHEEZZERY',
    s: 0.9
  },
  {
    n: 'Salju Orion Blackpepper',
    p: 255000,
    u: '> Block 400 gr',
    c: 'CHEEZZERY',
    s: 0.9
  },
  {
    n: 'Halloumi cheezzery',
    p: 230000,
    u: 'block 1 kg',
    c: 'CHEEZZERY',
    s: 0.9
  },
  {
    n: 'Burrata',
    p: 420000,
    u: '80 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Fior De Latte',
    p: 310000,
    u: '100 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Small Bocconcini',
    p: 310000,
    u: '50 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Kemala Breakfast',
    p: 310000,
    u: 'block 900 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Aged Kemala.',
    p: 310000,
    u: 'block 900 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Goat Crottin Tradition',
    p: 540000,
    u: '200 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Fresh Goat Cheese',
    p: 420000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Fresh Goat Cheese Blackpepper',
    p: 425000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Brie Artisan Bali',
    p: 520000,
    u: '200 gr up',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Ricotta Artisan Bali',
    p: 150000,
    u: '500 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Classical white Cheddar cheese',
    p: 135000,
    u: 'block 2 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Mountain Cheese',
    p: 340000,
    u: 'block 1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Ghee',
    p: 75000,
    u: 'jar 200gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Feta Artisan Kahf',
    p: 245000,
    u: 'pack 1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Paneer Turki Cheese origin Bali',
    p: 175000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Cheese Curd',
    p: 250000,
    u: 'pack 1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Sulugini',
    p: 170000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Gorgonzola Piccante',
    p: 520000,
    u: 'min order 500gr 2,5 kg',
    c: 'ITALIAN Import CHEESE',
    s: 0.9
  },
  {
    n: 'Cheese Tester 1',
    p: 62000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester 2',
    p: 62000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester mix',
    p: 75000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester Pro',
    p: 130000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester Vegan Cheese',
    p: 95000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Set tools for Cheese Fondue complete',
    p: 225000,
    u: 'Per pc',
    c: 'SET TOOLS FOR CHEESE FONDUE',
    s: 0.9
  }
]
✅ Extracted 39 products
✅ Image 4: 39 products extracted by Gemini Flash 2.0
🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
 POST /api/upload-unified 200 in 60002ms
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_5.png: ```json
[
  {"n": "Pastured Fat Chicken breed New Zealand. frozen sold whole 1,5 kg", "p": 105000, "u": null, "c": null, "s": 0.9},
  {"n": "Chef s Creation Organic Chicken Liver Pate", "p": 80000, "u...
📊 Parsed data: [
  {
    n: 'Pastured Fat Chicken breed New Zealand. frozen sold whole 1,5 kg',
    p: 105000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chef s Creation Organic Chicken Liver Pate',
    p: 80000,
    u: 'Glass jar 200 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Red Egg probiotic egg',
    p: 44000,
    u: 'per pack',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Broiler Whole probiotic',
    p: 70000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Breast Boneless & Skinless',
    p: 100000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Breast Boneless with Skin',
    p: 99000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Leg Boneless skinless',
    p: 99000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Leg Boneless with Skin',
    p: 91000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Chicken Leg Bone in', p: 91000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Thight', p: 91000, u: null, c: null, s: 0.9 },
  {
    n: 'Chicken Thight boneless skinless',
    p: 96000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Chicken Drumstick', p: 91000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Wings', p: 55000, u: null, c: null, s: 0.9 },
  { n: 'Wings Drumstick', p: 75000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Ampela', p: 42000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Liver', p: 42000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Skin', p: 68000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Feet', p: 36000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Bone', p: 27000, u: null, c: null, s: 0.9 },
  { n: 'Mince Chicken', p: 97000, u: null, c: null, s: 0.9 },
  {
    n: 'Chicken Baby Boneless',
    p: 54000,
    u: 'per pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Quails free range Organic origin farm Java',
    p: 60000,
    u: 'per pc',
    c: null,
    s: 0.9
  },
  {
    n: 'Frog Leg frozen min order 2 kg lead time 3 day origin Java',
    p: 30000,
    u: 'per pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Large organic Snail in can 80/90 pces',
    p: 1440000,
    u: '12 can in box per box',
    c: null,
    s: 0.9
  },
  {
    n: 'Peking Duck Whole probiotic feeding, Whole 2.5 kg up',
    p: 70000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Peking Duck Breast Boneless Frozen',
    p: 410000,
    u: 'Pack 250gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Peking Duck Leg Frozen weight approx 1 pces 250gr',
    p: 350000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Turkey Natural feeding 4/5 kg whole',
    p: 160000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Turkey Natural feeding 4/5 kg without head & feet',
    p: 185000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat Whole Free range bone in frzn (7 to 15 kg) (18 to 25 kg) East and central Java',
    p: null,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat Leg bone in frzn Java, fresh meat by request (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat Shoulder bone in frzn Java, fresh meat by request (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat loin from java (east and central) 500 gr approx depending availibility on site',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Goat chops rack', p: 220000, u: null, c: null, s: 0.9 },
  {
    n: 'Whole Lamb. Free range bone in. frzn (7 to 15 kg) (18 to 25 kg) East and Central Java',
    p: null,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Leg bone in frzn Java (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Shoulder bone in frzn Java (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Pabbit free range 1kg to 2,5 kg fresh or frzn Java',
    p: 135000,
    u: null,
    c: null,
    s: 0.9
  }
]
✅ Extracted 38 products
✅ Image 5: 38 products extracted by Gemini Flash 2.0
🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_6.png: ```json
[
  {"n": "Mince Beef trims with 10% fat", "p": 140000, "u": "kg", "c": null, "s": 0.9},
  {"n": "Short Rib", "p": 146000, "u": "kg", "c": null, "s": 0.9},
  {"n": "Oxtail", "p": 150000, "u": ...
📊 Parsed data: [
  {
    n: 'Mince Beef trims with 10% fat',
    p: 140000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Short Rib', p: 146000, u: 'kg', c: null, s: 0.9 },
  { n: 'Oxtail', p: 150000, u: 'kg', c: null, s: 0.9 },
  { n: 'Brisket/Chuck', p: 171000, u: 'kg', c: null, s: 0.9 },
  { n: 'Shin/Shank', p: 165000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Silverside/Blade/Chuck Tender/Rump/Knukle/Top side/Eye Round',
    p: 180000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Prime Ribs Bone In', p: 205000, u: 'kg', c: null, s: 0.9 },
  { n: 'Rib Eye (cube roll)', p: 200000, u: 'kg', c: null, s: 0.9 },
  { n: 'Rib Eye Rack', p: 220000, u: 'kg', c: null, s: 0.9 },
  { n: 'T Bone', p: 230000, u: 'kg', c: null, s: 0.9 },
  { n: 'Striploin', p: 205000, u: 'kg', c: null, s: 0.9 },
  { n: 'Tenderloin', p: 232000, u: 'kg', c: null, s: 0.9 },
  { n: 'Lung', p: 125000, u: 'kg', c: null, s: 0.9 },
  { n: 'Intestine', p: 54000, u: 'kg', c: null, s: 0.9 },
  { n: 'Kidney/Fat', p: 80000, u: 'kg', c: null, s: 0.9 },
  { n: 'Liver/Tripe', p: 85000, u: 'kg', c: null, s: 0.9 },
  { n: 'Heart', p: 93000, u: 'kg', c: null, s: 0.9 },
  { n: 'Spleen', p: 130000, u: 'kg', c: null, s: 0.9 },
  { n: 'Crepine', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Gravel', p: 120000, u: 'kg', c: null, s: 0.9 },
  { n: 'Tongue', p: 150000, u: 'kg', c: null, s: 0.9 },
  { n: 'Cheek', p: 195000, u: 'kg', c: null, s: 0.9 },
  { n: 'Beef bones cuts min 2 kg', p: 45000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Beef bone marrow short cut transversal. min 2 kg',
    p: 45000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Beef bone marrow 20/25 cm long cut for grill min 2 kg',
    p: 75000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Tallow', p: 45000, u: 'kg', c: null, s: 0.9 }
]
✅ Extracted 26 products
✅ Image 6: 26 products extracted by Gemini Flash 2.0
🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_7.png: ```json
[
  {"n": "Volcanic Sea Salt Kuwu from central java", "p": 35000, "u": "pack 1 kg", "c": null, "s": 0.9},
  {"n": "Volcanic Sea Salt Kuwu from central java", "p": 27000, "u": "30 kg", "c": nul...
📊 Parsed data: [
  {
    n: 'Volcanic Sea Salt Kuwu from central java',
    p: 35000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Volcanic Sea Salt Kuwu from central java',
    p: 27000,
    u: '30 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Candi Dasa Hight Natural "Fleur de Sel"',
    p: 36000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'NON GMO Semi hard, Hard or Silken Tofu',
    p: 19000,
    u: 'pack 250 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'NON GMO Smoked Tofu',
    p: 28000,
    u: 'pack 183 gr',
    c: null,
    s: 0.9
  },
  { n: 'Soya Bean NON GMO', p: 43000, u: 'pack 1 kg', c: null, s: 0.9 },
  {
    n: 'Soya Milk NON GMO',
    p: 23000,
    u: 'bottle 500 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Gari Ginger Japanese Pickled Ginger',
    p: 35000,
    u: '300 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Saurkraut Fermented Vegetable Food',
    p: 54000,
    u: '500 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Sunomono Ryoshi Sauce',
    p: 24000,
    u: '250 ml',
    c: null,
    s: 0.9
  },
  { n: 'Sushi Rice Vinegar', p: 30000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Sushi Sashimi Soyu', p: 27000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Teriyaki Sauce', p: 28000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Mirin', p: 27000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Coconut Yoghurt', p: 120000, u: '1 Liter', c: null, s: 0.9 },
  {
    n: 'Organic Coconut Hot Oil pressed Trad Handmade in Desa Sangketan Ball',
    p: 112000,
    u: '1 Liter',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Coconut Oil Cold Pressed Sangketan Bali on order',
    p: 195000,
    u: '1 Liter',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Peanut Arachide Oil Jawa',
    p: 67000,
    u: '1 Liter',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Apple Vinegar origin java',
    p: 55000,
    u: '320 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Muscat Red Vinegar',
    p: 55000,
    u: '320 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Ibex Coconut Vinegar',
    p: 212000,
    u: '250 & 750 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Arenga Palm Sugar Nectar',
    p: 125000,
    u: '1 Liter & 5 Liter',
    c: null,
    s: 0.9
  },
  { n: 'Coconut Sugar', p: 75000, u: '500 gr', c: null, s: 0.9 },
  { n: 'Lion s Mane Mushroom.', p: 380000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'Local Risoto (Ciherang Rice)',
    p: 500000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Polenta Organic Java',
    p: 190000,
    u: 'Pack 5 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Dried Guajillo Chiilis origin Borneo 1 KG',
    p: 270000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Curry Leaves (daun kari ) fresh',
    p: 150000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'White Peppercorn origin Bangka Belitung',
    p: 200000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Black Peppercorn origin Borneo',
    p: 210000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'Andaliman pepper', p: 400000, u: '1 kg', c: null, s: 0.9 },
  { n: 'cai Berry Frozen', p: 380000, u: 'pack 1 kg', c: null, s: 0.9 }
]
✅ Extracted 32 products
✅ Image 7: 32 products extracted by Gemini Flash 2.0
🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_8.png: ```json
[
  {"n": "Dragon Tomato tapenade", "p": 100000, "u": "200 ml", "c": null, "s": 0.9},
  {"n": "Tomato tapenade", "p": 100000, "u": "200 ml", "c": null, "s": 0.9},
  {"n": "Portobello Tapenade"...
📊 Parsed data: [
  {
    n: 'Dragon Tomato tapenade',
    p: 100000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  { n: 'Tomato tapenade', p: 100000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Portobello Tapenade', p: 100000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Mango Mint Chutney', p: 100000, u: '200 ml', c: null, s: 0.9 },
  {
    n: 'Tamarillo Chutney Chutney',
    p: 100000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  { n: 'Papaya Dill Chutney', p: 85000, u: '200 ml', c: null, s: 0.9 },
  {
    n: 'Cashew Mus tom tap cashew',
    p: 85000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Banana Dates and Ginger',
    p: 85000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  { n: 'Tangy Tamarillo Jam', p: 75000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Mango Mint Jam', p: 75000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Mango Pulp Frozen', p: 54000, u: '500g', c: null, s: 0.9 },
  {
    n: 'Harissa Tunisian chili sauce with arab spices',
    p: 78000,
    u: '100 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'ORGANIC GRASS GED BEEF BONE BROTH',
    p: 35000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'ORGANIC PROBIOTIC CHICKEN BONE BROTH',
    p: 30000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'WILD CAUGHT SALMON BONE BROTH',
    p: 30000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'ORGANIC VEGETABLE BROTH W SLIPPERY ELM POWDER',
    p: 28000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'TOMATO KETCHUP',
    p: 65000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'CHILLI SAUCE',
    p: 65000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'VEGAN MAYONNAISE DRESSING',
    p: 116000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'THOUSAND ISLAND',
    p: 86000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'MEXICAN SALSA',
    p: 120000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  { n: 'CAESAR', p: 115000, u: 'glass jar 230 gr', c: null, s: 0.9 },
  { n: 'RANCH', p: 127000, u: 'glass jar 230 gr', c: null, s: 0.9 },
  {
    n: 'CHIMICHURRI',
    p: 119000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  { n: 'Camembert', p: 76000, u: '170 gr', c: null, s: 0.9 },
  { n: 'Smoked Cheddar', p: 81000, u: '220 gr', c: null, s: 0.9 },
  { n: 'Cranberry Chevre', p: 81000, u: '180 gr', c: null, s: 0.9 },
  { n: 'Reaper Jack', p: 64000, u: '340 gr', c: null, s: 0.9 },
  { n: 'Boursin Style', p: 60000, u: '180 gr', c: null, s: 0.9 },
  { n: 'Valencay', p: 82000, u: '180 gr', c: null, s: 0.9 },
  { n: 'Gorgonzola', p: 86000, u: '150 gr', c: null, s: 0.9 },
  {
    n: 'Black Garlic & Pepper.',
    p: 64000,
    u: '155 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cream Cheese Plain, or Chive & Onion.',
    p: 81000,
    u: '300 gr jar',
    c: null,
    s: 0.9
  },
  { n: 'Mozzarella', p: 55000, u: '300 gr', c: null, s: 0.9 },
  { n: 'Bocconcini', p: 76000, u: '300 gr jar', c: null, s: 0.9 },
  { n: 'Burrata', p: 55000, u: '170 gr', c: null, s: 0.9 },
  { n: 'Salted Butter', p: 61000, u: '250 gr', c: null, s: 0.9 },
  { n: 'Cheese Fondue', p: 120000, u: '380 gr jar', c: null, s: 0.9 }
]
✅ Extracted 38 products
✅ Image 8: 38 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 272 products from 8 images in 86720ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 272 products extracted in 90803ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Widi Wiguna 03_07.xlsx (application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, 86844 bytes)
[UnifiedUpload] Using unifiedGeminiService for application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: Widi Wiguna 03_07.xlsx
[UnifiedGemini] Processing Widi Wiguna 03_07.xlsx with model gemini-2.0-flash-exp
[UnifiedGemini] Preprocessing Excel/CSV file: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed, trying ExcelJS fallback in UnifiedGemini: Bad compressed size: 65895 != 1179258880
[UnifiedGemini] Using ExcelJS fallback for: Widi Wiguna 03_07.xlsx
📊 ExcelJS: Processing file with 3 worksheets
   📋 Checking worksheet: "Sheet1" (264 rows)
✅ ExcelJS: Successfully processed 242 rows from "Sheet1"
[UnifiedGemini] Estimated products: 0, Using batching: true
[UnifiedGemini] Processing 0 batches with size 200
[UnifiedUpload] Success: 0 products extracted in 17ms
 POST /api/upload-unified 200 in 23ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Berkah laut 03_07.jpg (image/jpeg, 158170 bytes)
[UnifiedUpload] Using unifiedGeminiService for image/jpeg: Berkah laut 03_07.jpg
[UnifiedGemini] Processing Berkah laut 03_07.jpg with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: true
🔍 Parsing Gemini response for Berkah laut 03_07.jpg: ```json
[{"n":"Tuna shasimi (A+)","p":175000,"u":null,"c":"Fresh","s":0.9},{"n":"Tuna loin (B)","p":120000,"u":null,"c":"Fresh","s":0.9},{"n":"Tuna Porsion 200gr","p":105000,"u":null,"c":"Frozen","s":...
📊 Parsed data: [
  { n: 'Tuna shasimi (A+)', p: 175000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tuna loin (B)', p: 120000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tuna Porsion 200gr', p: 105000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Marlin cut', p: 90000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Sword fish', p: 95000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Butterfish', p: 95000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Japanise codfish', p: 135000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Red Snapper', p: 195000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Baramundi', p: 150000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Seabteam', p: 165000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Grouper', p: 165000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Opaka-opaka', p: 150000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Mackerel/Tenggiri', p: 135000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Mahi-mahi', p: 110000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Salmon fresh', p: 330000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Salmon frozen', p: 250000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Asari/Manila', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Oyster', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Hijau(lokal)', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Mussel', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Bambu', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Scallop', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Creabmeat', p: 165000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Crab life (300-450 gr)', p: null, u: null, c: 'Life', s: 0.9 },
  { n: 'Crab life (500-1000 gr)', p: null, u: null, c: 'Life', s: 0.9 },
  { n: 'Rajungan', p: null, u: null, c: 'Life', s: 0.9 },
  { n: 'Softshell crab', p: null, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Lobster (200-500 gr)', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Lobster (500-1000 gr)', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Octopus 1 up', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Octopus 2 up', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Cumi manis', p: 160000, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Cumi sotong', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Cumi kecil', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Cumi kotak', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Cumi tube', p: 85000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Dori', p: 60000, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Tiger prawn 6-9', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tiger prawn 10-15', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tiger prawn 15', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tiger prawn 20', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tiger prawn 25', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tiger prawn 30', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Tiger prawn 40', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Vaname 20', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Vaname 25', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Vaname 30', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Vaname 40', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Vaname 50', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Vaname70 [shrimp]', p: null, u: null, c: 'Fresh', s: 0.9 },
  { n: 'Udang Kupas 30/40', p: null, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Shrimp Blok', p: null, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Cumi Ring', p: null, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Tuna Saku [A]', p: null, u: null, c: 'Frozen', s: 0.9 },
  { n: 'Salmon Smoked', p: 565000, u: null, c: 'Frozen', s: 0.9 }
]
✅ Extracted 55 products
[UnifiedUpload] Success: 55 products extracted in 9284ms
 POST /api/upload-unified 200 in 9293ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: local parts butcher shop 03_07.jpg (image/jpeg, 99964 bytes)
[UnifiedUpload] Using unifiedGeminiService for image/jpeg: local parts butcher shop 03_07.jpg
[UnifiedGemini] Processing local parts butcher shop 03_07.jpg with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: true
🔍 Parsing Gemini response for local parts butcher shop 03_07.jpg: ```json
[
  {"n": "Wings", "p": 215, "u": "kg", "c": "CHICKEN", "s": 0.9},
  {"n": "Whole", "p": 295, "u": "kg", "c": "CHICKEN", "s": 0.9},
  {"n": "Drumstick", "p": 295, "u": "kg", "c": "CHICKEN", "s...
📊 Parsed data: [
  { n: 'Wings', p: 215, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Whole', p: 295, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Drumstick', p: 295, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Thigh', p: 295, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Leg (bone in)', p: 295, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Leg (bone out)', p: 350, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Minced', p: 350, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Breast', p: 450, u: 'kg', c: 'CHICKEN', s: 0.9 },
  { n: 'Burger Patty (150 g)', p: 75, u: '150 g', c: 'BEEF', s: 0.9 },
  { n: 'Oxtail', p: 225, u: 'kg', c: 'BEEF', s: 0.9 },
  { n: 'Minced', p: 295, u: 'kg', c: 'BEEF', s: 0.9 },
  { n: 'Cubes', p: 375, u: 'kg', c: 'BEEF', s: 0.9 },
  { n: 'Fillet Steak', p: 375, u: 'kg', c: 'BEEF', s: 0.9 },
  { n: 'Sirloin', p: 550, u: 'kg', c: 'BEEF', s: 0.9 },
  { n: 'Tokusen Brisket', p: 495, u: 'kg', c: 'WAGYU BEEF', s: 0.9 },
  { n: 'Tokusen Flank', p: 625, u: 'kg', c: 'WAGYU BEEF', s: 0.9 },
  { n: 'Tokusen Rib Cap', p: 625, u: 'kg', c: 'WAGYU BEEF', s: 0.9 },
  { n: 'Tokusen Tri-tip', p: 675, u: 'kg', c: 'WAGYU BEEF', s: 0.9 },
  { n: 'Tokusen Skirt', p: 750, u: 'kg', c: 'WAGYU BEEF', s: 0.9 },
  { n: 'Tokusen Rib Eye', p: 1950, u: 'kg', c: 'WAGYU BEEF', s: 0.9 },
  { n: 'Chorizo', p: 75, u: '100 g', c: 'SALUMI', s: 0.9 },
  { n: 'Salami', p: 75, u: '100 g', c: 'SALUMI', s: 0.9 },
  { n: 'Head Cheese', p: 32.5, u: '100 g', c: 'PÂTÉS', s: 0.9 },
  { n: 'Country Páté', p: 75, u: '100 g', c: 'PÂTÉS', s: 0.9 },
  { n: 'Pork Rillete (350 g)', p: 150, u: null, c: 'PÂTÉS', s: 0.9 },
  { n: 'Shank', p: 395, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Minced', p: 450, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Shoulder (on the bone)', p: 450, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Leg (on the bone)', p: 475, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Chops', p: 595, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Leg (off the bone)', p: 595, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Rack of Lamb', p: 595, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Rolled Saddle', p: 675, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Loin/Tenderloin', p: 875, u: 'kg', c: 'LAMB', s: 0.9 },
  { n: 'Trotter', p: 225, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Minced', p: 295, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Belly', p: 350, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Boston Butt', p: 350, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Cubes (shoulder)', p: 350, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Picnic Ham', p: 350, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Spare Ribs', p: 350, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Schnitzel', p: 375, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Tomahawk', p: 375, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Rack of Pork', p: 375, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Porchetta', p: 395, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Chops', p: 395, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Loin (off the bone)', p: 425, u: 'kg', c: 'PORK', s: 0.9 },
  { n: 'Tenderloin', p: 495, u: 'kg', c: 'PORK', s: 0.9 },
  {
    n: 'Breakfast (pork)',
    p: 375,
    u: 'kg',
    c: 'FRESH SAUSAGES',
    s: 0.9
  },
  { n: 'Herbed (pork)', p: 375, u: 'kg', c: 'FRESH SAUSAGES', s: 0.9 },
  { n: 'Chorizo (pork)', p: 375, u: 'kg', c: 'FRESH SAUSAGES', s: 0.9 },
  {
    n: 'Boudin Noir (pork)',
    p: 395,
    u: 'kg',
    c: 'FRESH SAUSAGES',
    s: 0.9
  },
  {
    n: 'Chicken & Tarragon',
    p: 425,
    u: 'kg',
    c: 'FRESH SAUSAGES',
    s: 0.9
  },
  { n: 'Duck Sausage', p: 425, u: 'kg', c: 'FRESH SAUSAGES', s: 0.9 },
  { n: 'Lamb Merguez', p: 475, u: 'kg', c: 'FRESH SAUSAGES', s: 0.9 },
  {
    n: 'Cherry Tomato',
    p: 295,
    u: 'jar',
    c: 'BIG JARS (350 G)',
    s: 0.9
  },
  { n: 'Ketchup', p: 350, u: 'jar', c: 'BIG JARS (350 G)', s: 0.9 },
  {
    n: 'Classic Kimchi',
    p: 350,
    u: 'jar',
    c: 'BIG JARS (350 G)',
    s: 0.9
  },
  { n: 'Piccalilli', p: 350, u: 'jar', c: 'BIG JARS (350 G)', s: 0.9 },
  { n: 'Jalapeños', p: 350, u: 'jar', c: 'BIG JARS (350 G)', s: 0.9 },
  { n: 'Smoked Salt', p: 350, u: 'jar', c: 'BIG JARS (350 G)', s: 0.9 },
  { n: 'Horb Salt', p: null, u: null, c: 'BIG JARS (350 G)', s: 0.9 },
  { n: 'Mango Jam', p: null, u: null, c: 'BIG JARS (350 G)', s: 0.9 },
  {
    n: 'Passion Fruit Jam',
    p: null,
    u: null,
    c: 'BIG JARS (350 G)',
    s: 0.9
  },
  {
    n: 'Tangerine Jam',
    p: null,
    u: null,
    c: 'BIG JARS (350 G)',
    s: 0.9
  },
  {
    n: 'Raspberry Jam',
    p: null,
    u: null,
    c: 'BIG JARS (350 G)',
    s: 0.9
  },
  {
    n: 'Classic Kimchi',
    p: null,
    u: 'jar',
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Cacao Spice Rub',
    p: null,
    u: 'jar',
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Coffee Spice Rub',
    p: null,
    u: 'jar',
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Green Peppercorns',
    p: null,
    u: 'jar',
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Smoked Salt',
    p: null,
    u: 'jar',
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  { n: 'Herb Salt', p: null, u: null, c: 'SMALL JARS (150 G)', s: 0.9 },
  { n: 'Mango Jam', p: null, u: null, c: 'SMALL JARS (150 G)', s: 0.9 },
  {
    n: 'Passion Fruit Jam',
    p: null,
    u: null,
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Tangerine Jam',
    p: null,
    u: null,
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Raspberry Jam',
    p: null,
    u: null,
    c: 'SMALL JARS (150 G)',
    s: 0.9
  },
  {
    n: 'Boiled/Smoked Ham',
    p: 55,
    u: '100 g',
    c: 'CHARCUTERIE',
    s: 0.9
  },
  { n: 'Pork Bacon', p: 65, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Smoked Bacon', p: 65, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Pork Pancetta', p: 65, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Guanciale', p: 75, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Beef Bacon', p: 75, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Coppa', p: 75, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Lomo', p: 75, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Raw ham', p: 85, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Pastrami (beef)', p: 65, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  { n: 'Bresaola (beef)', p: 85, u: '100 g', c: 'CHARCUTERIE', s: 0.9 },
  {
    n: 'Country White',
    p: 99,
    u: '(big)',
    c: 'SOURDOUGH BREAD',
    s: 0.9
  },
  {
    n: 'Country White',
    p: 59,
    u: '(small)',
    c: 'SOURDOUGH BREAD',
    s: 0.9
  },
  {
    n: 'Country Wheat',
    p: 99,
    u: '(big)',
    c: 'SOURDOUGH BREAD',
    s: 0.9
  },
  {
    n: 'Country Wheat',
    p: 59,
    u: '(small)',
    c: 'SOURDOUGH BREAD',
    s: 0.9
  },
  { n: 'Kampung Egg', p: 10, u: 'piece', c: 'OTHERS', s: 0.9 },
  { n: 'Bread Crumbs', p: 10, u: '100 g', c: 'OTHERS', s: 0.9 },
  { n: 'Beef Bone', p: 125, u: 'kg', c: 'OTHERS', s: 0.9 },
  { n: 'Bone Marrow', p: 225, u: 'kg', c: 'OTHERS', s: 0.9 },
  { n: 'Meat Stock', p: 99, u: 'litre', c: 'OTHERS', s: 0.9 },
  { n: 'Bone Broth', p: 150, u: 'litre', c: 'OTHERS', s: 0.9 },
  { n: 'Bali Sea Salt', p: 80, u: '150 g', c: 'OTHERS', s: 0.9 },
  { n: 'Ashed Chovre-Style', p: 105, u: '150 g', c: 'OTHERS', s: 0.9 },
  { n: 'Cypriot Halloumi', p: 140, u: '200 g', c: 'OTHERS', s: 0.9 },
  ... 23 more items
]
✅ Extracted 123 products
[UnifiedUpload] Success: 123 products extracted in 27631ms
 POST /api/upload-unified 200 in 27639ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: CV alam Sari 05_07 .pdf (application/pdf, 6449819 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: CV alam Sari 05_07 .pdf
🔍 PDF extraction starting: CV alam Sari 05_07 .pdf
📄 Step 1: Converting PDF to images: CV alam Sari 05_07 .pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_1.png: ```json
[]
```...
📊 Parsed data: []
✅ Extracted 0 products
✅ Image 1: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_2.png: ```json
[
  {"n": "Honey Blossom Cotton", "p": 170000, "u": "ltr", "c": null, "s": 0.9},
  {"n": "Honey Blossom Cotton", "p": 650000, "u": "5 Itr", "c": null, "s": 0.9},
  {"n": "Honey Longane", "p": ...
📊 Parsed data: [
  { n: 'Honey Blossom Cotton', p: 170000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Blossom Cotton', p: 650000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Longane', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Longane', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Mango', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Mango', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Hevea', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Hevea', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Acacia Sumatra', p: 250000, u: 'ltr', c: null, s: 0.9 },
  {
    n: 'Honey Acacia Sumatra',
    p: 1100000,
    u: '5 Itr',
    c: null,
    s: 0.9
  },
  { n: 'Honey Wild Acacia', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Wild Acacia', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Flower Of Java', p: 250000, u: 'ltr', c: null, s: 0.9 },
  {
    n: 'Honey Flower Of Java',
    p: 1100000,
    u: '5 Itr',
    c: null,
    s: 0.9
  },
  { n: 'Honey Cloves', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Cloves', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Rainforest Garut', p: 250000, u: 'ltr', c: null, s: 0.9 },
  {
    n: 'Honey Rainforest Garut',
    p: 1100000,
    u: '5 Itr',
    c: null,
    s: 0.9
  },
  { n: 'Honey Kaliandra', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Kaliandra', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Rambutan', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Rambutan', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  { n: 'Honey Eucalyptus', p: 250000, u: 'ltr', c: null, s: 0.9 },
  { n: 'Honey Eucalyptus', p: 1100000, u: '5 Itr', c: null, s: 0.9 },
  {
    n: 'Whole Honeycomb with wood frame (23x48cm)',
    p: 280000,
    u: 'around 2,2 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Honey Propolis Vinegar',
    p: 45000,
    u: '350 mlt',
    c: null,
    s: 0.9
  },
  { n: 'Honey Wax per KG', p: 400000, u: null, c: null, s: 0.9 },
  {
    n: 'Vanilla Planifolia 18-20 cm',
    p: 2000000,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Vanilla Planifolia 18-20 cm',
    p: 3600000,
    u: 'per kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti 16 cm',
    p: 1800000,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti 16 cm',
    p: 3300000,
    u: 'per kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti 14 cm',
    p: 1700000,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Vanilla Tahiti 14 cm',
    p: 3200000,
    u: 'per kg',
    c: null,
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Extract',
    p: 450000,
    u: '550 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla - Vanilla Extract',
    p: 92000,
    u: '100 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Extract',
    p: 59000,
    u: '50 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Paste',
    p: 770000,
    u: '550 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Paste',
    p: 149000,
    u: '100 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'La Dame In Vanilla-Vanilla Paste',
    p: 82000,
    u: '50 ml',
    c: null,
    s: 0.9
  },
  { n: 'MILK CHOCOLATE ALMOND', p: 310000, u: '1 kg', c: null, s: 0.9 },
  { n: 'MILK CHOCOLATE CASHEW', p: 310000, u: '1 kg', c: null, s: 0.9 },
  { n: 'MILK 45%', p: 310000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'DARK SALTED BRITTLE CARAMEL',
    p: 315000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'DARK COFFEE', p: 315000, u: '1 kq', c: null, s: 0.9 },
  { n: 'DARK COCONUT', p: 315000, u: '1 κα', c: null, s: 0.9 },
  { n: 'DARK MINT', p: 315000, u: '1 kg', c: null, s: 0.9 },
  { n: 'DARK ORANGE', p: 315000, u: '1 κα', c: null, s: 0.9 },
  { n: 'DARK 60%', p: 370000, u: '1 kg', c: null, s: 0.9 },
  { n: 'DARK 70%', p: 370000, u: '1 ka', c: null, s: 0.9 },
  { n: 'DARK 85%', p: 380000, u: '1 κα', c: null, s: 0.9 },
  { n: 'WHITE CHOCOLATE', p: 370000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'COCOA LIQUOR/MASS 100%',
    p: 420000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'COCOA BUTTER', p: 580000, u: '1 kq', c: null, s: 0.9 },
  { n: 'COCO POWDER', p: 335000, u: '250 gr', c: null, s: 0.9 },
  { n: 'COCOA NIBS', p: 400000, u: '250 gr', c: null, s: 0.9 },
  { n: 'COCONUT BROWN SUGAR', p: 90000, u: '250 gr', c: null, s: 0.9 },
  { n: 'CHOCOLATE SPHERES 8 cm', p: 34000, u: '1 pc', c: null, s: 0.9 },
  {
    n: 'CHOCOLATE SPHERES 10 cm',
    p: 40000,
    u: '1 pc',
    c: null,
    s: 0.9
  },
  { n: 'COCOA HUSK ROASTED', p: 200000, u: '1 kg', c: null, s: 0.9 }
]
✅ Extracted 59 products
✅ Image 2: 59 products extracted by Gemini Flash 2.0
🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_3.png: ```json
[
  {"n": "Pasteurized Cow Milk Plain (4.5% Fat) JABMILK kooperativ farmer on order min 2 Itr", "p": 35000, "u": "per liter", "c": "DAIRY MILK & BUTTER", "s": 0.9},
  {"n": "Natural Yoghurt Pl...
📊 Parsed data: [
  {
    n: 'Pasteurized Cow Milk Plain (4.5% Fat) JABMILK kooperativ farmer on order min 2 Itr',
    p: 35000,
    u: 'per liter',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Natural Yoghurt Plain organic grassfed cow s milk 1 Liter',
    p: 68000,
    u: 'per liter',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Raw Cow Milk Java',
    p: 25000,
    u: 'per liter',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Frozen Goat Milk min order 6 btl lead time 2-3 days',
    p: 45000,
    u: '500 ml',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Frozen Goat Milk min order 4 liter lead time 2-3 days',
    p: 72000,
    u: '1 t',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Buttersheet Kahf for croissant and viennoiserie fat 83% up',
    p: 240000,
    u: 'block 2 kg',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Cultured Butter Kahf Farmer style 79% health and taste',
    p: 190000,
    u: '1 kg',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Organic Unsalted Butter Ganesha',
    p: 190000,
    u: '1 kg',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Non Gmo Soy Milk traditional soya plantation flores min order 1 Itr',
    p: 25000,
    u: 'glass bottle 500 ml',
    c: 'DAIRY MILK & BUTTER',
    s: 0.9
  },
  {
    n: 'Mozzarella Organic Kareem, soft, threads, smoking point >350 °C',
    p: 125000,
    u: 'block 1 kg',
    c: 'MOZZARELLA PIZZA & HALLOUMI',
    s: 0.9
  },
  {
    n: 'Mozzarella Organic Kahf ferm texture',
    p: 150000,
    u: 'block 1 kg',
    c: 'MOZZARELLA PIZZA & HALLOUMI',
    s: 0.9
  },
  {
    n: 'Halloumi Cheezzery grilled, veg burger, sandwich, salad',
    p: 230000,
    u: 'block 1 kg',
    c: 'MOZZARELLA PIZZA & HALLOUMI',
    s: 0.9
  },
  {
    n: 'Coeur De Brie',
    p: 130000,
    u: 'pack 200 gr up',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Janur mont d or style Brie',
    p: 100000,
    u: 'pack around 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Chaource, Britanny style Brie',
    p: 130000,
    u: 'pack around 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Truffle Oil Persian',
    p: 75000,
    u: 'pack 140 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Ashed Chevre',
    p: 65000,
    u: 'pack 140 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Dill & Garlic Persian',
    p: 65000,
    u: 'pack 140 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Greek Feta Traditional',
    p: 100000,
    u: 'pack 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Glenmore welsh cheddar',
    p: 100000,
    u: 'pack 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Maluku Jinten cumin gouda',
    p: 100000,
    u: 'pack 200 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Premium Greek Yoghurt',
    p: 89000,
    u: 'jar 500 gr',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Soft Cow Cheese',
    p: 360000,
    u: 'pack 1 kg',
    c: 'SHY COW CHEESE',
    s: 0.9
  },
  {
    n: 'Buratta fresh filled w strataciela and cream',
    p: 350000,
    u: '@150 gr/ pc seal glass',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Buratta fresh filled w strataciela and cream',
    p: 380000,
    u: '@70 gr/ pc seal glass',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Ciliegieni fresh mozza small boconcini (33gr)',
    p: 230000,
    u: 'per pack 6 balls 200gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Boconcini fresh mozzarella organic',
    p: 230000,
    u: '10 x ball 100gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Nodino fresh mozzarella organic',
    p: 250000,
    u: '@50/100 gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Treccia fresh mozzarella organic',
    p: 250000,
    u: '@100/15',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Dolce Mt Batu Taste like St Nectaire snacks, salads',
    p: 420000,
    u: '1/2 block 500gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Kebima Blue Cheese strong taste, ,sauces, salad',
    p: 420000,
    u: '1/2 block 500gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Brie Mount Kawi Soft and tasty Brie style cheese',
    p: 420000,
    u: null,
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Ricotta fresh made',
    p: 120000,
    u: 'Pack 500gr',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Bintang Bromo a flavorful Tomme from Mt Bromo area',
    p: 290000,
    u: 'Block 4,5 kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Mba Kaciota hard cheese like Caciotta',
    p: 290000,
    u: 'Block 700 gr up',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Provola',
    p: 260000,
    u: 'Ball 500gr or Half ball',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Smoked Scarmoza',
    p: 275000,
    u: 'Ball 500gr or Half ball',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Provolone diam 90 mm',
    p: 260000,
    u: 'Loaf 2 kg or Half Loaf 1kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Provolone Sliced diameter 9 cm min order 500gr',
    p: 275000,
    u: 'Loaf 2 kg or Half Loaf 1kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  },
  {
    n: 'Smoked Provolone',
    p: 265000,
    u: 'Loaf 2 kg or Half Loaf 1kg',
    c: 'MOUNT BATU ABADI',
    s: 0.9
  }
]
✅ Extracted 40 products
✅ Image 3: 40 products extracted by Gemini Flash 2.0
🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_4.png: ```json
[
  {"n": "Jahru", "p": 480000, "u": "wheel 2,5 kg", "c": "KAHF CHEESE", "s": 0.9},
  {"n": "Hamet", "p": 330000, "u": "wheel 2,5 kg", "c": "KAHF CHEESE", "s": 0.9},
  {"n": "Chelang", "p": 33...
📊 Parsed data: [
  {
    n: 'Jahru',
    p: 480000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Hamet',
    p: 330000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Chelang',
    p: 330000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Cherah',
    p: 360000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Feta Artisan Kahf',
    p: 245000,
    u: 'pack 1 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Tomme De Andaliman',
    p: 420000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Kotikoti',
    p: 330000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Malangcego',
    p: 620000,
    u: 'Wheel 800 gr up',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Chebing',
    p: 620000,
    u: 'Block 1,4 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Goat Feta',
    p: 450000,
    u: 'wheel 2,5 kg',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Fresh Cream',
    p: 105000,
    u: '1 liter',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Double Cream',
    p: 135000,
    u: '1 liter',
    c: 'KAHF CHEESE',
    s: 0.9
  },
  {
    n: 'Salju Orion',
    p: 245000,
    u: '> Block 400 gr',
    c: 'CHEEZZERY',
    s: 0.9
  },
  {
    n: 'Salju Orion Blackpepper',
    p: 255000,
    u: '> Block 400 gr',
    c: 'CHEEZZERY',
    s: 0.9
  },
  {
    n: 'Halloumi cheezzery',
    p: 230000,
    u: 'block 1 kg',
    c: 'CHEEZZERY',
    s: 0.9
  },
  {
    n: 'Burrata',
    p: 420000,
    u: '80 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Fior De Latte',
    p: 310000,
    u: '100 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Small Bocconcini',
    p: 310000,
    u: '50 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Kemala Breakfast',
    p: 310000,
    u: 'block 900 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Aged Kemala.',
    p: 310000,
    u: 'block 900 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Goat Crottin Tradition',
    p: 540000,
    u: '200 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Fresh Goat Cheese',
    p: 420000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Fresh Goat Cheese Blackpepper',
    p: 425000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Brie Artisan Bali',
    p: 520000,
    u: '200 gr up',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Ricotta Artisan Bali',
    p: 150000,
    u: '500 gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Classical white Cheddar cheese',
    p: 135000,
    u: 'block 2 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Mountain Cheese',
    p: 340000,
    u: 'block 1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Ghee',
    p: 75000,
    u: 'jar 200gr',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Feta Artisan Kahf',
    p: 245000,
    u: 'pack 1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Paneer Turki Cheese origin Bali',
    p: 175000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Cheese Curd',
    p: 250000,
    u: 'pack 1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Sulugini',
    p: 170000,
    u: '1 kg',
    c: 'INDONESIAN ARTISAN CHEESE',
    s: 0.9
  },
  {
    n: 'Gorgonzola Piccante',
    p: 520000,
    u: 'min order 500gr 2,5 kg',
    c: 'ITALIAN Import CHEESE',
    s: 0.9
  },
  {
    n: 'Cheese Tester 1',
    p: 62000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester 2',
    p: 62000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester mix',
    p: 75000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester Pro',
    p: 130000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Cheese Tester Vegan Cheese',
    p: 95000,
    u: 'Per pc',
    c: 'CHEESE TESTER',
    s: 0.9
  },
  {
    n: 'Set tools for Cheese Fondue complete',
    p: 225000,
    u: 'Per pc',
    c: 'SET TOOLS FOR CHEESE\nFONDUE',
    s: 0.9
  }
]
✅ Extracted 39 products
✅ Image 4: 39 products extracted by Gemini Flash 2.0
🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_5.png: ```json
[
  {"n": "Pastured Fat Chicken breed New Zealand. frozen sold whole 1,5 kg", "p": 105000, "u": null, "c": null, "s": 0.9},
  {"n": "Chef s Creation Organic Chicken Liver Pate The liver from t...
📊 Parsed data: [
  {
    n: 'Pastured Fat Chicken breed New Zealand. frozen sold whole 1,5 kg',
    p: 105000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chef s Creation Organic Chicken Liver Pate The liver from the fat chicken',
    p: 80000,
    u: 'Glass jar 200 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Red Egg probiotic egg',
    p: 44000,
    u: 'per pack',
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Broiler Whole probiotic',
    p: 70000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Breast Boneless & Skinless',
    p: 100000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Breast Boneless with Skin',
    p: 99000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Leg Boneless skinless',
    p: 99000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Chicken Leg Boneless with Skin',
    p: 91000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Chicken Leg Bone in', p: 91000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Thight', p: 91000, u: null, c: null, s: 0.9 },
  {
    n: 'Chicken Thight boneless skinless',
    p: 96000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Chicken Drumstick', p: 91000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Wings', p: 55000, u: null, c: null, s: 0.9 },
  { n: 'Wings Drumstick', p: 75000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Ampela', p: 42000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Liver', p: 42000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Skin', p: 68000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Feet', p: 36000, u: null, c: null, s: 0.9 },
  { n: 'Chicken Bone', p: 27000, u: null, c: null, s: 0.9 },
  { n: 'Mince Chicken', p: 97000, u: null, c: null, s: 0.9 },
  {
    n: 'Chicken Baby Boneless',
    p: 54000,
    u: 'per pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Quails free range Organic origin farm Java',
    p: 60000,
    u: 'per pc',
    c: null,
    s: 0.9
  },
  {
    n: 'Frog Leg frozen min order 2 kg lead time 3 day origin Java',
    p: 30000,
    u: 'per pcs',
    c: null,
    s: 0.9
  },
  {
    n: 'Large organic Snail in can 80/90 pces',
    p: 1440000,
    u: '12 can in box per box',
    c: null,
    s: 0.9
  },
  {
    n: 'Peking Duck Whole probiotic feeding, Whole 2.5 kg up',
    p: 70000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Peking Duck Breast Boneless Frozen',
    p: 410000,
    u: 'Pack 250gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Peking Duck Leg Frozen weight approx 1 pces 250gr',
    p: 350000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Turkey Natural feeding 4/5 kg whole',
    p: 160000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Turkey Natural feeding 4/5 kg without head & feet',
    p: 185000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat Whole Free range bone in frzn (7 to 15 kg) (18 to 25 kg) East and central Java',
    p: null,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat Leg bone in frzn Java, fresh meat by request (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat Shoulder bone in frzn Java, fresh meat by request (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Goat loin from java (east and central) 500 gr approx depending availibility on site',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Goat chops rack', p: 220000, u: null, c: null, s: 0.9 },
  {
    n: 'Whole Lamb. Free range bone in. frzn (7 to 15 kg) (18 to 25 kg) East and Central Java',
    p: null,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Leg bone in frzn Java (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Lamb Shoulder bone in frzn Java (1,5 up) (0.9 up)',
    p: 220000,
    u: null,
    c: null,
    s: 0.9
  },
  {
    n: 'Pabbit free range 1kg to 2,5 kg fresh or frzn Java',
    p: 135000,
    u: null,
    c: null,
    s: 0.9
  }
]
✅ Extracted 38 products
✅ Image 5: 38 products extracted by Gemini Flash 2.0
🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_6.png: ```json
[
  {"n": "Mince Beef trims with 10% fat", "p": 140000, "u": "kg", "c": null, "s": 0.9},
  {"n": "Short Rib", "p": 146000, "u": "kg", "c": null, "s": 0.9},
  {"n": "Oxtail", "p": 150000, "u": ...
📊 Parsed data: [
  {
    n: 'Mince Beef trims with 10% fat',
    p: 140000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Short Rib', p: 146000, u: 'kg', c: null, s: 0.9 },
  { n: 'Oxtail', p: 150000, u: 'kg', c: null, s: 0.9 },
  { n: 'Brisket/Chuck', p: 171000, u: 'kg', c: null, s: 0.9 },
  { n: 'Shin/Shank', p: 165000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Silverside/Blade/Chuck Tender/Rump/Knukle/Top side/Eye Round',
    p: 180000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Prime Ribs Bone In', p: 205000, u: 'kg', c: null, s: 0.9 },
  { n: 'Rib Eye (cube roll)', p: 200000, u: 'kg', c: null, s: 0.9 },
  { n: 'Rib Eye Rack', p: 220000, u: 'kg', c: null, s: 0.9 },
  { n: 'T Bone', p: 230000, u: 'kg', c: null, s: 0.9 },
  { n: 'Striploin', p: 205000, u: 'kg', c: null, s: 0.9 },
  { n: 'Tenderloin', p: 232000, u: 'kg', c: null, s: 0.9 },
  { n: 'Lung', p: 125000, u: 'kg', c: null, s: 0.9 },
  { n: 'Intestine', p: 54000, u: 'kg', c: null, s: 0.9 },
  { n: 'Kidney/Fat', p: 80000, u: 'kg', c: null, s: 0.9 },
  { n: 'Liver/Tripe', p: 85000, u: 'kg', c: null, s: 0.9 },
  { n: 'Heart', p: 93000, u: 'kg', c: null, s: 0.9 },
  { n: 'Spleen', p: 130000, u: 'kg', c: null, s: 0.9 },
  { n: 'Crepine', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Gravel', p: 120000, u: 'kg', c: null, s: 0.9 },
  { n: 'Tongue', p: 150000, u: 'kg', c: null, s: 0.9 },
  { n: 'Cheek', p: 195000, u: 'kg', c: null, s: 0.9 },
  { n: 'Beef bones cuts min 2 kg', p: 45000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Beef bone marrow short cut transversal. min 2 kg',
    p: 45000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Beef bone marrow 20/25 cm long cut for grill min 2 kg',
    p: 75000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Tallow', p: 45000, u: 'kg', c: null, s: 0.9 }
]
✅ Extracted 26 products
✅ Image 6: 26 products extracted by Gemini Flash 2.0
🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_7.png: ```json
[
  {"n": "Volcanic Sea Salt Kuwu from central java", "p": 35000, "u": "pack 1 kg", "c": null, "s": 0.9},
  {"n": "Volcanic Sea Salt Kuwu from central java", "p": 27000, "u": "30 kg per kg", "...
📊 Parsed data: [
  {
    n: 'Volcanic Sea Salt Kuwu from central java',
    p: 35000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Volcanic Sea Salt Kuwu from central java',
    p: 27000,
    u: '30 kg per kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Candi Dasa Hight Natural "Fleur de Sel"',
    p: 36000,
    u: 'pack 1 kg per kg',
    c: null,
    s: 0.9
  },
  {
    n: 'NON GMO Semi hard, Hard or Silken Tofu',
    p: 19000,
    u: 'pack 250 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'NON GMO Smoked Tofu',
    p: 28000,
    u: 'pack 183 gr',
    c: null,
    s: 0.9
  },
  { n: 'Soya Bean NON GMO', p: 43000, u: 'pack 1 kg', c: null, s: 0.9 },
  {
    n: 'Soya Milk NON GMO',
    p: 23000,
    u: 'bottle 500 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Gari Ginger Japanese Pickled Ginger',
    p: 35000,
    u: '300 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Saurkraut Fermented Vegetable Food',
    p: 54000,
    u: '500 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Sunomono Ryoshi Sauce',
    p: 24000,
    u: '250 ml',
    c: null,
    s: 0.9
  },
  { n: 'Sushi Rice Vinegar', p: 30000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Sushi Sashimi Soyu', p: 27000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Teriyaki Sauce', p: 28000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Mirin', p: 27000, u: '250 ml', c: null, s: 0.9 },
  { n: 'Coconut Yoghurt', p: 120000, u: '1 Liter', c: null, s: 0.9 },
  {
    n: 'Organic Coconut Hot Oil pressed Trad Handmade in Desa Sangketan Ball',
    p: 112000,
    u: '1 Liter',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Coconut Oil Cold Pressed Sangketan Bali on order',
    p: 195000,
    u: '1 Liter',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Peanut Arachide Oil Jawa',
    p: 67000,
    u: '1 Liter',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Apple Vinegar origin java',
    p: 55000,
    u: '320 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Organic Muscat Red Vinegar',
    p: 55000,
    u: '320 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Ibex Coconut Vinegar',
    p: 212000,
    u: '250 & 750 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Arenga Palm Sugar Nectar',
    p: 125000,
    u: '1 Liter & 5 Liter',
    c: null,
    s: 0.9
  },
  { n: 'Coconut Sugar', p: 75000, u: '500 gr', c: null, s: 0.9 },
  { n: 'Lion s Mane Mushroom.', p: 380000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'Local Risoto (Ciherang Rice)',
    p: 500000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Polenta Organic Java',
    p: 190000,
    u: 'Pack 5 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Dried Guajillo Chiilis origin Borneo 1 KG',
    p: 270000,
    u: 'pack 1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Curry Leaves (daun kari ) fresh',
    p: 150000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'White Peppercorn origin Bangka Belitung',
    p: 200000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Black Peppercorn origin Borneo',
    p: 210000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'Andaliman pepper', p: 400000, u: '1 kg', c: null, s: 0.9 },
  { n: 'cai Berry Frozen', p: 380000, u: 'pack 1 kg', c: null, s: 0.9 }
]
✅ Extracted 32 products
✅ Image 7: 32 products extracted by Gemini Flash 2.0
🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for CV alam Sari 05_07 .pdf_page_8.png: ```json
[
  {"n": "Dragon Tomato tapenade", "p": 100000, "u": "200 ml", "c": null, "s": 0.9},
  {"n": "Tomato tapenade", "p": 100000, "u": "200 ml", "c": null, "s": 0.9},
  {"n": "Portobello Tapenade"...
📊 Parsed data: [
  {
    n: 'Dragon Tomato tapenade',
    p: 100000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  { n: 'Tomato tapenade', p: 100000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Portobello Tapenade', p: 100000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Mango Mint Chutney', p: 100000, u: '200 ml', c: null, s: 0.9 },
  {
    n: 'Tamarillo Chutney Chutney',
    p: 100000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  { n: 'Papaya Dill Chutney', p: 85000, u: '200 ml', c: null, s: 0.9 },
  {
    n: 'Cashew Mus tom tap cashew',
    p: 85000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'Banana Dates and Ginger',
    p: 85000,
    u: '200 ml',
    c: null,
    s: 0.9
  },
  { n: 'Tangy Tamarillo Jam', p: 75000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Mango Mint Jam', p: 75000, u: '200 ml', c: null, s: 0.9 },
  { n: 'Mango Pulp Frozen', p: 54000, u: '500g', c: null, s: 0.9 },
  {
    n: 'Harissa Tunisian chili sauce with arab spices',
    p: 78000,
    u: '100 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'ORGANIC GRASS GED BEEF BONE BROTH',
    p: 35000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'ORGANIC PROBIOTIC CHICKEN BONE BROTH',
    p: 30000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'WILD CAUGHT SALMON BONE BROTH',
    p: 30000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'ORGANIC VEGETABLE BROTH W SLIPPERY ELM POWDER',
    p: 28000,
    u: 'glass jar 75 ml',
    c: null,
    s: 0.9
  },
  {
    n: 'TOMATO KETCHUP',
    p: 65000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'CHILLI SAUCE',
    p: 65000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'VEGAN MAYONNAISE DRESSING',
    p: 116000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'THOUSAND ISLAND',
    p: 86000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'MEXICAN SALSA',
    p: 120000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  { n: 'CAESAR', p: 115000, u: 'glass jar 230 gr', c: null, s: 0.9 },
  { n: 'RANCH', p: 127000, u: 'glass jar 230 gr', c: null, s: 0.9 },
  {
    n: 'CHIMICHURRI',
    p: 119000,
    u: 'glass jar 230 gr',
    c: null,
    s: 0.9
  },
  { n: 'Camembert', p: 76000, u: '170 gr', c: null, s: 0.9 },
  { n: 'Smoked Cheddar', p: 81000, u: '220 gr', c: null, s: 0.9 },
  { n: 'Cranberry Chevre', p: 81000, u: '180 gr', c: null, s: 0.9 },
  { n: 'Reaper Jack', p: 64000, u: '340 gr', c: null, s: 0.9 },
  { n: 'Boursin Style', p: 60000, u: '180 gr', c: null, s: 0.9 },
  { n: 'Valencay', p: 82000, u: '180 gr', c: null, s: 0.9 },
  { n: 'Gorgonzola', p: 86000, u: '150 gr', c: null, s: 0.9 },
  {
    n: 'Black Garlic & Pepper.',
    p: 64000,
    u: '155 gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cream Cheese Plain, or Chive & Onion.',
    p: 81000,
    u: '300 gr jar',
    c: null,
    s: 0.9
  },
  { n: 'Mozzarella', p: 55000, u: '300 gr', c: null, s: 0.9 },
  { n: 'Bocconcini', p: 76000, u: '300 gr jar', c: null, s: 0.9 },
  { n: 'Burrata', p: 55000, u: '170 gr', c: null, s: 0.9 },
  { n: 'Salted Butter', p: 61000, u: '250 gr', c: null, s: 0.9 },
  { n: 'Cheese Fondue', p: 120000, u: '380 gr jar', c: null, s: 0.9 }
]
✅ Extracted 38 products
✅ Image 8: 38 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 272 products from 8 images in 90728ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 272 products extracted in 95556ms
 POST /api/upload-unified 200 in 95572ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Cheese work  04_07.pdf (application/pdf, 95539 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Cheese work  04_07.pdf
🔍 PDF extraction starting: Cheese work  04_07.pdf
📄 Step 1: Converting PDF to images: Cheese work  04_07.pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese work  04_07.pdf_page_1.png: ```json
[
  {"n": "Cheese Works - Yogurt Plain 2L", "p": 77500, "u": "2Kg", "c": null, "s": 0.9},
  {"n": "Cheese Works - Yogurt Plain 1L", "p": 45500, "u": "1Kg", "c": null, "s": 0.9},
  {"n": "Chees...
📊 Parsed data: [
  {
    n: 'Cheese Works - Yogurt Plain 2L',
    p: 77500,
    u: '2Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Plain 1L',
    p: 45500,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Plain 100gr',
    p: 6500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Vanilla 2L',
    p: 81500,
    u: '2Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Vanilla 1L',
    p: 50500,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Vanilla 100gr',
    p: 7500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Strawberry 2L',
    p: 81500,
    u: '2Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Strawberry 1L',
    p: 50500,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Strawberry 100gr',
    p: 7500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Mango 2L',
    p: 81500,
    u: '2Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Mango 1L',
    p: 50500,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Mango 100gr',
    p: 7500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Blueberry 2L',
    p: 81500,
    u: '2Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Blueberry 1L',
    p: 50500,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Blueberry 100gr',
    p: 7500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Greek Yogurt Plain',
    p: 100500,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Greek Yogurt Plain',
    p: 55000,
    u: '500gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Greek Yogurt Low Fat (Plain)',
    p: 110000,
    u: '1Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Low Fat Yogurt',
    p: 82500,
    u: '2Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Portion (Plain)',
    p: 11000,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Portion (Varian Rasa)',
    p: 11500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Portion (Low Fat)',
    p: 11500,
    u: '100gr',
    c: null,
    s: 0.9
  },
  {
    n: 'Cheese Works - Yogurt Portion (With Jam)',
    p: 12000,
    u: '100gr',
    c: null,
    s: 0.9
  }
]
✅ Extracted 23 products
✅ Image 1: 23 products extracted by Gemini Flash 2.0
🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese work  04_07.pdf_page_2.png: I am unable to process this image. The image is blank and does not contain any product information that I can extract....
❌ No JSON found in response
✅ Image 2: 0 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 23 products from 2 images in 10869ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 23 products extracted in 11614ms
 POST /api/upload-unified 200 in 11622ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Cheese+Boutique+Menu+2025-compressed.pdf (application/pdf, 3805817 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Cheese+Boutique+Menu+2025-compressed.pdf
🔍 PDF extraction starting: Cheese+Boutique+Menu+2025-compressed.pdf
📄 Step 1: Converting PDF to images: Cheese+Boutique+Menu+2025-compressed.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_1.png: ```json
[]
```...
📊 Parsed data: []
✅ Extracted 0 products
✅ Image 1: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_2.png: I am sorry, but I cannot fulfill that request. The image is blank....
❌ No JSON found in response
✅ Image 2: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_3.png: ```json
[
  {"n": "cheese platter", "p": null, "u": null, "c": null, "s": 0.7},
  {"n": "cheese tasting", "p": null, "u": null, "c": null, "s": 0.7},
  {"n": "Preserve", "p": null, "u": null, "c": nul...
📊 Parsed data: [
  { n: 'cheese platter', p: null, u: null, c: null, s: 0.7 },
  { n: 'cheese tasting', p: null, u: null, c: null, s: 0.7 },
  { n: 'Preserve', p: null, u: null, c: null, s: 0.7 },
  { n: 'Tea', p: null, u: null, c: null, s: 0.7 },
  { n: 'Kombucha', p: null, u: null, c: null, s: 0.7 },
  { n: 'Chocolate', p: null, u: null, c: null, s: 0.7 },
  { n: 'Jamu', p: null, u: null, c: null, s: 0.7 }
]
✅ Extracted 7 products
✅ Image 3: 7 products extracted by Gemini Flash 2.0
🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_4.png: ```json
[]
```...
📊 Parsed data: []
✅ Extracted 0 products
✅ Image 4: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_5.png: ```json
[
  {"n": "Mediteranean Salad", "p": 45000, "u": null, "c": "Salad", "s": 0.9},
  {"n": "Indonesian Salad with Peanut Sauce", "p": 45000, "u": null, "c": "Salad", "s": 0.9},
  {"n": "Tomato & ...
📊 Parsed data: [
  { n: 'Mediteranean Salad', p: 45000, u: null, c: 'Salad', s: 0.9 },
  {
    n: 'Indonesian Salad with Peanut Sauce',
    p: 45000,
    u: null,
    c: 'Salad',
    s: 0.9
  },
  { n: 'Tomato & Cheese Salad', p: 40000, u: null, c: 'Salad', s: 0.9 }
]
✅ Extracted 3 products
✅ Image 5: 3 products extracted by Gemini Flash 2.0
🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_6.png: ```json
[
  {"n": "Chevre & Beetroot Hummus", "p": 60000, "u": null, "c": null, "s": 0.9},
  {"n": "Cheddar & Baba Ghanoush Dips", "p": 60000, "u": null, "c": null, "s": 0.9},
  {"n": "Cheese Fritters...
📊 Parsed data: [
  { n: 'Chevre & Beetroot Hummus', p: 60000, u: null, c: null, s: 0.9 },
  {
    n: 'Cheddar & Baba Ghanoush Dips',
    p: 60000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'Cheese Fritters', p: 55000, u: '6 pcs', c: null, s: 0.9 }
]
✅ Extracted 3 products
✅ Image 6: 3 products extracted by Gemini Flash 2.0
🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_7.png: ```json
[
  {"n": "Chevre & Leek Quiche", "p": 50000.0, "u": null, "c": "Pastry", "s": 0.9},
  {"n": "Croissant With Assorted Cheese", "p": 45000.0, "u": null, "c": "Pastry", "s": 0.9},
  {"n": "Crois...
📊 Parsed data: [
  { n: 'Chevre & Leek Quiche', p: 50000, u: null, c: 'Pastry', s: 0.9 },
  {
    n: 'Croissant With Assorted Cheese',
    p: 45000,
    u: null,
    c: 'Pastry',
    s: 0.9
  },
  {
    n: 'Croissant With Assorted Cheese (without cheese)',
    p: 30000,
    u: null,
    c: 'Pastry',
    s: 0.9
  },
  {
    n: 'Pain Au Chocolat With Cheese',
    p: 55000,
    u: null,
    c: 'Pastry',
    s: 0.9
  },
  {
    n: 'Pain Au Chocolat With Cheese (without cheese)',
    p: 37000,
    u: null,
    c: 'Pastry',
    s: 0.9
  }
]
✅ Extracted 5 products
✅ Image 7: 5 products extracted by Gemini Flash 2.0
🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Cheese+Boutique+Menu+2025-compressed.pdf_page_8.png: ```json
[
  {"n": "Roti Bakar Keju Coklat", "p": 40000, "u": null, "c": null, "s": 0.9}
]
```...
📊 Parsed data: [ { n: 'Roti Bakar Keju Coklat', p: 40000, u: null, c: null, s: 0.9 } ]
✅ Extracted 1 products
✅ Image 8: 1 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 19 products from 8 images in 28963ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 19 products extracted in 31978ms
 POST /api/upload-unified 200 in 31995ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Gloria seafood Bali 03_07.pdf (application/pdf, 881892 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Gloria seafood Bali 03_07.pdf
🔍 PDF extraction starting: Gloria seafood Bali 03_07.pdf
📄 Step 1: Converting PDF to images: Gloria seafood Bali 03_07.pdf
✅ Converted to 6 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Gloria seafood Bali 03_07.pdf_page_1.png: ```json
[]
```...
📊 Parsed data: []
✅ Extracted 0 products
✅ Image 1: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 2/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Gloria seafood Bali 03_07.pdf_page_2.png: ```json
[
  {"n": "Baramundi", "p": 85000, "u": "KG", "c": "Whole Fish", "s": 0.9},
  {"n": "Grouper", "p": 75000, "u": "KG", "c": "Whole Fish", "s": 0.9},
  {"n": "Opaka", "p": 75000, "u": "KG", "c":...
📊 Parsed data: [
  { n: 'Baramundi', p: 85000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'Grouper', p: 75000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'Opaka', p: 75000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'Red Snapper', p: 95000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'White Snapper', p: 85000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'Mahi-Mahi', p: 55000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  {
    n: 'Tasmanian Salmon',
    p: 220000,
    u: 'KG',
    c: 'Whole Fish',
    s: 0.9
  },
  {
    n: 'Norwegian Salmon',
    p: 205000,
    u: 'KG',
    c: 'Whole Fish',
    s: 0.9
  },
  { n: 'Swat fish', p: 58000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'Macarel', p: 90000, u: 'KG', c: 'Whole Fish', s: 0.9 },
  { n: 'Baramundi', p: 125000, u: 'KG', c: 'Fillet Fish', s: 0.9 },
  { n: 'Seabass', p: 125000, u: 'KG', c: 'Fillet Fish', s: 0.9 },
  { n: 'Macarel', p: 125000, u: 'KG', c: 'Fillet Fish', s: 0.9 },
  {
    n: 'White Snapper Skin on',
    p: 145000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  {
    n: 'White Snapper Skin off',
    p: 150000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  {
    n: 'Red Snapper Skin off',
    p: 165000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  {
    n: 'Red Snapper Skin on',
    p: 160000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  {
    n: 'Salmon Tasmania',
    p: 315000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  {
    n: 'Salmon Norway sashimi',
    p: 335000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  {
    n: 'Smoked Salmon 900grm (pack)',
    p: 365000,
    u: 'KG',
    c: 'Fillet Fish',
    s: 0.9
  },
  { n: 'Dori', p: 58000, u: 'KG', c: 'Fillet Fish', s: 0.9 },
  { n: 'Grouper', p: 155000, u: 'KG', c: 'Fillet Fish', s: 0.9 }
]
✅ Extracted 22 products
✅ Image 2: 22 products extracted by Gemini Flash 2.0
🔍 Processing image 3/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Gloria seafood Bali 03_07.pdf_page_3.png: ```json
[
  {"n": "Red Tuna A", "p": 115000.0, "u": null, "c": "Local", "s": 0.9},
  {"n": "Tuna sashimi A", "p": 165000.0, "u": null, "c": "Export", "s": 0.9},
  {"n": "Swordfish / Mika", "p": 85000....
📊 Parsed data: [
  { n: 'Red Tuna A', p: 115000, u: null, c: 'Local', s: 0.9 },
  { n: 'Tuna sashimi A', p: 165000, u: null, c: 'Export', s: 0.9 },
  { n: 'Swordfish / Mika', p: 85000, u: null, c: 'Local', s: 0.9 },
  { n: 'Mahi-Mahi', p: 95000, u: null, c: 'Local', s: 0.9 },
  { n: 'Marlin', p: 85000, u: null, c: 'Local', s: 0.9 },
  {
    n: 'Butter Fish/Gindara A',
    p: 120000,
    u: null,
    c: 'Local',
    s: 0.9
  },
  { n: 'Sarden Butterfly', p: 85000, u: null, c: 'Local', s: 0.9 },
  { n: 'Tuna Saku', p: 125000, u: null, c: 'Local', s: 0.9 },
  {
    n: 'Smoked Salmon Slice 100grm',
    p: 85000,
    u: null,
    c: 'Import',
    s: 0.9
  },
  {
    n: 'Crab Soka/Shoft Shell Non glazing',
    p: 155000,
    u: null,
    c: 'Local',
    s: 0.9
  },
  { n: 'Hamachi', p: 125000, u: null, c: 'Local', s: 0.9 },
  {
    n: 'Tiger Prawn Jumbo 6-10',
    p: 265000,
    u: 'KG',
    c: 'Local',
    s: 0.9
  },
  { n: 'Tiger Prawn10-15', p: 245000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Tiger Prawn15-20', p: 215000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Tiger Prawn20-25', p: 175000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Tiger Prawn25-30', p: 165000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Tiger Prawn30-40', p: 145000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Tiger Prawn40-50', p: 135000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Tiger Prawn50-60', p: 120000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Prawn Vaname 20-25', p: 165000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Prawn Vaname 25-30', p: 150000, u: 'KG', c: 'Local', s: 0.9 },
  { n: 'Prawn Vaname 30-40', p: 130000, u: 'KG', c: 'Local', s: 0.9 }
]
✅ Extracted 22 products
✅ Image 3: 22 products extracted by Gemini Flash 2.0
🔍 Processing image 4/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Gloria seafood Bali 03_07.pdf_page_4.png: ```json
[
  {"n": "Prawn Vaname 40-50", "p": 120000, "u": null, "c": null, "s": 0.9},
  {"n": "Shrimp Vaname 50-60", "p": 110000, "u": null, "c": null, "s": 0.9},
  {"n": "Shrimp Vaname 60-70", "p": 9...
📊 Parsed data: [
  { n: 'Prawn Vaname 40-50', p: 120000, u: null, c: null, s: 0.9 },
  { n: 'Shrimp Vaname 50-60', p: 110000, u: null, c: null, s: 0.9 },
  { n: 'Shrimp Vaname 60-70', p: 95000, u: null, c: null, s: 0.9 },
  { n: 'Shrimp Vaname 70-80', p: 90000, u: null, c: null, s: 0.9 },
  { n: 'King River Prawn 5-7', p: 235000, u: null, c: null, s: 0.9 },
  { n: 'Fresh Prawn Peel 40', p: 190000, u: null, c: null, s: 0.9 },
  { n: 'Fresh Prawn Peel 50', p: 175000, u: null, c: null, s: 0.9 },
  { n: 'Lobster300-5000grm', p: 375000, u: null, c: 'Lobster', s: 0.9 },
  { n: 'Lobster200-300grm', p: 315000, u: null, c: 'Lobster', s: 0.9 },
  { n: 'Lobster 600up', p: 385000, u: null, c: 'Lobster', s: 0.9 },
  {
    n: 'Slipper Lobster 150-250grm',
    p: 165000,
    u: null,
    c: 'Lobster',
    s: 0.9
  },
  { n: 'Baby Squid', p: 85000, u: null, c: 'Squid & Octopus', s: 0.9 },
  {
    n: 'Squid Sotong',
    p: 95000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Calamari / Cumi Manis',
    p: 85000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Cuttle Fish / Cumi Kotak',
    p: 65000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Squid Ink / Tinta Cumi 1500 ML',
    p: 125000,
    u: '1500 ML',
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Calamary Squid Clean',
    p: 150000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Squid Tube import',
    p: 79000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Baby Octopus/Octopus Jamur',
    p: 85000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  },
  {
    n: 'Octopus 1.5up',
    p: 115000,
    u: null,
    c: 'Squid & Octopus',
    s: 0.9
  }
]
✅ Extracted 20 products
✅ Image 4: 20 products extracted by Gemini Flash 2.0
🔍 Processing image 5/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Gloria seafood Bali 03_07.pdf_page_5.png: ```json
[
  {"n": "Crab Super Papua 400-500gr", "p": 185000.0, "u": "KG", "c": null, "s": 0.9},
  {"n": "Crab Medium200-300gr", "p": 175000.0, "u": "KG", "c": null, "s": 0.9},
  {"n": "Salt Crab 150-3...
📊 Parsed data: [
  {
    n: 'Crab Super Papua 400-500gr',
    p: 185000,
    u: 'KG',
    c: null,
    s: 0.9
  },
  { n: 'Crab Medium200-300gr', p: 175000, u: 'KG', c: null, s: 0.9 },
  { n: 'Salt Crab 150-300gr', p: 100000, u: 'KG', c: null, s: 0.9 },
  {
    n: 'Blue Swimmer Crab150-300gr',
    p: 145000,
    u: 'KG',
    c: null,
    s: 0.9
  },
  { n: 'Crab Meat', p: 145000, u: 'KG', c: null, s: 0.9 },
  {
    n: 'Crab Soka/Shoft Shell Crab Glazing',
    p: 145000,
    u: 'KG',
    c: null,
    s: 0.9
  }
]
✅ Extracted 6 products
✅ Image 5: 6 products extracted by Gemini Flash 2.0
🔍 Processing image 6/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Gloria seafood Bali 03_07.pdf_page_6.png: ```json
[
  {"n": "Dara", "p": 40000.0, "u": "KG", "c": "Clam", "s": 0.9},
  {"n": "Manila", "p": 40000.0, "u": "KG", "c": "Clam", "s": 0.9},
  {"n": "Asari", "p": 35000.0, "u": "KG", "c": "Clam", "s"...
📊 Parsed data: [
  { n: 'Dara', p: 40000, u: 'KG', c: 'Clam', s: 0.9 },
  { n: 'Manila', p: 40000, u: 'KG', c: 'Clam', s: 0.9 },
  { n: 'Asari', p: 35000, u: 'KG', c: 'Clam', s: 0.9 },
  { n: 'Oyster', p: 45000, u: 'KG', c: 'Clam', s: 0.9 },
  { n: 'Green Mussel', p: 55000, u: 'KG', c: 'Clam', s: 0.9 },
  {
    n: 'Green Mussel half sell',
    p: 185000,
    u: 'KG',
    c: 'Clam',
    s: 0.9
  },
  {
    n: 'Scallop Half Shell 50-60',
    p: 145000,
    u: 'KG',
    c: 'Clam',
    s: 0.9
  },
  {
    n: 'Scallop full Meat40-60/kg',
    p: 295000,
    u: 'KG',
    c: 'Clam',
    s: 0.9
  },
  {
    n: 'Scallop Full Meat10-20/kg',
    p: 425000,
    u: 'KG',
    c: 'Clam',
    s: 0.9
  },
  { n: 'Black Mussel', p: 145000, u: 'KG', c: 'Clam', s: 0.9 },
  { n: 'Baramundi', p: 135000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'Butter Fish', p: 120000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'Mahi-Mahi', p: 100000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'Tuna', p: 100000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'Red Snapper', p: 165000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'White Snapper', p: 155000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'Salmon', p: 340000, u: 'KG', c: 'Fish Portion', s: 0.9 },
  { n: 'Salmon', p: 290000, u: 'KG', c: 'Fish Portion', s: 0.9 }
]
✅ Extracted 18 products
✅ Image 6: 18 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 88 products from 6 images in 32570ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 88 products extracted in 35011ms
 POST /api/upload-unified 200 in 35024ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Happy farm bali 03_07.pdf (application/pdf, 4126362 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Happy farm bali 03_07.pdf
🔍 PDF extraction starting: Happy farm bali 03_07.pdf
📄 Step 1: Converting PDF to images: Happy farm bali 03_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_1.png: ```json
[
  {"n": "Beef Meat", "p": null, "u": null, "c": null, "s": 0.9},
  {"n": "Fresh Salmon", "p": null, "u": null, "c": null, "s": 0.9},
  {"n": "Fresh Chicken", "p": null, "u": null, "c": null,...
📊 Parsed data: [
  { n: 'Beef Meat', p: null, u: null, c: null, s: 0.9 },
  { n: 'Fresh Salmon', p: null, u: null, c: null, s: 0.9 },
  { n: 'Fresh Chicken', p: null, u: null, c: null, s: 0.9 },
  { n: 'Fresh Seafood', p: null, u: null, c: null, s: 0.9 },
  { n: 'Lamb Meat', p: null, u: null, c: null, s: 0.9 },
  { n: 'Frozen Veggie', p: null, u: null, c: null, s: 0.9 }
]
✅ Extracted 6 products
✅ Image 1: 6 products extracted by Gemini Flash 2.0
🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_2.png: ```json
[
  {"n": "Topside Wagyu Australia", "p": 200000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Chuck Tenderloin", "p": 145000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Tomahawk Australia", "p"...
📊 Parsed data: [
  {
    n: 'Topside Wagyu Australia',
    p: 200000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  { n: 'Chuck Tenderloin', p: 145000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tomahawk Australia', p: 425000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Sirloin Australia', p: 230000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Sirloin Steak Australia',
    p: 235000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  { n: 'Short Ribs Australia', p: 155000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tenderloin Australia', p: 350000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Tenderloin Steak Australia',
    p: 365000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  { n: 'Rump Cap/Picanha', p: 300000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Eye Australia', p: 290000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Rib Eye Steak Australia',
    p: 300000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  { n: 'Rump Australia', p: 160000, u: '/Kg', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 2: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_3.png: ```json
[
  {"n": "Minced Beef Grade S", "p": 120000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Minced Beef Grade A", "p": 105000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Minced Beef Grade B", "p"...
📊 Parsed data: [
  { n: 'Minced Beef Grade S', p: 120000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Minced Beef Grade A', p: 105000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Minced Beef Grade B', p: 95000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tenderloin India', p: 175000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Shortplate Ausy Slice', p: 155000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Boneless/Rib Blade', p: 145000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Sirloin India', p: 125000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Full Meat/Sirloin Slice',
    p: 150000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  { n: 'Brisket NE', p: 165000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Topside India', p: 120000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Shortplate US Slice', p: 185000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Shortplate US', p: 170000, u: '/Kg', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 3: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_4.png: ```json
[
  {"n": "T-Bone Steak", "p": 250000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Center Cut Oxtail Import", "p": 250000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Oxtail Import", "p": 240000...
📊 Parsed data: [
  { n: 'T-Bone Steak', p: 250000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Center Cut Oxtail Import',
    p: 250000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  { n: 'Oxtail Import', p: 240000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Saikoro Saka Meltique', p: 170000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Paru Import', p: 110000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Beef Fat Import', p: 65000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Sirloin Meltique Saka\nGrade Red Prime',
    p: 200000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Tenderloin Meltique Saka\nGrade Red Prime',
    p: 200000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Rib Eye Meltique Saka\nGrade Red Prime',
    p: 200000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Sirloin Meltique Saka\nGrade Golden Prime',
    p: 220000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Tenderloin Meltique Saka\nGrade Golden Prime',
    p: 220000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Rib Eye Meltique Saka\nGrade Golden Prime',
    p: 220000,
    u: '/Kg',
    c: null,
    s: 0.9
  }
]
✅ Extracted 12 products
✅ Image 4: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_5.png: ```json
[
  {"n": "Cheek Meat", "p": 135000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Lidah Sapi", "p": 140000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Iga Lokal", "p": 120000, "u": "/Kg", "c": n...
📊 Parsed data: [
  { n: 'Cheek Meat', p: 135000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lidah Sapi', p: 140000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Iga Lokal', p: 120000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Buntut Lokal', p: 125000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tenderloin Lokal', p: 175000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Sirloin Lokal', p: 170000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Daging D1', p: 145000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Daging Sengkel Lokal', p: 130000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tulang Sengkel', p: 25000, u: '/Pcs', c: null, s: 0.9 },
  { n: 'Tulang Kaldu Sapi', p: 45000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Hati Sapi', p: 85000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tetelan Daging Sapi', p: 125000, u: '/Kg', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 5: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_6.png: ```json
[
  {"n": "Tenderloin Wagyu", "p": null, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Sirloin Wagyu Mb 2-3", "p": null, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Rib Eye Wagyu", "p": null, "u":...
📊 Parsed data: [
  { n: 'Tenderloin Wagyu', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Sirloin Wagyu Mb 2-3', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Eye Wagyu', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tenderloin New Zealand', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Sirloin New Zealand', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Eye New Zealand', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tenderloin Brazil', p: 265000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Topside Brazil', p: 150000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Eye Brazil', p: 185000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Eye Grade Prime US', p: 785000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Sirloin Angus US', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Rib Eye Grade MSA', p: 440000, u: '/Kg', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 6: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_7.png: ```json
[
  {"n": "Lamb Leg Bone In", "p": 170000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Lamb Leg Boneless", "p": 230000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Lamb Rack", "p": null, "u": "/...
📊 Parsed data: [
  { n: 'Lamb Leg Bone In', p: 170000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Leg Boneless', p: 230000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Rack', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Shoulder Bone In', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Shoulder Boneless', p: 245000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Chop', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Shank', p: 160000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Mutton Carcase', p: 135000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Mutton Rack', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Loin', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Lamb Loin Chop', p: null, u: '/Kg', c: null, s: 0.9 },
  { n: 'Minced Lamb', p: 250000, u: '/Kg', c: null, s: 0.9 }
]
✅ Extracted 12 products
✅ Image 7: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Happy farm bali 03_07.pdf_page_8.png: ```json
[
  {"n": "Dori Fillet Premium", "p": 50000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Cumi Tube Import", "p": 85000, "u": "/Kg", "c": null, "s": 0.9},
  {"n": "Cumi Ring", "p": 85000, "u": "...
📊 Parsed data: [
  { n: 'Dori Fillet Premium', p: 50000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Cumi Tube Import', p: 85000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Cumi Ring', p: 85000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Scallop Jepang', p: 990000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Scallop US (2,27 Kg)', p: 440000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Cumi Flower', p: 85000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tuna Loin', p: 130000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tuna Saku', p: 150000, u: '/Kg', c: null, s: 0.9 },
  { n: 'Tuna Steak', p: 150000, u: '/Kg', c: null, s: 0.9 },
  {
    n: 'Tuna Loin Sashimi Grade',
    p: 190000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Tuna Saku Sashimi Grade',
    p: 275000,
    u: '/Kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Tuna Steak Sushimi Grade',
    p: 230000,
    u: '/Kg',
    c: null,
    s: 0.9
  }
]
✅ Extracted 12 products
✅ Image 8: 12 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 90 products from 8 images in 50892ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 90 products extracted in 54513ms
 POST /api/upload-unified 200 in 54527ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
 POST /api/upload-unified 400 in 27ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
 POST /api/upload-unified 400 in 37ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Milk up 04_07.pdf (application/pdf, 2455136 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Milk up 04_07.pdf
🔍 PDF extraction starting: Milk up 04_07.pdf
📄 Step 1: Converting PDF to images: Milk up 04_07.pdf
✅ Converted to 6 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Milk up 04_07.pdf_page_1.png: ```json
[
  {"n": "mascarpone cheese bar in chocolate", "p": null, "u": "70g", "c": null, "s": 0.9},
  {"n": "mascarpone cheese bar in chocolate", "p": null, "u": "70g", "c": null, "s": 0.9},
  {"n": ...
📊 Parsed data: [
  {
    n: 'mascarpone cheese bar in chocolate',
    p: null,
    u: '70g',
    c: null,
    s: 0.9
  },
  {
    n: 'mascarpone cheese bar in chocolate',
    p: null,
    u: '70g',
    c: null,
    s: 0.9
  },
  {
    n: 'mascarpone cheese bar in chocolate',
    p: null,
    u: '70g',
    c: null,
    s: 0.9
  },
  {
    n: 'mascarpone cheese bar in chocolate',
    p: null,
    u: '70g',
    c: null,
    s: 0.9
  },
  {
    n: 'mascarpone cheese bar in chocolate',
    p: null,
    u: '70g',
    c: null,
    s: 0.9
  }
]
✅ Extracted 5 products
✅ Image 1: 5 products extracted by Gemini Flash 2.0
🔍 Processing image 2/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Milk up 04_07.pdf_page_2.png: ```json
[
  {"n": "FRENCH YOGURT", "p": 104000, "u": "1000ML", "c": null, "s": 0.9},
  {"n": "COCONUT YOGURT", "p": 120000, "u": "1000ML", "c": null, "s": 0.9},
  {"n": "PLAIN CREAM CHEESE", "p": 1830...
📊 Parsed data: [
  { n: 'FRENCH YOGURT', p: 104000, u: '1000ML', c: null, s: 0.9 },
  { n: 'COCONUT YOGURT', p: 120000, u: '1000ML', c: null, s: 0.9 },
  { n: 'PLAIN CREAM CHEESE', p: 183000, u: '1KG', c: null, s: 0.9 },
  {
    n: 'PLAIN MASCARPONE CREAM CHEESE',
    p: 210000,
    u: '1KG',
    c: null,
    s: 0.9
  },
  { n: 'COCONUT MILK PLANT-BASED', p: 59000, u: null, c: null, s: 0.9 },
  { n: 'PLAIN YOGURT', p: 50000, u: '1000ML', c: null, s: 0.9 },
  { n: 'GREEK YOGURT', p: 132000, u: '1000ML', c: null, s: 0.9 },
  {
    n: 'FULL CREAM (suitable\nfor whipping)',
    p: 117000,
    u: '1000ML',
    c: null,
    s: 0.9
  },
  { n: 'COTTAGE CHEESE', p: 85000, u: '500 gr', c: null, s: 0.9 },
  { n: 'COTTAGE CHEESE', p: 170000, u: '1KG', c: null, s: 0.9 },
  { n: 'SOUR CREAM', p: 105000, u: '1000ML', c: null, s: 0.9 },
  { n: 'GOAT YOGURT', p: 102000, u: '1000ML', c: null, s: 0.9 },
  { n: 'SYRNIKI 12 PCS,', p: 120000, u: '640GR', c: null, s: 0.9 },
  { n: 'BEEF DUMPLINGS,', p: 88000, u: '500GR', c: null, s: 0.9 },
  { n: 'CHICKEN DUMPLINGS,', p: 76000, u: '500GR', c: null, s: 0.9 },
  { n: 'KEFIR IL', p: 49000, u: '1000ML', c: null, s: 0.9 }
]
✅ Extracted 16 products
✅ Image 2: 16 products extracted by Gemini Flash 2.0
🔍 Processing image 3/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Milk up 04_07.pdf_page_3.png: ```json
[
  {"n": "MANGO YOGURT", "p": 36000, "u": "330ML", "c": null, "s": 0.9},
  {"n": "RASPBERRY YOGURT", "p": 36000, "u": "330ML", "c": null, "s": 0.9},
  {"n": "STRAWBERRY YOGURT", "p": 36000, "...
📊 Parsed data: [
  { n: 'MANGO YOGURT', p: 36000, u: '330ML', c: null, s: 0.9 },
  { n: 'RASPBERRY YOGURT', p: 36000, u: '330ML', c: null, s: 0.9 },
  { n: 'STRAWBERRY YOGURT', p: 36000, u: '330ML', c: null, s: 0.9 },
  { n: 'BLUEBERRY YOGURT', p: 44000, u: '330ML', c: null, s: 0.9 },
  {
    n: 'VANILLA CHIA & FLAX\nSEEDS YOGURT',
    p: 34400,
    u: '330ML',
    c: null,
    s: 0.9
  },
  {
    n: 'COCONUT CHIA &\nFLAX SEEDS YOGURT',
    p: 44800,
    u: '330ML',
    c: null,
    s: 0.9
  },
  { n: 'PASSION FRUIT YOGURT', p: 34400, u: '330ML', c: null, s: 0.9 },
  { n: 'CHOCOLATE YOGURT', p: 34400, u: '330ML', c: null, s: 0.9 },
  { n: 'FRESH MILK, GLASS 650ML', p: 36000, u: null, c: null, s: 0.9 },
  { n: 'RAW MILK COW, GLASS', p: 35200, u: '650ML', c: null, s: 0.9 },
  { n: 'RAW MILK GOAT, GLASS', p: 44800, u: '650ML', c: null, s: 0.9 },
  {
    n: 'FRESH MILK 950ML, PLASTIC',
    p: 29000,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'RAW MILK COW, PLASTIC', p: 29600, u: '950ML', c: null, s: 0.9 },
  {
    n: 'RAW MILK GOAT, PLASTIC',
    p: 52800,
    u: '950ML',
    c: null,
    s: 0.9
  }
]
✅ Extracted 14 products
✅ Image 3: 14 products extracted by Gemini Flash 2.0
🔍 Processing image 4/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Milk up 04_07.pdf_page_4.png: ```json
[
  {"n": "MANGO CARDAMOM", "p": 46400, "u": "350ML", "c": null, "s": 0.9},
  {"n": "SAFFRON ROSE", "p": 38400, "u": "350ML", "c": null, "s": 0.9},
  {"n": "INDIAN MASALA", "p": 34400, "u": "3...
📊 Parsed data: [
  { n: 'MANGO CARDAMOM', p: 46400, u: '350ML', c: null, s: 0.9 },
  { n: 'SAFFRON ROSE', p: 38400, u: '350ML', c: null, s: 0.9 },
  { n: 'INDIAN MASALA', p: 34400, u: '350ML', c: null, s: 0.9 },
  { n: 'KEFIR 350ML, GLASS (cow)', p: 32000, u: null, c: null, s: 0.9 },
  {
    n: 'GENTLE KEFIR, 350ML, GLASS',
    p: 26400,
    u: null,
    c: null,
    s: 0.9
  },
  { n: 'KEFIR 650ML, GLASS (cow)', p: 34400, u: null, c: null, s: 0.9 },
  { n: 'GOAT KEFIR 650ML, GLASS', p: 44000, u: null, c: null, s: 0.9 },
  {
    n: 'PROBIOTIC SLIM, GLASS,',
    p: 34400,
    u: '350ML',
    c: null,
    s: 0.9
  },
  { n: 'GOAT KEFIR 350ML, GLASS', p: 31200, u: null, c: null, s: 0.9 },
  {
    n: 'PLAIN CREAM CHEESE,',
    p: 46400,
    u: 'GLASS, 230GR',
    c: null,
    s: 0.9
  },
  {
    n: 'LOW-SALT CREAM CHEESE,',
    p: 51200,
    u: 'GLASS, 230GR',
    c: null,
    s: 0.9
  },
  {
    n: 'DILL CREAM CHEESE,',
    p: 56000,
    u: 'GLASS, 230GR',
    c: null,
    s: 0.9
  },
  {
    n: 'PAPRIKA CREAM CHEESE,',
    p: 56000,
    u: 'GLASS, 230GR',
    c: null,
    s: 0.9
  }
]
✅ Extracted 13 products
✅ Image 4: 13 products extracted by Gemini Flash 2.0
🔍 Processing image 5/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Milk up 04_07.pdf_page_5.png: ```json
[
  {"n": "PLAIN MASCARPONE CREAM, PLASTIC CONTAINER", "p": 52000, "u": null, "c": "DESSERT", "s": 0.9},
  {"n": "RAISIN MASCARPONE CREAM, PLASTIC CONTAINER", "p": 60000, "u": null, "c": "DESS...
📊 Parsed data: [
  {
    n: 'PLAIN MASCARPONE CREAM, PLASTIC CONTAINER',
    p: 52000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'RAISIN MASCARPONE CREAM, PLASTIC CONTAINER',
    p: 60000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'SWEET MASCARPONE CREAM, PLASTIC CONTAINER',
    p: 52000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'MASCARPONE CHEESE BAR, VANILLA, 3 PCS, 210GR',
    p: 73000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'MASCARPONE CHEESE BAR, CHOCO, 3 PCS, 210GR',
    p: 86000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'MASCARPONE CHEESE BAR, MATCHA, 3 PCS, 210GR',
    p: 86000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'MASCARPONE CHEESE BAR, VANILLA, BOX, 70GR',
    p: 37000,
    u: null,
    c: 'DESSERT',
    s: 0.9
  },
  {
    n: 'MASCARPONE CHEESE BAR, CHOCO, BOX, 70GR',
    p: null,
    u: null,
    c: 'DESSERT',
    s: 0.7
  },
  {
    n: 'MASCARPONE CHEESE BAR, MATCHA, BOX, 70GR',
    p: null,
    u: null,
    c: 'DESSERT',
    s: 0.7
  },
  {
    n: 'APPLE CINNAMON, 9 PCS, 650-700GR, VEGAN',
    p: 115000,
    u: null,
    c: 'CREPES',
    s: 0.9
  },
  {
    n: 'SWEET RICOTTA, 9 PCS, 650-700GR',
    p: 120000,
    u: null,
    c: 'CREPES',
    s: 0.9
  },
  {
    n: 'DILL CREAM CHEESE & PARSLEY, 9 PCS, 650-700GR',
    p: 130000,
    u: null,
    c: 'CREPES',
    s: 0.9
  },
  {
    n: 'COOKONUTS DULCE DE LECHE COOKIES, 8 PCS',
    p: 49000,
    u: null,
    c: 'COOKIES',
    s: 0.9
  },
  {
    n: 'COOKONUTS COCONUT CARAMEL COOKIES, (VEGAN) 8 PCS',
    p: 54000,
    u: null,
    c: 'COOKIES',
    s: 0.9
  }
]
✅ Extracted 14 products
✅ Image 5: 14 products extracted by Gemini Flash 2.0
🔍 Processing image 6/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for Milk up 04_07.pdf_page_6.png: ```json
[
  {"n": "PLAIN RICOTTA CAKE", "p": 95000, "u": null, "c": "CAKES", "s": 0.9},
  {"n": "PEAR POUND CAKE", "p": 72000, "u": null, "c": "CAKES", "s": 0.9},
  {"n": "RAISIN RICOTTA CAKE", "p": 1...
📊 Parsed data: [
  { n: 'PLAIN RICOTTA CAKE', p: 95000, u: null, c: 'CAKES', s: 0.9 },
  { n: 'PEAR POUND CAKE', p: 72000, u: null, c: 'CAKES', s: 0.9 },
  { n: 'RAISIN RICOTTA CAKE', p: 100000, u: null, c: 'CAKES', s: 0.9 },
  { n: 'GREEK YOGURT, 330ML,', p: 86000, u: null, c: 'YOGURT', s: 0.9 },
  { n: 'GOAT YOGURT, 330ML,', p: 49000, u: null, c: 'YOGURT', s: 0.9 },
  {
    n: 'GREEK YOGURT, 500ML GLASS',
    p: 99000,
    u: null,
    c: 'YOGURT',
    s: 0.9
  },
  {
    n: 'FRENCH YOGURT, 100ML, GLASS',
    p: 28000,
    u: null,
    c: 'YOGURT',
    s: 0.9
  },
  {
    n: 'COCONUT YOGURT, 330ML,',
    p: 61000,
    u: null,
    c: 'YOGURT',
    s: 0.9
  },
  {
    n: 'PLAIN YOGURT, 330ML, GLASS',
    p: 38000,
    u: null,
    c: 'YOGURT',
    s: 0.9
  },
  { n: 'PLAIN YOGURT, 400ML,', p: 31000, u: null, c: 'YOGURT', s: 0.9 },
  { n: 'SKIM YOGURT, 400ML,', p: 48000, u: null, c: 'YOGURT', s: 0.9 },
  {
    n: 'COTTAGE CHEESE, 400GR,',
    p: 99000,
    u: null,
    c: 'CHEESE',
    s: 0.9
  },
  {
    n: 'COTTAGE CHEESE, 250GR,',
    p: 66000,
    u: null,
    c: 'CHEESE',
    s: 0.9
  },
  {
    n: 'FAT FREE-COTTAGE CHEESE,',
    p: 152000,
    u: null,
    c: 'CHEESE',
    s: 0.9
  },
  {
    n: 'LITTLE COTTAGE CHEESE',
    p: 54000,
    u: null,
    c: 'CHEESE',
    s: 0.9
  }
]
✅ Extracted 15 products
✅ Image 6: 15 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 77 products from 6 images in 38551ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 77 products extracted in 42797ms
 POST /api/upload-unified 200 in 42809ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: PT Gioa cheese 04_07.pdf (application/pdf, 343112 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: PT Gioa cheese 04_07.pdf
🔍 PDF extraction starting: PT Gioa cheese 04_07.pdf
📄 Step 1: Converting PDF to images: PT Gioa cheese 04_07.pdf
✅ Converted to 1 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/1 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Gioa cheese 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT Gioa cheese 04_07.pdf_page_1.png: ```json
[
  {"n": "Ciliegini", "p": 245000, "u": "gr", "c": "Fresh Varieties", "s": 0.9},
  {"n": "Bocconcini", "p": 224000, "u": "gr", "c": "Fresh Varieties", "s": 0.9},
  {"n": "Mozzarella", "p": 22...
📊 Parsed data: [
  { n: 'Ciliegini', p: 245000, u: 'gr', c: 'Fresh Varieties', s: 0.9 },
  { n: 'Bocconcini', p: 224000, u: 'gr', c: 'Fresh Varieties', s: 0.9 },
  { n: 'Mozzarella', p: 224000, u: 'gr', c: 'Fresh Varieties', s: 0.9 },
  {
    n: 'Mozzarella for Pizza',
    p: 185000,
    u: 'kg',
    c: 'Fresh Varieties',
    s: 0.9
  },
  {
    n: 'Stracciatella',
    p: 290000,
    u: 'gr',
    c: 'Fresh Varieties',
    s: 0.9
  },
  { n: 'Burrata', p: 300000, u: 'gr', c: 'Fresh Varieties', s: 0.9 },
  { n: 'Burratina', p: 310000, u: 'gr', c: 'Fresh Varieties', s: 0.9 },
  {
    n: 'Cherry Burrata',
    p: 315000,
    u: 'gr',
    c: 'Fresh Varieties',
    s: 0.9
  },
  {
    n: 'Burrata @80gr',
    p: 330000,
    u: '80gr',
    c: 'Fresh Varieties',
    s: 0.9
  },
  {
    n: 'Burrata Mignon',
    p: 500000,
    u: '50gr',
    c: 'Fresh Varieties',
    s: 0.9
  },
  {
    n: 'Truffle Burrata 125gr',
    p: 355000,
    u: 'gr',
    c: 'Fresh Varieties',
    s: 0.9
  },
  {
    n: 'Truffle Burrata 100gr',
    p: 360000,
    u: 'gr',
    c: 'Fresh Varieties',
    s: 0.9
  },
  { n: 'Ricotta', p: 105000, u: 'kg', c: 'Fresh Varieties', s: 0.9 },
  {
    n: 'Fresh Goat Cheese (Caprino)',
    p: 330000,
    u: 'kg',
    c: 'Fresh Varieties',
    s: 0.9
  },
  { n: 'Halloumi', p: 200000, u: 'gr', c: null, s: 0.9 },
  { n: 'Mascarpone', p: 230000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Asiatico (3-6 months aged)',
    p: 265000,
    u: 'kg',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Asiatico Chilly',
    p: 280000,
    u: 'kg',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Asiatico Rosemarry',
    p: 280000,
    u: 'kg',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Caciotta',
    p: 245000,
    u: '350gr',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Caciotta Truffle',
    p: 320000,
    u: '350gr',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Saporito',
    p: 315000,
    u: '2 kg',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Scamorza',
    p: 265000,
    u: '2 kg',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Smoked Scamorza',
    p: 285000,
    u: '2 kg',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Tomi Black Pepper',
    p: 265000,
    u: '500 gr',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  {
    n: 'Fontina',
    p: 250000,
    u: '200 gr',
    c: 'Seasoned Varieties',
    s: 0.9
  },
  { n: 'Brie', p: 320000, u: 'gr', c: null, s: 0.9 },
  {
    n: 'Goat Cheese (Crottin de Chavignol)',
    p: 420000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Drunken Cheese', p: 430000, u: '2 kg', c: null, s: 0.9 },
  { n: 'Pecorino', p: 450000, u: '2 kg', c: null, s: 0.9 },
  { n: 'Pecorino Truffle', p: 550000, u: '2 kg', c: null, s: 0.9 }
]
✅ Extracted 31 products
✅ Image 1: 31 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 31 products from 1 images in 12057ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 31 products extracted in 13262ms
 POST /api/upload-unified 200 in 13275ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: PT Raja boga 04_07.pdf (application/pdf, 507563 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: PT Raja boga 04_07.pdf
🔍 PDF extraction starting: PT Raja boga 04_07.pdf
📄 Step 1: Converting PDF to images: PT Raja boga 04_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT Raja boga 04_07.pdf_page_1.png: ```json
[
  {"n": "Belly Skin on/Samcam Kulit", "p": 125000, "u": "kg", "c": null, "s": 0.9},
  {"n": "Belly Skin Off/Samcam Tanpa Kulit", "p": 125000, "u": "kg", "c": null, "s": 0.9},
  {"n": "Belly ...
📊 Parsed data: [
  {
    n: 'Belly Skin on/Samcam Kulit',
    p: 125000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Belly Skin Off/Samcam Tanpa Kulit',
    p: 125000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Belly BK Skin On', p: 110000, u: 'kg', c: null, s: 0.9 },
  { n: 'Belly BK Skin Off', p: 110000, u: 'kg', c: null, s: 0.9 },
  { n: 'Iga Utuh', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Spare Ribs/Iga', p: 120000, u: 'kg', c: null, s: 0.9 },
  { n: 'Baby Back/Iga', p: 120000, u: 'kg', c: null, s: 0.9 },
  { n: 'Kapsin Tanpa Kulit', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Kapsin Kulit', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Karbonat/Loin Kulit', p: 115000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Karbonat/ Loin Tanpa Kulit',
    p: 115000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  { n: 'Fillet/Has Dalam', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Bagen', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Karkas Belah 6', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Karkas Belah 2', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Daging BK', p: 110000, u: 'kg', c: null, s: 0.9 },
  { n: 'Daging Partingan', p: 115000, u: 'kg', c: null, s: 0.9 },
  { n: 'Iga BK', p: 95000, u: 'kg', c: null, s: 0.9 },
  { n: 'Usus Besar', p: 35000, u: 'kg', c: null, s: 0.9 },
  { n: 'Usus Kecil', p: 35000, u: 'kg', c: null, s: 0.9 },
  { n: 'Kerongkongan', p: 35000, u: 'kg', c: null, s: 0.9 },
  { n: 'Leher', p: 95000, u: 'kg', c: null, s: 0.9 },
  {
    n: 'Babi Guling / Babi Utuh Bersih',
    p: 260000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Rack/Whole Chop / Pork Chop',
    p: 120000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Daging Paha Depan Utuh Kulit',
    p: 110000,
    u: 'kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Daging Paha Depan Utuh Tanpa Kulit',
    p: 110000,
    u: 'kg',
    c: null,
    s: 0.9
  }
]
✅ Extracted 26 products
✅ Image 1: 26 products extracted by Gemini Flash 2.0
🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT Raja boga 04_07.pdf_page_2.png: ```json
[
  {"n": "Daging Paha Belakang Utuh Kulit", "p": 110000, "u": "7-10 kg", "c": null, "s": 0.9},
  {"n": "Daging Paha Belakang Utuh Tanpa Kulit", "p": 110000, "u": "2-3 kg", "c": null, "s": 0.9...
📊 Parsed data: [
  {
    n: 'Daging Paha Belakang Utuh Kulit',
    p: 110000,
    u: '7-10 kg',
    c: null,
    s: 0.9
  },
  {
    n: 'Daging Paha Belakang Utuh Tanpa Kulit',
    p: 110000,
    u: '2-3 kg',
    c: null,
    s: 0.9
  },
  { n: 'Kaki Utuh Belakang', p: 85000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'Tulang Babi / Pork Bone/Punggung',
    p: 40000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'Tulang Paha / Sengkel', p: 35000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Kulit Punggung', p: 75000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'Kulit Paha Depan/Belakang',
    p: 75000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'Kulit Tipis', p: 60000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Tetelan Daging', p: 50000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Hati Babi', p: 40000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Paru Babi', p: 35000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Jantung Babi', p: 35000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Ginjal Babi', p: 35000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Limpa Babi', p: 35000, u: '1 kg', c: null, s: 0.9 },
  {
    n: 'Lemak Minyak Babi Cair / Lemak Sari',
    p: 30000,
    u: '1 kg',
    c: null,
    s: 0.9
  },
  { n: 'Lemak Padat', p: 90000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Tito Babi', p: 40000, u: '1 kg', c: null, s: 0.9 },
  { n: 'Kepala Babi', p: 40000, u: '5-6 kg', c: null, s: 0.9 },
  { n: 'Knuckle Depan', p: 85000, u: '1-1.3 kg', c: null, s: 0.9 },
  { n: 'Knuckle Belakang', p: 85000, u: '1.2-2.4 kg', c: null, s: 0.9 },
  { n: 'Kaki Utuh Depan', p: 70000, u: '0.8-1 kg', c: null, s: 0.9 },
  { n: 'Kaki Utuh Belakag', p: 70000, u: '0.8-1 kg', c: null, s: 0.9 },
  { n: 'Kikil / Trotter', p: 75000, u: '0.3-0.5 kg', c: null, s: 0.9 }
]
✅ Extracted 23 products
✅ Image 2: 23 products extracted by Gemini Flash 2.0
🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT Raja boga 04_07.pdf_page_3.png: ```json
[
  {"n": "Pork Ribs Cut 5cm x 5cm", "p": 140000, "u": "kg", "c": "PORK CUTTING", "s": 0.9},
  {"n": "Pork Belly Slices 2mm", "p": 180000, "u": "kg", "c": "PORK CUTTING", "s": 0.9},
  {"n": "P...
📊 Parsed data: [
  {
    n: 'Pork Ribs Cut 5cm x 5cm',
    p: 140000,
    u: 'kg',
    c: 'PORK CUTTING',
    s: 0.9
  },
  {
    n: 'Pork Belly Slices 2mm',
    p: 180000,
    u: 'kg',
    c: 'PORK CUTTING',
    s: 0.9
  },
  {
    n: 'Pork Belly Slices 4mm',
    p: 180000,
    u: 'kg',
    c: 'PORK CUTTING',
    s: 0.9
  },
  {
    n: 'Pork Kapsin Slices',
    p: 150000,
    u: 'kg',
    c: 'PORK CUTTING',
    s: 0.9
  },
  {
    n: 'Pork Chop Slices',
    p: 140000,
    u: 'kg',
    c: 'PORK CUTTING',
    s: 0.9
  },
  {
    n: 'Pork Minced/Daging Giling',
    p: 100000,
    u: 'kg',
    c: 'PORK CUTTING',
    s: 0.9
  },
  { n: 'Kaki Potong', p: 95000, u: 'kg', c: 'PORK CUTTING', s: 0.9 }
]
✅ Extracted 7 products
✅ Image 3: 7 products extracted by Gemini Flash 2.0
🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT Raja boga 04_07.pdf_page_4.png: ```json
[
  {"n": "Pork Bacon Sliced", "p": 120000, "u": "kg", "c": "PORK PROCESSING MEAT", "s": 0.9},
  {"n": "Pork Bacon Sliced", "p": 63500, "u": "500 gr", "c": "PORK PROCESSING MEAT", "s": 0.9},
 ...
📊 Parsed data: [
  {
    n: 'Pork Bacon Sliced',
    p: 120000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Bacon Sliced',
    p: 63500,
    u: '500 gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Ham Sliced',
    p: 113000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Ham Sliced',
    p: 60000,
    u: '500gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Lapchiong',
    p: 157000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Lapchiong',
    p: 82000,
    u: '500 gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Nuernberger Sosis',
    p: 69000,
    u: '500 gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Breakfast Sosis',
    p: 118000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Fiesta Breakfast Sosis',
    p: 92000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Fiesta Breakfast Sosis',
    p: 49000,
    u: '500 gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Meatball/ Bakso Babi',
    p: 87500,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Streaky Bacon',
    p: 176000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Streaky Bacon',
    p: 91000,
    u: '500 gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Brawtwurst Sosis',
    p: 125000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Bangers',
    p: 136000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Beef Pepperoni',
    p: 182000,
    u: 'kg',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  },
  {
    n: 'Pork Spanish Chorizo Sosis',
    p: 66000,
    u: '500 gr',
    c: 'PORK PROCESSING MEAT',
    s: 0.9
  }
]
✅ Extracted 17 products
✅ Image 4: 17 products extracted by Gemini Flash 2.0
🎉 PDF→Images→Gemini Flash 2.0 completed: 73 products from 4 images in 25991ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 73 products extracted in 27313ms
 POST /api/upload-unified 200 in 27324ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: PT pangan lestari 04_07.pdf (application/pdf, 4839860 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: PT pangan lestari 04_07.pdf
🔍 PDF extraction starting: PT pangan lestari 04_07.pdf
📄 Step 1: Converting PDF to images: PT pangan lestari 04_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT pangan lestari 04_07.pdf_page_1.png: ```json
[]
```...
📊 Parsed data: []
✅ Extracted 0 products
✅ Image 1: 0 products extracted by Gemini Flash 2.0
🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT pangan lestari 04_07.pdf_page_2.png: ```json
[
  {"n": "DVG CLASSIC - CARAMEL", "p": 119000, "u": "1 Botol (750ml)", "c": null, "s": 0.9},
  {"n": "DVG CLASSIC - HAZELNUT", "p": 119000, "u": "1 Botol (750ml)", "c": null, "s": 0.9},
  {"n...
📊 Parsed data: [
  {
    n: 'DVG CLASSIC - CARAMEL',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG CLASSIC - HAZELNUT',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG CLASSIC - VANILLA',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FLORAL - ROSE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG HERBACEOUS - SPICED CHAI',
    p: 136000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG HERBACEOUS - PANDAN',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG HERBACEOUS - PUMPKIN SPICE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG NUTTY - ROASTED ALMOND',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG NUTTY - MACADAMIA NUT',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG NUTTY - PECAN PRALINE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUITY - FRAGRANT LYCHEE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUITY - BANANA CREAM',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  }
]
✅ Extracted 12 products
✅ Image 2: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT pangan lestari 04_07.pdf_page_3.png: ```json
[
  {"n": "DVG FRUITY - BLUEBERRY", "p": 119000, "u": "1 Botol (750ml)", "c": null, "s": 0.9},
  {"n": "DVG FRUITY - COCONUT", "p": 119000, "u": "1 Botol (750ml)", "c": null, "s": 0.9},
  {"n"...
📊 Parsed data: [
  {
    n: 'DVG FRUITY - BLUEBERRY',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUITY - COCONUT',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUITY - BLUE SKY',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - BLUE OCEAN',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - DRY BITTER ORANGE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - EUROPEAN STRAWBERRY',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - GREEN APPLE CAMPAGNA',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - GRENADINE POMEGRANATE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - MAJESTIC MANGO',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - MENTA CUBANO',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - PEACH GARDEN',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - RASPBERRY RHAPSODY',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  }
]
✅ Extracted 12 products
✅ Image 3: 12 products extracted by Gemini Flash 2.0
🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT pangan lestari 04_07.pdf_page_4.png: ```json
[
  {"n": "DVG TRUE TO FRUIT - FOREST BERRIES", "p": 119000, "u": "1 Botol (750ml)", "c": null, "s": 0.9},
  {"n": "DVG TRUE TO FRUIT - TROPICAL PASSIONFRUIT", "p": 119000, "u": "1 Botol (750m...
📊 Parsed data: [
  {
    n: 'DVG TRUE TO FRUIT - FOREST BERRIES',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - TROPICAL PASSIONFRUIT',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG TRUE TO FRUIT - PINK GUAVA',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG LUXURY DESSERT - SHORTBREAD COOKIES',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG LUXURY DESSERT - FRENCH VANILLA',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG LUXURY DESSERT - CARIBBEAN',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG LUXURY DESSERT - WHITE CHOCOLATE',
    p: 119000,
    u: '1 Botol (750ml)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - WHITE CHOCOLATE',
    p: 243000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - MADAGASCAR VANILLA BEAN',
    p: 300000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - CHEESECAKE',
    p: 252000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - CHOCOLATE',
    p: 276000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - CARAMEL',
    p: 238000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - BUTTERSCOTCH',
    p: 238000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - SALTED CARAMEL',
    p: 238000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG SAUCE - PANDAN',
    p: 138000,
    u: '1 Botol (1 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUIT MIXES - MANGO',
    p: 204000,
    u: '1 Botol (1 L)',
    c: null,
    s: 0.9
  }
]
✅ Extracted 16 products
✅ Image 4: 16 products extracted by Gemini Flash 2.0
🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT pangan lestari 04_07.pdf_page_5.png: ```json
[
  {"n": "DVG FRUIT MIXES - PASSION FRUIT", "p": 204000, "u": "1 Botol (1 L)", "c": null, "s": 0.9},
  {"n": "DVG FRUIT MIXES - MIXED BERRY", "p": 204000, "u": "1 Botol (1 L)", "c": null, "s"...
📊 Parsed data: [
  {
    n: 'DVG FRUIT MIXES - PASSION FRUIT',
    p: 204000,
    u: '1 Botol (1 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUIT MIXES - MIXED BERRY',
    p: 204000,
    u: '1 Botol (1 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG FRUIT MIXES - STRAWBERRY',
    p: 204000,
    u: '1 Botol (1 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG CONCENTRATE - LEMONADE',
    p: 176000,
    u: '1 Botol (1 L)',
    c: null,
    s: 0.9
  },
  {
    n: 'DVG BEVERAGE BASES - FLAVOUR MAXX',
    p: 205000,
    u: '1 Botol (2 L)',
    c: null,
    s: 0.9
  }
]
✅ Extracted 5 products
✅ Image 5: 5 products extracted by Gemini Flash 2.0
🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
🔍 Parsing Gemini response for PT pangan lestari 04_07.pdf_page_6.png: ```json
[
  {"n": "WAFFLE MIX", "p": 53419, "u": "1 Bag (1 Kg)", "c": null, "s": 0.9},
  {"n": "KARAAGE MIX", "p": 53558, "u": "1 Bag (1 Kg)", "c": null, "s": 0.9},
  {"n": "BREADER MIX", "p": 74231, ...
📊 Parsed data: [
  { n: 'WAFFLE MIX', p: 53419, u: '1 Bag (1 Kg)', c: null, s: 0.9 },
  { n: 'KARAAGE MIX', p: 53558, u: '1 Bag (1 Kg)', c: null, s: 0.9 },
  { n: 'BREADER MIX', p: 74231, u: '1 Bag (1 Kg)', c: null, s: 0.9 },
  {
    n: 'CAKE MIX (SOFT MOCHI)',
    p: 90881,
    u: '1 Bag (1 Kg)',
    c: null,
    s: 0.9
  },
  {
    n: 'DONUT MIX (MOCHI DONUT)',
    p: 71456,
    u: '1 Bag (1 Kg)',
    c: null,
    s: 0.9
  },
  {
    n: 'DONUT MIX (PON DE QUEIJO)',
    p: 90881,
    u: '1 Bag (1 Kg)',
    c: null,
    s: 0.9
  },
  {
    n: 'Mini Pao | 408Gr Cokelat',
    p: 12000,
    u: '1 Pack (isi 24 pcs)',
    c: null,
    s: 0.9
  },
  {
    n: 'Mini Pao | 408Gr Ayam Rendang',
    p: 12000,
    u: '1 Pack (isi 24 pcs)',
    c: null,
    s: 0.9
  },
  {
    n: 'Mini Pao | 408Gr Ayam Kecap',
    p: 12000,
    u: '1 Pack (isi 24 pcs)',
    c: null,
    s: 0.9
  },
  { n: 'MIXED VEGETABLES', p: 21860, u: '1 Kg', c: null, s: 0.9 },
  { n: 'MIXED VEGETABLES', p: 10990, u: '500 Gr', c: null, s: 0.9 },
  { n: 'FROZEN PEAS', p: 25460, u: '1 Kg', c: null, s: 0.9 },
  { n: 'FROZEN PEAS', p: 12790, u: '500 Gr', c: null, s: 0.9 },
  { n: 'CORN KERNEL', p: 22720, u: '1 Kg', c: null, s: 0.9 },
  { n: 'CORN KERNEL', p: 11420, u: '500 Gr', c: null, s: 0.9 }
]
✅ Extracted 15 products
✅ Image 6: 15 products extracted by Gemini Flash 2.0
🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 60 products from 8 images in 34283ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 60 products extracted in 39627ms
 POST /api/upload-unified 200 in 39646ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
 POST /api/upload-unified 400 in 14ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: PT.Bali boga sejati 03_07.pdf (application/pdf, 667826 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: PT.Bali boga sejati 03_07.pdf
🔍 PDF extraction starting: PT.Bali boga sejati 03_07.pdf
📄 Step 1: Converting PDF to images: PT.Bali boga sejati 03_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "17s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "17s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "16s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "16s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "15s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "15s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "14s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "14s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "13s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "13s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "12s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "12s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "11s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "11s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "10s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "10s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 11424ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 12754ms
 POST /api/upload-unified 200 in 12765ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: PT.Pasti enak 03_07.pdf (application/pdf, 85197 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: PT.Pasti enak 03_07.pdf
🔍 PDF extraction starting: PT.Pasti enak 03_07.pdf
📄 Step 1: Converting PDF to images: PT.Pasti enak 03_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "3s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "3s"
      }
    ]
  }
}

🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "0s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "0s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 4 images in 5957ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 6621ms
 POST /api/upload-unified 200 in 6627ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: SAI FRESH 03_07.pdf (application/pdf, 1227019 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: SAI FRESH 03_07.pdf
🔍 PDF extraction starting: SAI FRESH 03_07.pdf
📄 Step 1: Converting PDF to images: SAI FRESH 03_07.pdf
✅ Converted to 3 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "51s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "51s"
      }
    ]
  }
}

🔍 Processing image 2/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "50s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "50s"
      }
    ]
  }
}

🔍 Processing image 3/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 3 images in 6890ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 8442ms
 POST /api/upload-unified 200 in 8450ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Siap Bali 03_07.pdf (application/pdf, 125524 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Siap Bali 03_07.pdf
🔍 PDF extraction starting: Siap Bali 03_07.pdf
📄 Step 1: Converting PDF to images: Siap Bali 03_07.pdf
✅ Converted to 1 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/1 with Gemini Flash 2.0...
[UnifiedGemini] Processing Siap Bali 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 1 images in 2466ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 3431ms
 POST /api/upload-unified 200 in 3440ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: oz britts 2 04_07.pdf (application/pdf, 730075 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: oz britts 2 04_07.pdf
🔍 PDF extraction starting: oz britts 2 04_07.pdf
📄 Step 1: Converting PDF to images: oz britts 2 04_07.pdf
✅ Converted to 3 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing oz britts 2 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "34s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "34s"
      }
    ]
  }
}

🔍 Processing image 2/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing oz britts 2 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "33s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "33s"
      }
    ]
  }
}

🔍 Processing image 3/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing oz britts 2 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "32s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "32s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 3 images in 5456ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 7024ms
 POST /api/upload-unified 200 in 7034ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: seven choice_PT satria pangan sejati 04_07.pdf (application/pdf, 742118 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: seven choice_PT satria pangan sejati 04_07.pdf
🔍 PDF extraction starting: seven choice_PT satria pangan sejati 04_07.pdf
📄 Step 1: Converting PDF to images: seven choice_PT satria pangan sejati 04_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "20s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "20s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "19s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "19s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "17s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "17s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 10685ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 12097ms
 POST /api/upload-unified 200 in 12106ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: shy cow 04_07.pdf (application/pdf, 665176 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: shy cow 04_07.pdf
🔍 PDF extraction starting: shy cow 04_07.pdf
📄 Step 1: Converting PDF to images: shy cow 04_07.pdf
✅ Converted to 7 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "8s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "8s"
      }
    ]
  }
}

🔍 Processing image 2/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "7s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "7s"
      }
    ]
  }
}

🔍 Processing image 3/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

🔍 Processing image 4/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "5s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "5s"
      }
    ]
  }
}

🔍 Processing image 5/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "4s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "4s"
      }
    ]
  }
}

🔍 Processing image 6/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "3s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "3s"
      }
    ]
  }
}

🔍 Processing image 7/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 7 images in 10188ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 11693ms
 POST /api/upload-unified 200 in 11701ms
 GET /api/upload-unified 200 in 4ms
 GET /api/upload-unified 200 in 3ms
[UnifiedUpload] Processing upload request
[UnifiedUpload] Strategy: auto Model: gemini-2.0-flash-exp MaxProducts: 1000
[UnifiedUpload] Processing file: Cheese work  04_07.pdf (application/pdf, 95539 bytes)
[UnifiedUpload] Using enhancedPdfExtractor for PDF: Cheese work  04_07.pdf
🔍 PDF extraction starting: Cheese work  04_07.pdf
📄 Step 1: Converting PDF to images: Cheese work  04_07.pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "30s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "30s"
      }
    ]
  }
}

🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async POST (app/api/upload-unified/route.ts:97:15)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "29s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 2 images in 3424ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
[UnifiedUpload] Success: 0 products extracted in 4164ms
 POST /api/upload-unified 200 in 4168ms
🚀 Async upload endpoint called
📁 Processing file: Cheese work  04_07.pdf (0.09MB)
🔄 Uploading to Blob Storage: Cheese work  04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%20work%20%2004_07-ZHYHhqrkJfE80ozbDwBE4Fi5MQtLOE.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxd9au00c1ou875kgvavdb with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%20work%20%2004_07-ZHYHhqrkJfE80ozbDwBE4Fi5MQtLOE.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxd9au00c1ou875kgvavdb
🚀 Enhanced processing starting for upload: cmcpxd9au00c1ou875kgvavdb
🔍 PDF extraction starting: Cheese work  04_07.pdf
📄 Step 1: Converting PDF to images: Cheese work  04_07.pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 2 images in 2809ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxd9au00c1ou875kgvavdb - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxd9au00c1ou875kgvavdb
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 4671ms
🚀 Async upload endpoint called
📁 Processing file: Widi Wiguna 03_07.xlsx (0.08MB)
🔄 Uploading to Blob Storage: Widi Wiguna 03_07.xlsx
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Widi%20Wiguna%2003_07-Lh9sObYL7ho6MMn5mjdmGwiDNkLiTT.xlsx
💾 Creating upload record in database
✅ Upload record created: cmcpxgc1g00c4ou87zzhhmrz0 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Widi%20Wiguna%2003_07-Lh9sObYL7ho6MMn5mjdmGwiDNkLiTT.xlsx
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxgc1g00c4ou87zzhhmrz0
🚀 Enhanced processing starting for upload: cmcpxgc1g00c4ou87zzhhmrz0
🔍 Enhanced Excel extraction starting: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed with array type, trying with buffer type: Bad compressed size: 65895 != 1179258880
⚠️ XLSX library failed, trying ExcelJS fallback: Bad compressed size: 65895 != 1179258880
✅ ExcelJS fallback successful
📊 ExcelJS: Processing file with 3 worksheets
📄 Processing ExcelJS worksheet: "Sheet1"
   📋 Worksheet "Sheet1": 242 non-empty rows
   📋 Sheet structure: name=1, price=3, unit=2, dataStart=4
   🔬 Sheet structure: {
  nameColumn: 1,
  priceColumn: 3,
  unitColumn: 2,
  categoryColumn: -1,
  dataStartRow: 4,
  headerRow: 3
}
   📊 Extraction complete: 215 products from 215/242 rows
   ✅ ExcelJS worksheet "Sheet1" processed: 215 products extracted
📄 Processing ExcelJS worksheet: "Sheet2"
   📋 Worksheet "Sheet2": 0 non-empty rows
   ⚠️ Skipping worksheet "Sheet2": too few rows
📄 Processing ExcelJS worksheet: "Sheet3"
   📋 Worksheet "Sheet3": 0 non-empty rows
   ⚠️ Skipping worksheet "Sheet3": too few rows
✅ Enhanced extraction completed: Widi Wiguna 03_07.xlsx
   📊 Rows: 215/242 (88.8%)
   🛍️ Products: 215
   📄 Sheets: 1
   ⏱️ Time: 827ms
   💰 Cost: $0.0000
🔍 Validating 215 extracted products...
📊 Price validation summary:
   Valid: 215/215
   Warnings: 21
   Errors: 0
   Average confidence: 97.9%
   Price distribution:
     < 10k: 18
     10k-100k: 170
     100k-1M: 27
     > 1M: 0
🏢 Processing supplier: "Widi"
   📞 Phone: Not provided
   📧 Email: Not provided
   📍 Address: Not provided
✅ Found existing supplier: cmc06ue2h0407s2kl56ch1jso
📝 Supplier detection: "Widi" → using cmc06ue2h0407s2kl56ch1jso
📦 Processing 215 valid products...
⚡ Skipping AI standardization: disabled or 215 products > 200 limit
📊 Grouped 215 products into 214 unique products
🔄 Price already exists for ares, skipping duplicate
🔄 Price already exists for asparagus, skipping duplicate
🔄 Price already exists for bean sprout long, skipping duplicate
🔄 Price already exists for bean green, skipping duplicate
🔄 Price already exists for bean green baby, skipping duplicate
🔄 Price already exists for bean long, skipping duplicate
🔄 Price already exists for bean red kacang buncis, skipping duplicate
🔄 Price already exists for bean red kacang tolo, skipping duplicate
🔄 Price already exists for bean sprout super, skipping duplicate
🔄 Price already exists for beet root, skipping duplicate
🔄 Price already exists for bongkot, skipping duplicate
🔄 Price already exists for brocoly import, skipping duplicate
🔄 Price already exists for cabbage chinese, skipping duplicate
🔄 Price already exists for cabbage red, skipping duplicate
🔄 Price already exists for cabbage white, skipping duplicate
🔄 Price already exists for caisin, skipping duplicate
🔄 Price already exists for capsicum green, skipping duplicate
🔄 Price already exists for capsicum red, skipping duplicate
🔄 Price already exists for capsicum yelow, skipping duplicate
🔄 Price already exists for carrot impot, skipping duplicate
🔄 Price already exists for carrot lokal, skipping duplicate
🔄 Price already exists for cauly flower, skipping duplicate
🔄 Price already exists for celery, skipping duplicate
🔄 Price already exists for chilly green big, skipping duplicate
🔄 Price already exists for chilly red big, skipping duplicate
🔄 Price already exists for chily small green, skipping duplicate
🔄 Price already exists for chily small red, skipping duplicate
🔄 Price already exists for chives, skipping duplicate
🔄 Price already exists for coconut clean, skipping duplicate
🔄 Price already exists for coconut grated, skipping duplicate
🔄 Price already exists for coconut old, skipping duplicate
🔄 Price already exists for coconut yellow, skipping duplicate
🔄 Price already exists for coconut young, skipping duplicate
🔄 Price already exists for corn baby, skipping duplicate
🔄 Price already exists for corn sweet, skipping duplicate
🔄 Price already exists for corn whole local, skipping duplicate
🔄 Price already exists for cucumber japanese, skipping duplicate
🔄 Price already exists for cucumber local, skipping duplicate
🔄 Price already exists for egg plant long, skipping duplicate
🔄 Price already exists for egg plant round, skipping duplicate
🔄 Price already exists for galangal, skipping duplicate
🔄 Price already exists for banana leaf, skipping duplicate
🔄 Price already exists for coconut leaf, skipping duplicate
🔄 Price already exists for garlic clean, skipping duplicate
🔄 Price already exists for garlic whole, skipping duplicate
🔄 Price already exists for ginger, skipping duplicate
🔄 Price already exists for gondo, skipping duplicate
🔄 Price already exists for jack fuit young, skipping duplicate
🔄 Price already exists for kangkung akar, skipping duplicate
🔄 Price already exists for kecicang, skipping duplicate
🔄 Price already exists for kemangi leaf, skipping duplicate
🔄 Price already exists for kencur, skipping duplicate
🔄 Price already exists for labu siam, skipping duplicate
🔄 Price already exists for leek, skipping duplicate
🔄 Price already exists for lemen leaf, skipping duplicate
🔄 Price already exists for lemo bali, skipping duplicate
🔄 Price already exists for lemon grass, skipping duplicate
🔄 Price already exists for mushroom botton, skipping duplicate
🔄 Price already exists for mushroom oyster, skipping duplicate
🔄 Price already exists for mushroom shitake, skipping duplicate
🔄 Price already exists for onion red bombay merah, skipping duplicate
🔄 Price already exists for onion spring, skipping duplicate
🔄 Price already exists for onion white large, skipping duplicate
🔄 Price already exists for pakis, skipping duplicate
🔄 Price already exists for pandan leaf, skipping duplicate
🔄 Price already exists for parsley, skipping duplicate
🔄 Price already exists for pepaya young local, skipping duplicate
🔄 Price already exists for pok coy, skipping duplicate
🔄 Price already exists for potato big, skipping duplicate
🔄 Price already exists for potato small, skipping duplicate
🔄 Price already exists for potato sweet, skipping duplicate
🔄 Price already exists for pumkin, skipping duplicate
🔄 Price already exists for salam leaf, skipping duplicate
🔄 Price already exists for shalot clean, skipping duplicate
🔄 Price already exists for singkong leaf, skipping duplicate
🔄 Price already exists for spinach akar, skipping duplicate
🔄 Price already exists for spinach lokal, skipping duplicate
🔄 Price already exists for suji leaf, skipping duplicate
🔄 Price already exists for tahu, skipping duplicate
🔄 Price already exists for tamarin, skipping duplicate
🔄 Price already exists for tempe, skipping duplicate
🔄 Price already exists for tomato tw, skipping duplicate
🔄 Price already exists for tomato cerry red, skipping duplicate
🔄 Price already exists for turmeric, skipping duplicate
🔄 Price already exists for turnip, skipping duplicate
🔄 Price already exists for ubi kayu, skipping duplicate
🔄 Price already exists for water crass, skipping duplicate
🔄 Price already exists for zukini green, skipping duplicate
🔄 Price already exists for apple fuji, skipping duplicate
🔄 Price already exists for apple green smith, skipping duplicate
🔄 Price already exists for apple manalagi, skipping duplicate
🔄 Price already exists for apple red import, skipping duplicate
🔄 Price already exists for avocado, skipping duplicate
🔄 Price already exists for banana green, skipping duplicate
🔄 Price already exists for banana kayu, skipping duplicate
🔄 Price already exists for banana mas, skipping duplicate
🔄 Price already exists for banana raja, skipping duplicate
🔄 Price already exists for banana kepok, skipping duplicate
🔄 Price already exists for banana calvadish, skipping duplicate
🔄 Price already exists for bangkuang, skipping duplicate
🔄 Price already exists for buah naga, skipping duplicate
🔄 Price already exists for grape black local, skipping duplicate
🔄 Price already exists for grape red import, skipping duplicate
🔄 Price already exists for grape green import, skipping duplicate
🔄 Price already exists for guava, skipping duplicate
🔄 Price already exists for honey melon white, skipping duplicate
🔄 Price already exists for honey melon red, skipping duplicate
🔄 Price already exists for jack fruit old clean, skipping duplicate
🔄 Price already exists for kiwi, skipping duplicate
🔄 Price already exists for kelengkeng, skipping duplicate
🔄 Price already exists for lime, skipping duplicate
🔄 Price already exists for mangga masak, skipping duplicate
🔄 Price already exists for mangga rujak, skipping duplicate
🔄 Price already exists for orange lokal, skipping duplicate
🔄 Price already exists for pamelo, skipping duplicate
🔄 Price already exists for papaya tw, skipping duplicate
🔄 Price already exists for passion fruit asam, skipping duplicate
🔄 Price already exists for pineapple, skipping duplicate
🔄 Price already exists for pear hijau, skipping duplicate
🔄 Price already exists for pear kuning biasa, skipping duplicate
🔄 Price already exists for salak pondoh, skipping duplicate
🔄 Price already exists for salak bali, skipping duplicate
🔄 Price already exists for strawberry grade a, skipping duplicate
🔄 Price already exists for sunkist, skipping duplicate
🔄 Price already exists for jeruk slayer, skipping duplicate
🔄 Price already exists for tangerine lumajang, skipping duplicate
🔄 Price already exists for tangerine kintamani, skipping duplicate
🔄 Price already exists for water melon yellow, skipping duplicate
🔄 Price already exists for water melon non seed, skipping duplicate
🔄 Price already exists for herb arigano, skipping duplicate
🔄 Price already exists for herb basil, skipping duplicate
🔄 Price already exists for herb coriander leave, skipping duplicate
🔄 Price already exists for herb dill, skipping duplicate
🔄 Price already exists for herb marjoran, skipping duplicate
🔄 Price already exists for herb mint, skipping duplicate
🔄 Price already exists for herb rosmery, skipping duplicate
🔄 Price already exists for herb sage, skipping duplicate
🔄 Price already exists for herb taragon, skipping duplicate
🔄 Price already exists for herb theme, skipping duplicate
🔄 Price already exists for lettuce bater, skipping duplicate
🔄 Price already exists for lettuce green, skipping duplicate
🔄 Price already exists for lettuce ice berg, skipping duplicate
🔄 Price already exists for lettuce loroloso, skipping duplicate
🔄 Price already exists for lettuce mix, skipping duplicate
🔄 Price already exists for lettuce prizse mizuna, skipping duplicate
🔄 Price already exists for lettuce radichio, skipping duplicate
🔄 Price already exists for lettuce red, skipping duplicate
🔄 Price already exists for lettuce roket rocola, skipping duplicate
🔄 Price already exists for lettuce romaine baby, skipping duplicate
🔄 Price already exists for wail rucola, skipping duplicate
🔄 Price already exists for kacang polong frozen, skipping duplicate
🔄 Price already exists for bihun jagung bijag, skipping duplicate
🔄 Price already exists for salad oil, skipping duplicate
🔄 Price already exists for oyster sauce, skipping duplicate
🔄 Price already exists for sesame oil, skipping duplicate
🔄 Price already exists for fish gravy, skipping duplicate
🔄 Price already exists for cuka dixi, skipping duplicate
🔄 Price already exists for arak masak, skipping duplicate
🔄 Price already exists for honey bloosom, skipping duplicate
🔄 Price already exists for kecap asin, skipping duplicate
🔄 Price already exists for kecap manis abc, skipping duplicate
🔄 Price already exists for garam dolphin, skipping duplicate
🔄 Price already exists for sugar sachet, skipping duplicate
🔄 Price already exists for brown sugar sachet, skipping duplicate
🔄 Price already exists for teh sariwangi 50pc, skipping duplicate
🔄 Price already exists for baking powder, skipping duplicate
🔄 Price already exists for tabasco 60ml, skipping duplicate
🔄 Price already exists for tepung segitiga biru, skipping duplicate
🔄 Price already exists for tepung cakra, skipping duplicate
🔄 Price already exists for tepung maizena, skipping duplicate
🔄 Price already exists for santan kara 1ltr, skipping duplicate
🔄 Price already exists for milk uht, skipping duplicate
🔄 Price already exists for fresh milk grenfields, skipping duplicate
🔄 Price already exists for permifan, skipping duplicate
🔄 Price already exists for best clink wraf besar, skipping duplicate
🔄 Price already exists for tusuk gigi portion, skipping duplicate
🔄 Price already exists for bread crump, skipping duplicate
🔄 Price already exists for krupuk udang fina, skipping duplicate
🔄 Price already exists for plastik 1kg, skipping duplicate
🔄 Price already exists for permipan, skipping duplicate
🔄 Price already exists for demi glace, skipping duplicate
🔄 Price already exists for mika for break fast box, skipping duplicate
🔄 Price already exists for break fast box, skipping duplicate
🔄 Price already exists for agar agar swallow, skipping duplicate
🔄 Price already exists for dijon mustard, skipping duplicate
🔄 Price already exists for oregano dry 200gr, skipping duplicate
🔄 Price already exists for beras putri sejati, skipping duplicate
🔄 Price already exists for tepung cakra kembar, skipping duplicate
🔄 Price already exists for minyak goreng 18 ltr, skipping duplicate
🔄 Price already exists for gula merah, skipping duplicate
🔄 Price already exists for gula pasir import, skipping duplicate
🔄 Price already exists for kacang hijau, skipping duplicate
🔄 Price already exists for kacang tanah, skipping duplicate
🔄 Price already exists for kacang kapri, skipping duplicate
🔄 Price already exists for kemiri, skipping duplicate
🔄 Price already exists for ketan hitam, skipping duplicate
🔄 Price already exists for ketan putih siem, skipping duplicate
🔄 Price already exists for ketumbar seed, skipping duplicate
🔄 Price already exists for merica bubuk, skipping duplicate
🔄 Price already exists for merica hitam utuh, skipping duplicate
🔄 Price already exists for merica putih utuh, skipping duplicate
🔄 Price already exists for mie telor atom bulan, skipping duplicate
🔄 Price already exists for telur ayam, skipping duplicate
🔄 Price already exists for ikan teribang, skipping duplicate
🔄 Price already exists for ikan pindang, skipping duplicate
🔄 Price already exists for tepung ketan, skipping duplicate
🔄 Price already exists for krupuk bawang, skipping duplicate
🔄 Price already exists for terasi bonang, skipping duplicate
🔄 Price already exists for shalot fried bawang goreng, skipping duplicate
🔄 Price already exists for wijen, skipping duplicate
🔄 Price already exists for jinten, skipping duplicate
🔄 Price already exists for krupuk pelangi, skipping duplicate
🔄 Price already exists for cendol, skipping duplicate
🔄 Price already exists for krupuk ingke, skipping duplicate
🎉 Successfully processed 0 products
📋 Processing Log: cmcpxgc1g00c4ou87zzhhmrz0 - completed_with_errors - 0.888 completeness
✅ Enhanced processing completed: cmcpxgc1g00c4ou87zzhhmrz0
   📊 Completeness: 88.8%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 19351ms
🚀 Async upload endpoint called
📁 Processing file: Berkah laut 03_07.jpg (0.15MB)
🔄 Uploading to Blob Storage: Berkah laut 03_07.jpg
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Berkah%20laut%2003_07-XkAXRXuw6pHTteevzlNM2NIY7PYTJo.jpg
💾 Creating upload record in database
✅ Upload record created: cmcpxgsoh00c7ou87fx2nvtzd with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Berkah%20laut%2003_07-XkAXRXuw6pHTteevzlNM2NIY7PYTJo.jpg
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxgsoh00c7ou87fx2nvtzd
🚀 Enhanced processing starting for upload: cmcpxgsoh00c7ou87fx2nvtzd
🖼️ Processing image with optimizations: Berkah laut 03_07.jpg
📊 Original image size: 0.15MB
✨ Optimized image size: 0.14MB (1.07x compression)
❌ Optimized image processing failed: SyntaxError: Unterminated string in JSON at position 6454 (line 315 column 23)
    at JSON.parse (<anonymous>)
    at parse (app/services/optimizedImageProcessor.ts:273:22)
    at async OptimizedImageProcessor.processImage (app/services/optimizedImageProcessor.ts:111:24)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:151:28)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  271 |     cleanContent = cleanContent.replace(/^```(?:json)?\s*/i, '').replace(/\s*```$/i, '');
  272 |     
> 273 |     const data = JSON.parse(cleanContent);
      |                      ^
  274 |     
  275 |     // Track token usage
  276 |     const tokensUsed = response.usage?.total_tokens || 0;
⚠️ No valid products to process
📋 Processing Log: cmcpxgsoh00c7ou87fx2nvtzd - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxgsoh00c7ou87fx2nvtzd
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 27971ms
🚀 Async upload endpoint called
📁 Processing file: local parts butcher shop 03_07.jpg (0.10MB)
🔄 Uploading to Blob Storage: local parts butcher shop 03_07.jpg
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/local%20parts%20butcher%20shop%2003_07-yxApwoSFyawM6yE1I3XjuzyjJpj9fS.jpg
💾 Creating upload record in database
✅ Upload record created: cmcpxhgbv00caou87yu8el8il with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/local%20parts%20butcher%20shop%2003_07-yxApwoSFyawM6yE1I3XjuzyjJpj9fS.jpg
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxhgbv00caou87yu8el8il
🚀 Enhanced processing starting for upload: cmcpxhgbv00caou87yu8el8il
🖼️ Processing image with optimizations: local parts butcher shop 03_07.jpg
📊 Original image size: 0.10MB
✨ Optimized image size: 0.12MB (0.81x compression)
❌ Optimized image processing failed: SyntaxError: Unterminated string in JSON at position 6664 (line 339 column 32)
    at JSON.parse (<anonymous>)
    at parse (app/services/optimizedImageProcessor.ts:273:22)
    at async OptimizedImageProcessor.processImage (app/services/optimizedImageProcessor.ts:111:24)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:151:28)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  271 |     cleanContent = cleanContent.replace(/^```(?:json)?\s*/i, '').replace(/\s*```$/i, '');
  272 |     
> 273 |     const data = JSON.parse(cleanContent);
      |                      ^
  274 |     
  275 |     // Track token usage
  276 |     const tokensUsed = response.usage?.total_tokens || 0;
⚠️ No valid products to process
📋 Processing Log: cmcpxhgbv00caou87yu8el8il - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxhgbv00caou87yu8el8il
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 25852ms
🚀 Async upload endpoint called
📁 Processing file: PT.Pasti enak 03_07.pdf (0.08MB)
🔄 Uploading to Blob Storage: PT.Pasti enak 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT.Pasti%20enak%2003_07-W4wdnjtPAPERGaU5S4mavAHA5XAGpW.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxi2l600cdou87ibkaffmk with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT.Pasti%20enak%2003_07-W4wdnjtPAPERGaU5S4mavAHA5XAGpW.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxi2l600cdou87ibkaffmk
🚀 Enhanced processing starting for upload: cmcpxi2l600cdou87ibkaffmk
🔍 PDF extraction starting: PT.Pasti enak 03_07.pdf
📄 Step 1: Converting PDF to images: PT.Pasti enak 03_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "33s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "33s"
      }
    ]
  }
}

🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "32s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "32s"
      }
    ]
  }
}

🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "31s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "31s"
      }
    ]
  }
}

🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Pasti enak 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "30s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "30s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 4 images in 6669ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxi2l600cdou87ibkaffmk - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxi2l600cdou87ibkaffmk
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 7910ms
🚀 Async upload endpoint called
📁 Processing file: Cheese work  04_07.pdf (0.09MB)
🔄 Uploading to Blob Storage: Cheese work  04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%20work%20%2004_07-tBXkYcSkx6pMToddqNGPivLmcXQt8B.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxib1g00cgou87kbuult11 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%20work%20%2004_07-tBXkYcSkx6pMToddqNGPivLmcXQt8B.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxib1g00cgou87kbuult11
🚀 Enhanced processing starting for upload: cmcpxib1g00cgou87kbuult11
🔍 PDF extraction starting: Cheese work  04_07.pdf
📄 Step 1: Converting PDF to images: Cheese work  04_07.pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 2 images in 2911ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxib1g00cgou87kbuult11 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxib1g00cgou87kbuult11
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 4247ms
🚀 Async upload endpoint called
📁 Processing file: Siap Bali 03_07.pdf (0.12MB)
🔄 Uploading to Blob Storage: Siap Bali 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Siap%20Bali%2003_07-wFwyIRo7JBdX8VXzE0uIoqrRWdRGMT.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxigq500cjou8720zt98ac with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Siap%20Bali%2003_07-wFwyIRo7JBdX8VXzE0uIoqrRWdRGMT.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxigq500cjou8720zt98ac
🚀 Enhanced processing starting for upload: cmcpxigq500cjou8720zt98ac
🔍 PDF extraction starting: Siap Bali 03_07.pdf
📄 Step 1: Converting PDF to images: Siap Bali 03_07.pdf
✅ Converted to 1 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/1 with Gemini Flash 2.0...
[UnifiedGemini] Processing Siap Bali 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "16s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "16s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 1 images in 2335ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxigq500cjou8720zt98ac - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxigq500cjou8720zt98ac
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 3722ms
🚀 Async upload endpoint called
📁 Processing file: PT Gioa cheese 04_07.pdf (0.33MB)
🔄 Uploading to Blob Storage: PT Gioa cheese 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT%20Gioa%20cheese%2004_07-vn9cHrr3zZftqsEpDwkyohM4E3DYML.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxily400cmou87b7bioq4q with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT%20Gioa%20cheese%2004_07-vn9cHrr3zZftqsEpDwkyohM4E3DYML.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxily400cmou87b7bioq4q
🚀 Enhanced processing starting for upload: cmcpxily400cmou87b7bioq4q
🔍 PDF extraction starting: PT Gioa cheese 04_07.pdf
📄 Step 1: Converting PDF to images: PT Gioa cheese 04_07.pdf
✅ Converted to 1 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/1 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Gioa cheese 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "9s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "9s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 1 images in 2479ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxily400cmou87b7bioq4q - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxily400cmou87b7bioq4q
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 3938ms
🚀 Async upload endpoint called
📁 Processing file: AF Seafood 03_07.pdf (0.41MB)
🔄 Uploading to Blob Storage: AF Seafood 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/AF%20Seafood%2003_07-7FinslVqEF7QeTcxzoE6bv4B7OAO5f.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxirko00cpou87mehk2avi with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/AF%20Seafood%2003_07-7FinslVqEF7QeTcxzoE6bv4B7OAO5f.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxirko00cpou87mehk2avi
🚀 Enhanced processing starting for upload: cmcpxirko00cpou87mehk2avi
🔍 PDF extraction starting: AF Seafood 03_07.pdf
📄 Step 1: Converting PDF to images: AF Seafood 03_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "0s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "0s"
      }
    ]
  }
}

🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 4 images in 5417ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxirko00cpou87mehk2avi - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxirko00cpou87mehk2avi
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 7193ms
🚀 Async upload endpoint called
📁 Processing file: PT Raja boga 04_07.pdf (0.48MB)
🔄 Uploading to Blob Storage: PT Raja boga 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT%20Raja%20boga%2004_07-xFks5yVAyQeoclAwJYdwoHfUa9kimt.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxizea00csou87amsljclg with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT%20Raja%20boga%2004_07-xFks5yVAyQeoclAwJYdwoHfUa9kimt.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxizea00csou87amsljclg
🚀 Enhanced processing starting for upload: cmcpxizea00csou87amsljclg
🔍 PDF extraction starting: PT Raja boga 04_07.pdf
📄 Step 1: Converting PDF to images: PT Raja boga 04_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "51s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "51s"
      }
    ]
  }
}

🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "50s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "50s"
      }
    ]
  }
}

🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT Raja boga 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "48s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "48s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 4 images in 5650ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxizea00csou87amsljclg - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxizea00csou87amsljclg
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 7409ms
🚀 Async upload endpoint called
📁 Processing file: 0z britts 1 04_07.pdf (0.60MB)
🔄 Uploading to Blob Storage: 0z britts 1 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/0z%20britts%201%2004_07-BOHAlMmvsk86dLsMaHAnzKMtndEQYN.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxj7lv00cvou872elpgx74 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/0z%20britts%201%2004_07-BOHAlMmvsk86dLsMaHAnzKMtndEQYN.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxj7lv00cvou872elpgx74
🚀 Enhanced processing starting for upload: cmcpxj7lv00cvou872elpgx74
🔍 PDF extraction starting: 0z britts 1 04_07.pdf
📄 Step 1: Converting PDF to images: 0z britts 1 04_07.pdf
✅ Converted to 5 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "40s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "40s"
      }
    ]
  }
}

🔍 Processing image 2/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "39s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "39s"
      }
    ]
  }
}

🔍 Processing image 3/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

🔍 Processing image 4/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

🔍 Processing image 5/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing 0z britts 1 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "36s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "36s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 5 images in 7435ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxj7lv00cvou872elpgx74 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxj7lv00cvou872elpgx74
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 9406ms
🚀 Async upload endpoint called
📁 Processing file: shy cow 04_07.pdf (0.63MB)
🔄 Uploading to Blob Storage: shy cow 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/shy%20cow%2004_07-nFZ4Hpsg0eRRjLnyrJpzQNYtoWsmpX.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxjhj700cyou87cfr3gx6p with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/shy%20cow%2004_07-nFZ4Hpsg0eRRjLnyrJpzQNYtoWsmpX.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxjhj700cyou87cfr3gx6p
🚀 Enhanced processing starting for upload: cmcpxjhj700cyou87cfr3gx6p
🔍 PDF extraction starting: shy cow 04_07.pdf
📄 Step 1: Converting PDF to images: shy cow 04_07.pdf
✅ Converted to 7 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

🔍 Processing image 2/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

🔍 Processing image 3/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🔍 Processing image 4/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

🔍 Processing image 5/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

🔍 Processing image 6/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "20s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "20s"
      }
    ]
  }
}

🔍 Processing image 7/7 with Gemini Flash 2.0...
[UnifiedGemini] Processing shy cow 04_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "19s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "19s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 7 images in 11064ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxjhj700cyou87cfr3gx6p - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxjhj700cyou87cfr3gx6p
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 13945ms
🚀 Async upload endpoint called
📁 Processing file: PT.Bali boga sejati 03_07.pdf (0.64MB)
🔄 Uploading to Blob Storage: PT.Bali boga sejati 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT.Bali%20boga%20sejati%2003_07-GuajhkQfMJwMdqIXcKYkoGhXvjpQgp.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxju7v00d1ou8769pyjt74 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT.Bali%20boga%20sejati%2003_07-GuajhkQfMJwMdqIXcKYkoGhXvjpQgp.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxju7v00d1ou8769pyjt74
🚀 Enhanced processing starting for upload: cmcpxju7v00d1ou8769pyjt74
🔍 PDF extraction starting: PT.Bali boga sejati 03_07.pdf
📄 Step 1: Converting PDF to images: PT.Bali boga sejati 03_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "10s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "10s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "8s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "8s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "7s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "7s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "4s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "4s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "3s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "3s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 11143ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxju7v00d1ou8769pyjt74 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxju7v00d1ou8769pyjt74
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 13383ms
🚀 Async upload endpoint called
📁 Processing file: oz britts 2 04_07.pdf (0.70MB)
🔄 Uploading to Blob Storage: oz britts 2 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/oz%20britts%202%2004_07-1IvMO5FXYDc9qGwTrnGY35BcOtCFG4.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxk6rq00d4ou87in20mrcb with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/oz%20britts%202%2004_07-1IvMO5FXYDc9qGwTrnGY35BcOtCFG4.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxk6rq00d4ou87in20mrcb
🚀 Enhanced processing starting for upload: cmcpxk6rq00d4ou87in20mrcb
🔍 PDF extraction starting: oz britts 2 04_07.pdf
📄 Step 1: Converting PDF to images: oz britts 2 04_07.pdf
✅ Converted to 3 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing oz britts 2 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "55s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "55s"
      }
    ]
  }
}

🔍 Processing image 2/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing oz britts 2 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "54s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "54s"
      }
    ]
  }
}

🔍 Processing image 3/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing oz britts 2 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "53s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "53s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 3 images in 4957ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxk6rq00d4ou87in20mrcb - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxk6rq00d4ou87in20mrcb
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 6710ms
🚀 Async upload endpoint called
📁 Processing file: seven choice_PT satria pangan sejati 04_07.pdf (0.71MB)
🔄 Uploading to Blob Storage: seven choice_PT satria pangan sejati 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/seven%20choice_PT%20satria%20pangan%20sejati%2004_07-KJ19Qgbmm1LB9B9bIBKEW8VdCN1K3n.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxkei100d7ou87vz3bd8qb with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/seven%20choice_PT%20satria%20pangan%20sejati%2004_07-KJ19Qgbmm1LB9B9bIBKEW8VdCN1K3n.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxkei100d7ou87vz3bd8qb
🚀 Enhanced processing starting for upload: cmcpxkei100d7ou87vz3bd8qb
🔍 PDF extraction starting: seven choice_PT satria pangan sejati 04_07.pdf
📄 Step 1: Converting PDF to images: seven choice_PT satria pangan sejati 04_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "41s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "41s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "41s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "41s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "39s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "39s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing seven choice_PT satria pangan sejati 04_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "35s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "35s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 12115ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxkei100d7ou87vz3bd8qb - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxkei100d7ou87vz3bd8qb
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 14248ms
🚀 Async upload endpoint called
📁 Processing file: Gloria seafood Bali 03_07.pdf (0.84MB)
🔄 Uploading to Blob Storage: Gloria seafood Bali 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Gloria%20seafood%20Bali%2003_07-rT32qScuGAe28F5TyTJX0vpp38DVMm.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxkrrz00daou8709uqnwi3 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Gloria%20seafood%20Bali%2003_07-rT32qScuGAe28F5TyTJX0vpp38DVMm.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxkrrz00daou8709uqnwi3
🚀 Enhanced processing starting for upload: cmcpxkrrz00daou8709uqnwi3
🔍 PDF extraction starting: Gloria seafood Bali 03_07.pdf
📄 Step 1: Converting PDF to images: Gloria seafood Bali 03_07.pdf
✅ Converted to 6 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "27s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "27s"
      }
    ]
  }
}

🔍 Processing image 2/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}

🔍 Processing image 3/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "25s"
      }
    ]
  }
}

🔍 Processing image 4/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

🔍 Processing image 5/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

🔍 Processing image 6/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Gloria seafood Bali 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 6 images in 7689ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxkrrz00daou8709uqnwi3 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxkrrz00daou8709uqnwi3
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 9700ms
🚀 Async upload endpoint called
📁 Processing file: SAI FRESH 03_07.pdf (1.17MB)
🔄 Uploading to Blob Storage: SAI FRESH 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/SAI%20FRESH%2003_07-S01PdSA88DmpO3h2tfGcAk8Vjbo6iw.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxl1jm00ddou87ej4c04cu with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/SAI%20FRESH%2003_07-S01PdSA88DmpO3h2tfGcAk8Vjbo6iw.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxl1jm00ddou87ej4c04cu
🚀 Enhanced processing starting for upload: cmcpxl1jm00ddou87ej4c04cu
🔍 PDF extraction starting: SAI FRESH 03_07.pdf
📄 Step 1: Converting PDF to images: SAI FRESH 03_07.pdf
✅ Converted to 3 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "13s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "13s"
      }
    ]
  }
}

🔍 Processing image 2/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "12s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "12s"
      }
    ]
  }
}

🔍 Processing image 3/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "11s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "11s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 3 images in 6941ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxl1jm00ddou87ej4c04cu - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxl1jm00ddou87ej4c04cu
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 8902ms
🚀 Async upload endpoint called
📁 Processing file: Benoa fish market 03_07.pdf (2.04MB)
🔄 Uploading to Blob Storage: Benoa fish market 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Benoa%20fish%20market%2003_07-5XxHOhPW4EtkAQLUQgQvyIv5YPbzMU.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxlb1y00dgou87i5v4h6sn with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Benoa%20fish%20market%2003_07-5XxHOhPW4EtkAQLUQgQvyIv5YPbzMU.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxlb1y00dgou87i5v4h6sn
🚀 Enhanced processing starting for upload: cmcpxlb1y00dgou87i5v4h6sn
🔍 PDF extraction starting: Benoa fish market 03_07.pdf
📄 Step 1: Converting PDF to images: Benoa fish market 03_07.pdf
✅ Converted to 5 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

🔍 Processing image 2/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "0s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "0s"
      }
    ]
  }
}

🔍 Processing image 3/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

🔍 Processing image 4/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "57s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "57s"
      }
    ]
  }
}

🔍 Processing image 5/5 with Gemini Flash 2.0...
[UnifiedGemini] Processing Benoa fish market 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "56s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "56s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 5 images in 9272ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxlb1y00dgou87i5v4h6sn - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxlb1y00dgou87i5v4h6sn
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 11688ms
🚀 Async upload endpoint called
📁 Processing file: Milk up 04_07.pdf (2.34MB)
🔄 Uploading to Blob Storage: Milk up 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Milk%20up%2004_07-WJ3jqlOoytrnOqMXX61cYNohzDEEzA.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxlmie00djou876ntwm0ze with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Milk%20up%2004_07-WJ3jqlOoytrnOqMXX61cYNohzDEEzA.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxlmie00djou876ntwm0ze
🚀 Enhanced processing starting for upload: cmcpxlmie00djou876ntwm0ze
🔍 PDF extraction starting: Milk up 04_07.pdf
📄 Step 1: Converting PDF to images: Milk up 04_07.pdf
✅ Converted to 6 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

🔍 Processing image 2/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "45s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "45s"
      }
    ]
  }
}

🔍 Processing image 3/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "44s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "44s"
      }
    ]
  }
}

🔍 Processing image 4/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "43s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "43s"
      }
    ]
  }
}

🔍 Processing image 5/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

🔍 Processing image 6/6 with Gemini Flash 2.0...
[UnifiedGemini] Processing Milk up 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "41s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "41s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 6 images in 9443ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxlmie00djou876ntwm0ze - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxlmie00djou876ntwm0ze
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 11970ms
🚀 Async upload endpoint called
📁 Processing file: Cheese+Boutique+Menu+2025-compressed.pdf (3.63MB)
🔄 Uploading to Blob Storage: Cheese+Boutique+Menu+2025-compressed.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%2BBoutique%2BMenu%2B2025-compressed-WZRvhuutBFUgiLEfCc9pDWrUftbky1.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxly9400dmou877jm3emsa with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%2BBoutique%2BMenu%2B2025-compressed-WZRvhuutBFUgiLEfCc9pDWrUftbky1.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxly9400dmou877jm3emsa
🚀 Enhanced processing starting for upload: cmcpxly9400dmou877jm3emsa
🔍 PDF extraction starting: Cheese+Boutique+Menu+2025-compressed.pdf
📄 Step 1: Converting PDF to images: Cheese+Boutique+Menu+2025-compressed.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "28s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "27s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "27s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "26s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "24s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese+Boutique+Menu+2025-compressed.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 14485ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxly9400dmou877jm3emsa - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxly9400dmou877jm3emsa
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 17292ms
🚀 Async upload endpoint called
📁 Processing file: Happy farm bali 03_07.pdf (3.94MB)
🔄 Uploading to Blob Storage: Happy farm bali 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Happy%20farm%20bali%2003_07-wdi0Ot4DMhQD4ubVGbHOvoma6jxVx6.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxme6m00dpou87z8bt74dw with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Happy%20farm%20bali%2003_07-wdi0Ot4DMhQD4ubVGbHOvoma6jxVx6.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxme6m00dpou87z8bt74dw
🚀 Enhanced processing starting for upload: cmcpxme6m00dpou87z8bt74dw
🔍 PDF extraction starting: Happy farm bali 03_07.pdf
📄 Step 1: Converting PDF to images: Happy farm bali 03_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "6s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "5s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "5s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "4s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "4s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "2s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "58s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "58s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing Happy farm bali 03_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "56s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "56s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 18315ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxme6m00dpou87z8bt74dw - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxme6m00dpou87z8bt74dw
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 21518ms
🚀 Async upload endpoint called
📁 Processing file: PT pangan lestari 04_07.pdf (4.62MB)
🔄 Uploading to Blob Storage: PT pangan lestari 04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT%20pangan%20lestari%2004_07-PTmKQbY7PPAz4CnpJbKWBWU9p1y7vp.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxmx0500dsou870s851122 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT%20pangan%20lestari%2004_07-PTmKQbY7PPAz4CnpJbKWBWU9p1y7vp.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxmx0500dsou870s851122
🚀 Enhanced processing starting for upload: cmcpxmx0500dsou870s851122
🔍 PDF extraction starting: PT pangan lestari 04_07.pdf
📄 Step 1: Converting PDF to images: PT pangan lestari 04_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "44s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "44s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "43s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "43s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "42s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "40s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "40s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "39s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "39s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT pangan lestari 04_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 12051ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxmx0500dsou870s851122 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxmx0500dsou870s851122
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 15114ms
🚀 Async upload endpoint called
📁 Processing file: CV alam Sari 05_07 .pdf (6.15MB)
🔄 Uploading to Blob Storage: CV alam Sari 05_07 .pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/CV%20alam%20Sari%2005_07%20-tVwVrCayhOfBBtXJkzc7PmMigAJ7cl.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxnbsu00dvou87e2uzhbad with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/CV%20alam%20Sari%2005_07%20-tVwVrCayhOfBBtXJkzc7PmMigAJ7cl.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxnbsu00dvou87e2uzhbad
🚀 Enhanced processing starting for upload: cmcpxnbsu00dvou87e2uzhbad
🔍 PDF extraction starting: CV alam Sari 05_07 .pdf
📄 Step 1: Converting PDF to images: CV alam Sari 05_07 .pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "22s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "19s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "19s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "18s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "17s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "17s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "15s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "15s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing CV alam Sari 05_07 .pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "14s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "14s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 16871ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxnbsu00dvou87e2uzhbad - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxnbsu00dvou87e2uzhbad
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 20984ms
🚀 Async upload endpoint called
📁 Processing file: Bali diary 05_07 .pdf (7.33MB)
🔄 Uploading to Blob Storage: Bali diary 05_07 .pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Bali%20diary%2005_07%20-zAPJ2QJuu2jpK4h6HaVSGgR4HGkMR9.pdf
💾 Creating upload record in database
✅ Upload record created: cmcpxnwk300dyou8775ck0fq6 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Bali%20diary%2005_07%20-zAPJ2QJuu2jpK4h6HaVSGgR4HGkMR9.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxnwk300dyou8775ck0fq6
🚀 Enhanced processing starting for upload: cmcpxnwk300dyou8775ck0fq6
🔍 PDF extraction starting: Bali diary 05_07 .pdf
📄 Step 1: Converting PDF to images: Bali diary 05_07 .pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Bali diary 05_07 .pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "1s"
      }
    ]
  }
}

🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Bali diary 05_07 .pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:90:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "59s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 2 images in 4811ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxnwk300dyou8775ck0fq6 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxnwk300dyou8775ck0fq6
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 11750ms
 ✓ Compiled in 13ms
 ✓ Compiled /api/async-upload in 103ms (827 modules)
⚠️ Background processor auto-start DISABLED - using synchronous processing
🚀 Async upload endpoint called
📁 Processing file: AF Seafood 03_07.pdf (0.41MB)
🔄 Uploading to Blob Storage: AF Seafood 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/AF%20Seafood%2003_07-2KG4xYhowPx68Mdlu0w7ZJRbjoubkS.pdf
🏢 Creating/finding supplier: Af Seafood
🆕 Creating new supplier: Af Seafood
✅ Created new supplier: Af Seafood (cmcpxvtx400dzou87l6wb2nbn)
💾 Creating upload record in database
✅ Upload record created: cmcpxvtzd00e1ou87yry8w3p2 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/AF%20Seafood%2003_07-2KG4xYhowPx68Mdlu0w7ZJRbjoubkS.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxvtzd00e1ou87yry8w3p2
🚀 Enhanced processing starting for upload: cmcpxvtzd00e1ou87yry8w3p2
🔍 PDF extraction starting: AF Seafood 03_07.pdf
📄 Step 1: Converting PDF to images: AF Seafood 03_07.pdf
✅ Converted to 4 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "50s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "50s"
      }
    ]
  }
}

🔍 Processing image 2/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

🔍 Processing image 3/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "49s"
      }
    ]
  }
}

🔍 Processing image 4/4 with Gemini Flash 2.0...
[UnifiedGemini] Processing AF Seafood 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "48s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "48s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 4 images in 5966ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxvtzd00e1ou87yry8w3p2 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxvtzd00e1ou87yry8w3p2
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 8723ms
🚀 Async upload endpoint called
📁 Processing file: PT.Bali boga sejati 03_07.pdf (0.64MB)
🔄 Uploading to Blob Storage: PT.Bali boga sejati 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT.Bali%20boga%20sejati%2003_07-TGgX1V4E66W1gjEFGIa2rW48IJkCkP.pdf
🏢 Creating/finding supplier: Bali Boga
✅ Found existing supplier: Bali Boga (cmc06ad2m02ips2klx6sfrb2a)
💾 Creating upload record in database
✅ Upload record created: cmcpxw2d800e3ou87wdpc92dj with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/PT.Bali%20boga%20sejati%2003_07-TGgX1V4E66W1gjEFGIa2rW48IJkCkP.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxw2d800e3ou87wdpc92dj
🚀 Enhanced processing starting for upload: cmcpxw2d800e3ou87wdpc92dj
🔍 PDF extraction starting: PT.Bali boga sejati 03_07.pdf
📄 Step 1: Converting PDF to images: PT.Bali boga sejati 03_07.pdf
✅ Converted to 8 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "40s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "40s"
      }
    ]
  }
}

🔍 Processing image 2/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "38s"
      }
    ]
  }
}

🔍 Processing image 3/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "37s"
      }
    ]
  }
}

🔍 Processing image 4/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_4.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "36s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 4: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "36s"
      }
    ]
  }
}

🔍 Processing image 5/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_5.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "35s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 5: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "35s"
      }
    ]
  }
}

🔍 Processing image 6/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_6.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "34s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 6: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "34s"
      }
    ]
  }
}

🔍 Processing image 7/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_7.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "33s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 7: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "33s"
      }
    ]
  }
}

🔍 Processing image 8/8 with Gemini Flash 2.0...
[UnifiedGemini] Processing PT.Bali boga sejati 03_07.pdf_page_8.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "32s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 8: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "32s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 8 images in 11228ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxw2d800e3ou87wdpc92dj - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxw2d800e3ou87wdpc92dj
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 12844ms
🚀 Async upload endpoint called
📁 Processing file: SAI FRESH 03_07.pdf (1.17MB)
🔄 Uploading to Blob Storage: SAI FRESH 03_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/SAI%20FRESH%2003_07-XgBgEp9yhndHomUPODokJMfF3LLHav.pdf
🏢 Creating/finding supplier: Sai Fresh
✅ Found existing supplier: Sai Fresh (cmc06nyno03p4s2kltor547tr)
💾 Creating upload record in database
✅ Upload record created: cmcpxwete00e5ou875wpur7wc with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/SAI%20FRESH%2003_07-XgBgEp9yhndHomUPODokJMfF3LLHav.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpxwete00e5ou875wpur7wc
🚀 Enhanced processing starting for upload: cmcpxwete00e5ou875wpur7wc
🔍 PDF extraction starting: SAI FRESH 03_07.pdf
📄 Step 1: Converting PDF to images: SAI FRESH 03_07.pdf
✅ Converted to 3 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "23s"
      }
    ]
  }
}

🔍 Processing image 2/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "21s"
      }
    ]
  }
}

🔍 Processing image 3/3 with Gemini Flash 2.0...
[UnifiedGemini] Processing SAI FRESH 03_07.pdf_page_3.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "20s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 3: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "20s"
      }
    ]
  }
}

🎉 PDF→Images→Gemini Flash 2.0 completed: 0 products from 3 images in 7071ms
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpxwete00e5ou875wpur7wc - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpxwete00e5ou875wpur7wc
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 8893ms
 ✓ Compiled in 10ms
 ✓ Compiled /api/async-upload in 118ms (827 modules)
⚠️ Background processor auto-start DISABLED - using synchronous processing
🚀 Async upload endpoint called
📁 Processing file: Cheese work  04_07.pdf (0.09MB)
🔄 Uploading to Blob Storage: Cheese work  04_07.pdf
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%20work%20%2004_07-40cU4QZrAIOcNz7IeXaWxw9qKuMb6z.pdf
🏢 Creating/finding supplier: Cheese Work
🆕 Creating new supplier: Cheese Work
✅ Created new supplier: Cheese Work (cmcpy12wf00e6ou87ztwtuv2r)
💾 Creating upload record in database
✅ Upload record created: cmcpy12xo00e8ou87dew7n8r4 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Cheese%20work%20%2004_07-40cU4QZrAIOcNz7IeXaWxw9qKuMb6z.pdf
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpy12xo00e8ou87dew7n8r4
🚀 Enhanced processing starting for upload: cmcpy12xo00e8ou87dew7n8r4
🔍 PDF extraction starting: Cheese work  04_07.pdf
📄 Step 1: Converting PDF to images: Cheese work  04_07.pdf
✅ Converted to 2 images
🤖 Step 2: Processing images with Gemini Flash 2.0...
🔍 Processing image 1/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_1.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "47s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 1: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "47s"
      }
    ]
  }
}

🚫 QUOTA EXHAUSTED: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "model": "gemini-2.0-flash-exp",
              "location": "global"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "47s"
      }
    ]
  }
}

⚠️ Gemini API quota limit reached. Consider upgrading plan or try again later.
🔍 Processing image 2/2 with Gemini Flash 2.0...
[UnifiedGemini] Processing Cheese work  04_07.pdf_page_2.png with model gemini-2.0-flash-exp
[UnifiedGemini] Estimated products: 100, Using batching: false
[UnifiedGemini] Error: Error: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

    at UnifiedGeminiService.makeGeminiRequest (app/services/core/UnifiedGeminiService.ts:368:12)
    at async UnifiedGeminiService.processSingleMode (app/services/core/UnifiedGeminiService.ts:88:11)
    at async UnifiedGeminiService.processDocument (app/services/core/UnifiedGeminiService.ts:67:15)
    at async EnhancedPdfExtractor.extractFromPdf (app/services/enhancedPdfExtractor.ts:138:31)
    at async EnhancedFileProcessor.processFile (app/services/enhancedFileProcessor.ts:143:24)
    at async AsyncFileProcessor.processFile (app/services/background/AsyncFileProcessor.ts:14:21)
    at async POST (app/api/async-upload/route.ts:130:31)
  366 |     if (!response.ok) {
  367 |       const error = await response.text();
> 368 |       throw new Error(`Gemini API error: ${response.status} - ${error}`);
      |            ^
  369 |     }
  370 |     
  371 |     const result = await response.json();
❌ Image 2: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

🚫 QUOTA EXHAUSTED: Failed to process document: Gemini API error: 429 - {
  "error": {
    "code": 429,
    "message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.",
    "status": "RESOURCE_EXHAUSTED",
    "details": [
      {
        "@type": "type.googleapis.com/google.rpc.QuotaFailure",
        "violations": [
          {
            "quotaMetric": "generativelanguage.googleapis.com/generate_content_free_tier_requests",
            "quotaId": "GenerateRequestsPerDayPerProjectPerModel-FreeTier",
            "quotaDimensions": {
              "location": "global",
              "model": "gemini-2.0-flash-exp"
            },
            "quotaValue": "50"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.Help",
        "links": [
          {
            "description": "Learn more about Gemini API quotas",
            "url": "https://ai.google.dev/gemini-api/docs/rate-limits"
          }
        ]
      },
      {
        "@type": "type.googleapis.com/google.rpc.RetryInfo",
        "retryDelay": "46s"
      }
    ]
  }
}

⚠️ Gemini API quota limit reached. Consider upgrading plan or try again later.
🛑 Stopping PDF processing due to quota exhaustion
🚫 PDF processing stopped due to API quota exhaustion: 0 products from 2 images
⚠️ 2 quota-related errors encountered
💡 Recommendation: Upgrade Gemini API plan or try again later
💰 Gemini Flash 2.0 cost: $0.000000 (0 tokens)
⚠️ No valid products to process
📋 Processing Log: cmcpy12xo00e8ou87dew7n8r4 - completed - 0.000 completeness
✅ Enhanced processing completed: cmcpy12xo00e8ou87dew7n8r4
   📊 Completeness: 0.0%
   🛍️ Products: 0
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 0, error: undefined }
✅ Synchronous processing completed: SUCCESS
 POST /api/async-upload 200 in 4459ms
 ✓ Compiled in 10ms
prisma:error Error in PostgreSQL connection: Error { kind: Closed, cause: None }
prisma:error Error in PostgreSQL connection: Error { kind: Closed, cause: None }
prisma:error Error in PostgreSQL connection: Error { kind: Closed, cause: None }
prisma:error Error in PostgreSQL connection: Error { kind: Closed, cause: None }
 ✓ Compiled /api/async-upload in 120ms (827 modules)
⚠️ Background processor auto-start DISABLED - using synchronous processing
🚀 Async upload endpoint called
📁 Processing file: Widi Wiguna 03_07.xlsx (0.08MB)
🔄 Uploading to Blob Storage: Widi Wiguna 03_07.xlsx
✅ File uploaded to Blob Storage: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Widi%20Wiguna%2003_07-6e3Ul9G6fWzlIcBRDyer94YR4vW7in.xlsx
🏢 Creating/finding supplier: Widi Wiguna
✅ Found existing supplier: Widi Wiguna (cmc06ue2h0407s2kl56ch1jso)
💾 Creating upload record in database
✅ Upload record created: cmcpyiwge00eaou87flxrx347 with URL: https://cdc1w79ssc4kg6xh.public.blob.vercel-storage.com/Widi%20Wiguna%2003_07-6e3Ul9G6fWzlIcBRDyer94YR4vW7in.xlsx
🔄 Starting SYNCHRONOUS processing (JobQueue disabled)
AsyncFileProcessor: Starting processing for upload: cmcpyiwge00eaou87flxrx347
🚀 Enhanced processing starting for upload: cmcpyiwge00eaou87flxrx347
🔍 Enhanced Excel extraction starting: Widi Wiguna 03_07.xlsx
⚠️ XLSX failed with array type, trying with buffer type: Bad compressed size: 65895 != 1179258880
⚠️ XLSX library failed, trying ExcelJS fallback: Bad compressed size: 65895 != 1179258880
✅ ExcelJS fallback successful
📊 ExcelJS: Processing file with 3 worksheets
📄 Processing ExcelJS worksheet: "Sheet1"
   📋 Worksheet "Sheet1": 242 non-empty rows
   📋 Sheet structure: name=1, price=3, unit=2, dataStart=4
   🔬 Sheet structure: {
  nameColumn: 1,
  priceColumn: 3,
  unitColumn: 2,
  categoryColumn: -1,
  dataStartRow: 4,
  headerRow: 3
}
   📊 Extraction complete: 215 products from 215/242 rows
   ✅ ExcelJS worksheet "Sheet1" processed: 215 products extracted
📄 Processing ExcelJS worksheet: "Sheet2"
   📋 Worksheet "Sheet2": 0 non-empty rows
   ⚠️ Skipping worksheet "Sheet2": too few rows
📄 Processing ExcelJS worksheet: "Sheet3"
   📋 Worksheet "Sheet3": 0 non-empty rows
   ⚠️ Skipping worksheet "Sheet3": too few rows
✅ Enhanced extraction completed: Widi Wiguna 03_07.xlsx
   📊 Rows: 215/242 (88.8%)
   🛍️ Products: 215
   📄 Sheets: 1
   ⏱️ Time: 1640ms
   💰 Cost: $0.0000
🔍 Validating 215 extracted products...
📊 Price validation summary:
   Valid: 215/215
   Warnings: 21
   Errors: 0
   Average confidence: 97.9%
   Price distribution:
     < 10k: 18
     10k-100k: 170
     100k-1M: 27
     > 1M: 0
🏢 Processing supplier: "Widi"
   📞 Phone: Not provided
   📧 Email: Not provided
   📍 Address: Not provided
✅ Found existing supplier: cmc06ue2h0407s2kl56ch1jso
📦 Processing 215 valid products...
⚡ Skipping AI standardization: disabled or 215 products > 200 limit
📊 Grouped 215 products into 214 unique products
📈 Price history created: ares - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 159ms
📈 Price history created: asparagus - $120000 → $120000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: bean sprout long - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: bean green - $24000 → $24000 (0.0%)
Bulk operation: Price.updateMany completed in 122ms
📈 Price history created: bean green baby - $50000 → $50000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: bean long - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: bean red kacang buncis - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: bean red kacang tolo - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: bean sprout super - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: beet root - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
✅ Processed 10/214 unique products...
📈 Price history created: bongkot - $10000 → $10000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: brocoly import - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: cabbage chinese - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: cabbage red - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: cabbage white - $9000 → $9000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: caisin - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: capsicum green - $65000 → $65000 (0.0%)
Bulk operation: Price.updateMany completed in 119ms
📈 Price history created: capsicum red - $85000 → $85000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
📈 Price history created: capsicum yelow - $85000 → $85000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: carrot impot - $20000 → $20000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 20/214 unique products...
📈 Price history created: carrot lokal - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: cauly flower - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: celery - $60000 → $60000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: chilly green big - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: chilly red big - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: chily small green - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 119ms
📈 Price history created: chily small red - $75000 → $75000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: chives - $50000 → $50000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: coconut clean - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: coconut grated - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 30/214 unique products...
📈 Price history created: coconut old - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: coconut yellow - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: coconut young - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: corn baby - $50000 → $50000 (0.0%)
Bulk operation: Price.updateMany completed in 140ms
📈 Price history created: corn sweet - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: corn whole local - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: cucumber japanese - $22000 → $22000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: cucumber local - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: egg plant long - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: egg plant round - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 40/214 unique products...
📈 Price history created: galangal - $12000 → $12000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: banana leaf - $4000 → $4000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: coconut leaf - $20000 → $20000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: garlic clean - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: garlic whole - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: ginger - $28000 → $28000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: gondo - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: jack fuit young - $20000 → $20000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: kangkung akar - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: kecicang - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
✅ Processed 50/214 unique products...
📈 Price history created: kemangi leaf - $50000 → $50000 (0.0%)
Bulk operation: Price.updateMany completed in 156ms
📈 Price history created: kencur - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: labu siam - $8000 → $8000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
📈 Price history created: leek - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: lemen leaf - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: lemo bali - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: lemon grass - $18000 → $18000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: mushroom botton - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: mushroom oyster - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: mushroom shitake - $110000 → $110000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 60/214 unique products...
📈 Price history created: onion red bombay merah - $70000 → $70000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: onion spring - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: onion white large - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: pakis - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: pandan leaf - $3000 → $3000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: parsley - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: pepaya young local - $9000 → $9000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: pok coy - $18000 → $18000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: potato big - $22000 → $22000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: potato small - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 120ms
✅ Processed 70/214 unique products...
📈 Price history created: potato sweet - $13000 → $13000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: pumkin - $10000 → $10000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: salam leaf - $3000 → $3000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: shalot clean - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: singkong leaf - $13000 → $13000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: spinach akar - $13000 → $13000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: spinach lokal - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: suji leaf - $3000 → $3000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: tahu - $1000 → $1000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: tamarin - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 80/214 unique products...
📈 Price history created: tempe - $2000 → $2000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: tomato tw - $34000 → $34000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: tomato cerry red - $75000 → $75000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: turmeric - $14000 → $14000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: turnip - $28000 → $28000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: ubi kayu - $9000 → $9000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: water crass - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: zukini green - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: apple fuji - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: apple green smith - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 127ms
✅ Processed 90/214 unique products...
📈 Price history created: apple manalagi - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: apple red import - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 123ms
📈 Price history created: avocado - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 121ms
📈 Price history created: banana green - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 122ms
📈 Price history created: banana kayu - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: banana mas - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: banana raja - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: banana kepok - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: banana calvadish - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: bangkuang - $22000 → $22000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
✅ Processed 100/214 unique products...
📈 Price history created: buah naga - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: grape black local - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
📈 Price history created: grape red import - $80000 → $80000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: grape green import - $130000 → $130000 (0.0%)
Bulk operation: Price.updateMany completed in 121ms
📈 Price history created: guava - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: honey melon white - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: honey melon red - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: jack fruit old clean - $140000 → $140000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: kiwi - $90000 → $90000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: kelengkeng - $60000 → $60000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 110/214 unique products...
📈 Price history created: lime - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 124ms
📈 Price history created: mangga masak - $38000 → $38000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: mangga rujak - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 132ms
📈 Price history created: orange lokal - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: pamelo - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: papaya tw - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: passion fruit asam - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: pineapple - $8000 → $8000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: pear hijau - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: pear kuning biasa - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 120/214 unique products...
📈 Price history created: salak pondoh - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: salak bali - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: strawberry grade a - $75000 → $75000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: sunkist - $38000 → $38000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: jeruk slayer - $22000 → $22000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: tangerine lumajang - $18000 → $18000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: tangerine kintamani - $22000 → $22000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: water melon yellow - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 293ms
📈 Price history created: water melon non seed - $13000 → $13000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: herb arigano - $140000 → $140000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
✅ Processed 130/214 unique products...
📈 Price history created: herb basil - $90000 → $90000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: herb coriander leave - $90000 → $90000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: herb dill - $160000 → $160000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: herb marjoran - $160000 → $160000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: herb mint - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: herb rosmery - $140000 → $140000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: herb sage - $160000 → $160000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: herb taragon - $160000 → $160000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: herb theme - $220000 → $220000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: lettuce bater - $70000 → $70000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 140/214 unique products...
📈 Price history created: lettuce green - $40000 → $40000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: lettuce ice berg - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: lettuce loroloso - $80000 → $80000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: lettuce mix - $75000 → $75000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: lettuce prizse mizuna - $95000 → $95000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: lettuce radichio - $50000 → $50000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: lettuce red - $60000 → $60000 (0.0%)
Bulk operation: Price.updateMany completed in 125ms
📈 Price history created: lettuce roket rocola - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: lettuce romaine baby - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: wail rucola - $120000 → $120000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 150/214 unique products...
📈 Price history created: kacang polong frozen - $65000 → $65000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: bihun jagung bijag - $8000 → $8000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: salad oil - $170000 → $170000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: oyster sauce - $115000 → $115000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: sesame oil - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: fish gravy - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: cuka dixi - $18000 → $18000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: arak masak - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: honey bloosom - $32000 → $32000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: kecap asin - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
✅ Processed 160/214 unique products...
📈 Price history created: kecap manis abc - $165000 → $165000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: garam dolphin - $17000 → $17000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: sugar sachet - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: brown sugar sachet - $65000 → $65000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: teh sariwangi 50pc - $15000 → $15000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: baking powder - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 120ms
📈 Price history created: tabasco 60ml - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: tepung segitiga biru - $285000 → $285000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
🔗 Consolidated 2 duplicate products into "tepung segitiga biru" (best price: 285000)
📈 Price history created: tepung cakra - $16000 → $16000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: tepung maizena - $23000 → $23000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 170/214 unique products...
📈 Price history created: santan kara 1ltr - $70000 → $70000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: milk uht - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: fresh milk grenfields - $260000 → $260000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: permifan - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: best clink wraf besar - $175000 → $175000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: tusuk gigi portion - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: bread crump - $26000 → $26000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
📈 Price history created: krupuk udang fina - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: plastik 1kg - $14000 → $14000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: permipan - $65000 → $65000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
✅ Processed 180/214 unique products...
📈 Price history created: demi glace - $175000 → $175000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: mika for break fast box - $1000 → $1000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: break fast box - $1500 → $1500 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: agar agar swallow - $65000 → $65000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: dijon mustard - $65000 → $65000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: oregano dry 200gr - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: beras putri sejati - $395000 → $395000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: tepung cakra kembar - $290000 → $290000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: minyak goreng 18 ltr - $425000 → $425000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: gula merah - $23000 → $23000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
✅ Processed 190/214 unique products...
📈 Price history created: gula pasir import - $20000 → $20000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: kacang hijau - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
📈 Price history created: kacang tanah - $34000 → $34000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: kacang kapri - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: kemiri - $70000 → $70000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: ketan hitam - $30000 → $30000 (0.0%)
Bulk operation: Price.updateMany completed in 138ms
📈 Price history created: ketan putih siem - $28000 → $28000 (0.0%)
Bulk operation: Price.updateMany completed in 113ms
📈 Price history created: ketumbar seed - $35000 → $35000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: merica bubuk - $90000 → $90000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: merica hitam utuh - $165000 → $165000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
✅ Processed 200/214 unique products...
📈 Price history created: merica putih utuh - $195000 → $195000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
📈 Price history created: mie telor atom bulan - $145000 → $145000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: telur ayam - $1800 → $1800 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: ikan teribang - $45000 → $45000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: ikan pindang - $8000 → $8000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: tepung ketan - $26000 → $26000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: krupuk bawang - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: terasi bonang - $2500 → $2500 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: shalot fried bawang goreng - $55000 → $55000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
📈 Price history created: wijen - $70000 → $70000 (0.0%)
Bulk operation: Price.updateMany completed in 117ms
✅ Processed 210/214 unique products...
📈 Price history created: jinten - $135000 → $135000 (0.0%)
Bulk operation: Price.updateMany completed in 116ms
📈 Price history created: krupuk pelangi - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 118ms
📈 Price history created: cendol - $3000 → $3000 (0.0%)
Bulk operation: Price.updateMany completed in 115ms
 POST /api/async-upload 200 in 119195ms
📈 Price history created: krupuk ingke - $25000 → $25000 (0.0%)
Bulk operation: Price.updateMany completed in 114ms
🎉 Successfully processed 214 products
📋 Processing Log: cmcpyiwge00eaou87flxrx347 - completed_with_errors - 0.888 completeness
✅ Enhanced processing completed: cmcpyiwge00eaou87flxrx347
   📊 Completeness: 88.8%
   🛍️ Products: 214
   💰 Cost: $0.0000
AsyncFileProcessor: Processing completed with result: { success: true, productsCreated: 214, error: undefined }
✅ Synchronous processing completed: SUCCESS
 ○ Compiling /admin/suppliers ...
 ✓ Compiled /admin/suppliers in 1281ms (729 modules)
 GET /admin/suppliers 200 in 1415ms
 ✓ Compiled in 136ms (346 modules)
 ✓ Compiled /_not-found in 54ms (709 modules)
 GET /_next/static/chunks/main-app.js?v=1751703308412 404 in 91ms
 ✓ Compiled /favicon.ico in 34ms (392 modules)
 GET /favicon.ico 200 in 75ms
 GET /admin/suppliers 200 in 89ms
 GET /_next/static/chunks/main-app.js?v=1751703413360 404 in 12ms
 GET /admin/suppliers 200 in 32ms
 GET /_next/static/chunks/main-app.js?v=1751703415500 404 in 17ms
 ✓ Compiled / in 228ms (716 modules)
 GET / 200 in 302ms
 GET /_next/static/chunks/main-app.js?v=1751703421443 404 in 14ms
