const { PrismaClient } = require('@prisma/client');

async function checkWidiWiguna() {
  const prisma = new PrismaClient();
  
  try {
    console.log('=== –î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û WIDI WIGUNA ===');
    
    const supplier = await prisma.supplier.findFirst({
      where: {
        name: {
          contains: 'Widi',
          mode: 'insensitive'
        }
      },
      include: {
        _count: {
          select: { 
            prices: true, 
            uploads: true 
          }
        },
        uploads: {
          select: {
            id: true,
            originalName: true,
            status: true,
            totalRowsProcessed: true,
            createdAt: true
          },
          orderBy: { createdAt: 'desc' }
        }
      }
    });
    
    if (!supplier) {
      console.log('‚ùå Widi Wiguna –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    console.log(`‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫: ${supplier.name}`);
    console.log(`üìä –¢–æ–≤–∞—Ä–æ–≤: ${supplier._count.prices}`);
    console.log(`üì§ –ó–∞–≥—Ä—É–∑–æ–∫: ${supplier._count.uploads}`);
    console.log(`üÜî ID: ${supplier.id}`);
    
    console.log('\n=== –ó–ê–ì–†–£–ó–ö–ò ===');
    supplier.uploads.forEach((upload, index) => {
      console.log(`${index + 1}. ${upload.originalName}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${upload.status}`);
      console.log(`   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: ${upload.totalRowsProcessed || 0}`);
      console.log(`   –î–∞—Ç–∞: ${upload.createdAt.toISOString().split('T')[0]}`);
      console.log('');
    });
    
    // Get recent products
    const recentProducts = await prisma.price.findMany({
      where: { supplierId: supplier.id },
      include: {
        product: {
          select: {
            name: true,
            category: true,
            unit: true
          }
        }
      },
      take: 10,
      orderBy: { createdAt: 'desc' }
    });
    
    console.log('=== –ü–û–°–õ–ï–î–ù–ò–ï –¢–û–í–ê–†–´ (10 —à—Ç.) ===');
    recentProducts.forEach((price, index) => {
      console.log(`${index + 1}. ${price.product.name}`);
      console.log(`   –¶–µ–Ω–∞: ${price.amount} ${price.unit || price.product.unit || ''}`);
      console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${price.product.category || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log('');
    });
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkWidiWiguna();