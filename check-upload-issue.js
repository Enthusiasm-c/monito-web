const fs = require('fs');

async function checkUploadIssue() {
  console.log('üîç –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´ –° –ú–ê–°–°–û–í–û–ô –ó–ê–ì–†–£–ó–ö–û–ô');
  console.log('=' .repeat(70));
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—á–µ—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏
  console.log('üìã –ü–†–û–í–ï–†–ö–ê –û–¢–ß–ï–¢–û–í –ó–ê–ì–†–£–ó–ö–ò:');
  
  const reportFiles = [
    'bulk-upload-summary.json',
    'bulk-supplier-upload-report-1751699580450.json',
    'quick-supplier-test-1751697265389.json'
  ];
  
  reportFiles.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –æ—Ç—á–µ—Ç: ${file}`);
      try {
        const data = JSON.parse(fs.readFileSync(file, 'utf8'));
        if (data.totalFiles) {
          console.log(`   üìÅ –§–∞–π–ª–æ–≤: ${data.totalFiles}`);
          console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${data.successful}`);
          console.log(`   üì¶ –¢–æ–≤–∞—Ä–æ–≤: ${data.totalProductsExtracted}`);
        }
      } catch (e) {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: ${e.message}`);
      }
    } else {
      console.log(`‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${file}`);
    }
  });
  
  // –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–∏—á–∏–Ω
  console.log('\nüîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –û–¢–°–£–¢–°–¢–í–ò–Ø –î–ê–ù–ù–´–• –í –ë–î:');
  
  console.log('1. üåê –ü—Ä–æ–±–ª–µ–º–∞ —Å–µ—Ç–∏/—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:');
  console.log('   - –ó–∞–≥—Ä—É–∑–∫–∏ –º–æ–≥–ª–∏ –Ω–µ –¥–æ—Å—Ç–∏—á—å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞');
  console.log('   - –¢–∞–π–º–∞—É—Ç—ã –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
  console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å Neon PostgreSQL');
  
  console.log('\n2. üîÑ –ü—Ä–æ–±–ª–µ–º–∞ API endpoint:');
  console.log('   - upload-unified –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ñ–∞–π–ª—ã –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
  console.log('   - –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–ª–∏ –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏');
  console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
  
  console.log('\n3. üìä –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π:');
  console.log('   - –§–∞–π–ª—ã –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å, –Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å');
  console.log('   - –û—à–∏–±–∫–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤/—Ç–æ–≤–∞—Ä–æ–≤');
  console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö');
  
  console.log('\nüî¨ –§–ê–ö–¢–´ –ò–ó –ê–ù–ê–õ–ò–ó–ê:');
  console.log('‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª —É—Å–ø–µ—à–Ω–æ (86% —É—Å–ø–µ—Ö–∞)');
  console.log('‚úÖ 911 —Ç–æ–≤–∞—Ä–æ–≤ –±—ã–ª–æ –∏–∑–≤–ª–µ—á–µ–Ω–æ –∏–∑ —Ñ–∞–π–ª–æ–≤');
  console.log('‚úÖ 19 –∏–∑ 22 —Ñ–∞–π–ª–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏—Å—å –±–µ–∑ –æ—à–∏–±–æ–∫');
  console.log('‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ–± —ç—Ç–∏—Ö –∑–∞–≥—Ä—É–∑–∫–∞—Ö');
  console.log('‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –∫—Ä–æ–º–µ 1 Excel —Ñ–∞–π–ª–∞');
  
  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞
  console.log('\nüåê –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –°–ï–†–í–ï–†–ê:');
  
  try {
    const fetch = (await import('node-fetch')).default;
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å health endpoint
    const healthResponse = await fetch('http://localhost:3000/api/upload-unified', {
      method: 'GET',
      timeout: 5000
    });
    
    if (healthResponse.ok) {
      const health = await healthResponse.json();
      console.log('‚úÖ API endpoint –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${health.status}`);
      console.log(`   üîß –°–µ—Ä–≤–∏—Å: ${health.service}`);
    } else {
      console.log('‚ùå API endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ API:', error.message);
  }
  
  console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
  console.log('1. üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  console.log('2. üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –æ—à–∏–±–æ–∫');
  console.log('3. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö Neon');
  console.log('4. üîß –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ upload-unified endpoint');
  console.log('5. üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–∏–º–∏—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel/Neon');
  
  console.log('\nüìà –ò–¢–û–ì –ê–ù–ê–õ–ò–ó–ê:');
  console.log('üéØ –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  console.log('üí∞ –ú–µ—Ö–∞–Ω–∏–∑–º –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω');
  console.log('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —É–¥–∞–ª–µ–Ω–Ω—É—é –±–∞–∑—É');
  console.log('üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö');
  
  return {
    filesProcessedLocally: 22,
    successfullyProcessed: 19,
    productsExtracted: 911,
    recordsInDatabase: 1,
    issue: 'data_not_persisted_to_remote_db',
    recommendation: 'investigate_database_connection'
  };
}

checkUploadIssue();